{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "legacyUri",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "enum AuthType",
          "name": "authType",
          "type": "uint8"
        }
      ],
      "name": "AuthTypeNotFoundInVerifiedResult",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BadgesNonTransferrable",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "appId",
          "type": "bytes16"
        },
        {
          "internalType": "address",
          "name": "configOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "attacker",
          "type": "address"
        }
      ],
      "name": "NotZKBadgeConfigOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "TokenIdAlreadyUsedFromLegacy",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "VaultIdNotUsedForTokenId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vaultIdWithZKBadge",
          "type": "uint256"
        }
      ],
      "name": "ZKBadgeAlreadyMintedWithAnotherVaultId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "ZKBadgeAlreadyMintedWithVaultId",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ZKBadgeConfigAlreadyRegistered",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes16",
                  "name": "appId",
                  "type": "bytes16"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isImpersonationMode",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct VaultConfig",
                  "name": "vault",
                  "type": "tuple"
                }
              ],
              "internalType": "struct SismoConnectConfig",
              "name": "config",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "enum AuthType",
                  "name": "authType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "userId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isAnon",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isOptional",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isSelectableByUser",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct AuthRequest[]",
              "name": "authRequests",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ClaimType",
                  "name": "claimType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes16",
                  "name": "groupId",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes16",
                  "name": "groupTimestamp",
                  "type": "bytes16"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isOptional",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isSelectableByUser",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct ClaimRequest[]",
              "name": "claimRequests",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IZKBadgeMinter.ZKBadgeConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "ZKBadgeConfigRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes16",
                  "name": "appId",
                  "type": "bytes16"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isImpersonationMode",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct VaultConfig",
                  "name": "vault",
                  "type": "tuple"
                }
              ],
              "internalType": "struct SismoConnectConfig",
              "name": "config",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "enum AuthType",
                  "name": "authType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "userId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isAnon",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isOptional",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isSelectableByUser",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct AuthRequest[]",
              "name": "authRequests",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ClaimType",
                  "name": "claimType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes16",
                  "name": "groupId",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes16",
                  "name": "groupTimestamp",
                  "type": "bytes16"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isOptional",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isSelectableByUser",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct ClaimRequest[]",
              "name": "claimRequests",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct IZKBadgeMinter.ZKBadgeConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "ZKBadgeConfigUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "timestamp",
              "type": "uint32"
            }
          ],
          "indexed": false,
          "internalType": "struct IZKBadgeMinter.ZKBadgeData",
          "name": "zkBadgeData",
          "type": "tuple"
        }
      ],
      "name": "ZKBadgeMinted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "timestamp",
              "type": "uint32"
            }
          ],
          "indexed": false,
          "internalType": "struct IZKBadgeMinter.ZKBadgeData",
          "name": "zkBadgeData",
          "type": "tuple"
        }
      ],
      "name": "ZKBadgeRenewed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ADDRESSES_PROVIDER_V2",
      "outputs": [
        {
          "internalType": "contract IAddressesProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "APP_ID",
      "outputs": [
        {
          "internalType": "bytes16",
          "name": "",
          "type": "bytes16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONFIG_REGISTRANT_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ZK_BADGE_CONFIG_OWNER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EVENT_TRIGGERER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IMPLEMENTATION_VERSION",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_IMPERSONATION_MODE",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SISMO_CONNECT_LIB_VERSION",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "balanceOfVaultId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isSelectableByUser",
          "type": "bool"
        }
      ],
      "name": "buildSignature",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "isSelectableByUser",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignatureRequest",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "buildSignature",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "isSelectableByUser",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignatureRequest",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "isSelectableByUser",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "buildSignature",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "isSelectableByUser",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignatureRequest",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        },
        {
          "internalType": "bool",
          "name": "isSelectableByUser",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "buildSignature",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "isSelectableByUser",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignatureRequest",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "responseBytes",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "claimWithSismoConnect",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "config",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes16",
              "name": "appId",
              "type": "bytes16"
            },
            {
              "components": [
                {
                  "internalType": "bool",
                  "name": "isImpersonationMode",
                  "type": "bool"
                }
              ],
              "internalType": "struct VaultConfig",
              "name": "vault",
              "type": "tuple"
            }
          ],
          "internalType": "struct SismoConnectConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAttestationsRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "getAttributeValueForBadge",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getAttributesNamesAndValuesForBadge",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint8[]",
          "name": "",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getBadgeExtraData",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getBadgeIssuer",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getBadgeTimestamp",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getZKBadgeConfig",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "bytes16",
                  "name": "appId",
                  "type": "bytes16"
                },
                {
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isImpersonationMode",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct VaultConfig",
                  "name": "vault",
                  "type": "tuple"
                }
              ],
              "internalType": "struct SismoConnectConfig",
              "name": "config",
              "type": "tuple"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "enum AuthType",
                  "name": "authType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "userId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isAnon",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isOptional",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isSelectableByUser",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct AuthRequest[]",
              "name": "authRequests",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "enum ClaimType",
                  "name": "claimType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes16",
                  "name": "groupId",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes16",
                  "name": "groupTimestamp",
                  "type": "bytes16"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isOptional",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isSelectableByUser",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct ClaimRequest[]",
              "name": "claimRequests",
              "type": "tuple[]"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "internalType": "struct IZKBadgeMinter.ZKBadgeConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newUri",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vaultId",
          "type": "uint256"
        }
      ],
      "name": "isVaultIdUsedForTokenId",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "appId",
          "type": "bytes16"
        },
        {
          "internalType": "bool",
          "name": "isImpersonationMode",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "enum AuthType",
              "name": "authType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "userId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isAnon",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isOptional",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isSelectableByUser",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AuthRequest[]",
          "name": "authRequests",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum ClaimType",
              "name": "claimType",
              "type": "uint8"
            },
            {
              "internalType": "bytes16",
              "name": "groupId",
              "type": "bytes16"
            },
            {
              "internalType": "bytes16",
              "name": "groupTimestamp",
              "type": "bytes16"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isOptional",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isSelectableByUser",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ClaimRequest[]",
          "name": "claimRequests",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "registerZKBadgeConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "responseBytes",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "renewWithSismoConnect",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "attestationsRegistry",
          "type": "address"
        }
      ],
      "name": "setAttestationsRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "legacyUri",
          "type": "string"
        }
      ],
      "name": "setLegacyUri",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newUri",
          "type": "string"
        }
      ],
      "name": "setUri",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "triggerTransferEvent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes16",
          "name": "appId",
          "type": "bytes16"
        },
        {
          "internalType": "bool",
          "name": "isImpersonationMode",
          "type": "bool"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "enum AuthType",
              "name": "authType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "userId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isAnon",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isOptional",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isSelectableByUser",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AuthRequest[]",
          "name": "authRequests",
          "type": "tuple[]"
        },
        {
          "components": [
            {
              "internalType": "enum ClaimType",
              "name": "claimType",
              "type": "uint8"
            },
            {
              "internalType": "bytes16",
              "name": "groupId",
              "type": "bytes16"
            },
            {
              "internalType": "bytes16",
              "name": "groupTimestamp",
              "type": "bytes16"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isOptional",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isSelectableByUser",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "internalType": "struct ClaimRequest[]",
          "name": "claimRequests",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "updateZKBadgeConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101606040523480156200001257600080fd5b506040516200692a3803806200692a833981016040819052620000359162000731565b6200004260008062000425565b826200004e8162000487565b5080516001600160801b0319166101205260208082015151151561014052604080518082018252601981527f7369736d6f436f6e6e65637456657269666965722d76312e3100000000000000928101929092525163349f642f60e11b8152733cd5334eb64ebbd4003b72022cc25465f1bfcee69163693ec85e91620000d79190600401620007fe565b602060405180830381865afa158015620000f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200011b919062000833565b6001600160a01b0316608052604080518082018252601781527f61757468526571756573744275696c6465722d76312e310000000000000000006020820152905163349f642f60e11b8152733cd5334eb64ebbd4003b72022cc25465f1bfcee69163693ec85e91620001919190600401620007fe565b602060405180830381865afa158015620001af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001d5919062000833565b6001600160a01b031660a052604080518082018252601881527f636c61696d526571756573744275696c6465722d76312e3100000000000000006020820152905163349f642f60e11b8152733cd5334eb64ebbd4003b72022cc25465f1bfcee69163693ec85e916200024b9190600401620007fe565b602060405180830381865afa15801562000269573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200028f919062000833565b6001600160a01b031660c052604080518082018252601581527f7369676e61747572654275696c6465722d76312e3100000000000000000000006020820152905163349f642f60e11b8152733cd5334eb64ebbd4003b72022cc25465f1bfcee69163693ec85e91620003059190600401620007fe565b602060405180830381865afa15801562000323573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000349919062000833565b6001600160a01b031660e052604080518082018252601381527f726571756573744275696c6465722d76312e31000000000000000000000000006020820152905163349f642f60e11b8152733cd5334eb64ebbd4003b72022cc25465f1bfcee69163693ec85e91620003bf9190600401620007fe565b602060405180830381865afa158015620003dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000403919062000833565b6001600160a01b031661010052506200041d828262000499565b5050620009b3565b6200044c604080518082018252600080825282516020818101909452908152909182015290565b506040805180820182526001600160801b03199390931683528051602080820183526000909152815180820190925291151581529082015290565b6004620004958282620008e7565b5050565b600054600490610100900460ff16158015620004bc575060005460ff8083169116105b620005245760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840160405180910390fd5b6000805461ffff191660ff8316176101001781556200054390620005b4565b511580620005505750303b155b156200056e57620005618362000487565b6200056e60008362000650565b6000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b606060048054620005c59062000858565b80601f0160208091040260200160405190810160405280929190818152602001828054620005f39062000858565b8015620006445780601f10620006185761010080835404028352916020019162000644565b820191906000526020600020905b8154815290600101906020018083116200062657829003601f168201915b50505050509050919050565b60008281526001602090815260408083206001600160a01b038516845290915290205460ff16620004955760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200070b578181015183820152602001620006f1565b50506000910152565b80516001600160a01b03811681146200072c57600080fd5b919050565b600080604083850312156200074557600080fd5b82516001600160401b03808211156200075d57600080fd5b818501915085601f8301126200077257600080fd5b815181811115620007875762000787620006d8565b604051601f8201601f19908116603f01168101908382118183101715620007b257620007b2620006d8565b81604052828152886020848701011115620007cc57600080fd5b620007df836020830160208801620006ee565b8096505050505050620007f56020840162000714565b90509250929050565b60208152600082518060208401526200081f816040850160208701620006ee565b601f01601f19169190910160400192915050565b6000602082840312156200084657600080fd5b620008518262000714565b9392505050565b600181811c908216806200086d57607f821691505b6020821081036200088e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620008e257600081815260208120601f850160051c81016020861015620008bd5750805b601f850160051c820191505b81811015620008de57828155600101620008c9565b5050505b505050565b81516001600160401b03811115620009035762000903620006d8565b6200091b8162000914845462000858565b8462000894565b602080601f8311600181146200095357600084156200093a5750858301515b600019600386901b1c1916600185901b178555620008de565b600085815260208120601f198616915b82811015620009845788860151825594840194600190910190840162000963565b5085821015620009a35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e051610100516101205161014051615ef162000a396000396000818161055401526115e00152600081816105ef01526115bf015260006126910152600081816112be0152818161147e0152818161239f0152818161242b01526126350152600050506000505060008181610c660152611c080152615ef16000f3fe608060405234801561001057600080fd5b506004361061027e5760003560e01c80637ab4339d1161015c578063b3c1cb21116100ce578063dc0ec5e811610087578063dc0ec5e81461066b578063e0689703146106a8578063e37ffe7c146106bb578063e985e9c5146106dc578063f242432a146106ef578063ff4468c41461070257600080fd5b8063b3c1cb21146105d7578063c187bbc1146105ea578063c9512d991461062a578063cdb7e66414610632578063cea8eb4e14610645578063d547741f1461065857600080fd5b8063a183dc2711610120578063a183dc271461054f578063a217fddf14610576578063a22cb4651461057e578063a75400b314610591578063ac6c3e69146105a4578063aed8c6bc146105c457600080fd5b80637ab4339d146104f0578063869f023e1461050357806391d148541461051657806396d75b93146105295780639b642de11461053c57600080fd5b806344112ed8116101f55780636bd14dfa116101b95780636bd14dfa1461045f5780636e01370e1461048a578063710b30961461049d578063730cb7d5146104b0578063754b377c146104c157806379502c55146104db57600080fd5b806344112ed8146103b657806346916301146103dd57806349161195146103f85780634e1273f4146104185780635a3285961461043857600080fd5b8063248a9ca311610247578063248a9ca31461032c5780632eb2c2d6146103505780632f2ff15d1461036357806336568abe146103765780633e1f3c27146103895780633eca99831461039c57600080fd5b8062fdd58e1461028357806301d682dd146102a957806301ffc9a7146102be5780630e064366146102e15780630e89341c1461030c575b600080fd5b610296610291366004613549565b61072a565b6040519081526020015b60405180910390f35b6102bc6102b73660046136e0565b6107f8565b005b6102d16102cc36600461374f565b610f6f565b60405190151581526020016102a0565b6102f46102ef366004613549565b610f7a565b6040516001600160a01b0390911681526020016102a0565b61031f61031a36600461376c565b610ff7565b6040516102a091906137d5565b61029661033a36600461376c565b6000908152600160208190526040909120015490565b6102bc61035e36600461387c565b611118565b6102bc610371366004613929565b611164565b6102bc610384366004613929565b61118f565b61031f610397366004613549565b61120d565b6102f472c92065f759c3d1c94d08c27a2ab97a1c874cbc81565b6102967fe6cd5415a09470f57cb652d653ef635ecd9a997fef2537decaf18eb7545b7fa481565b6102f4733cd5334eb64ebbd4003b72022cc25465f1bfcee681565b61040b610406366004613972565b611287565b6040516102a091906139d2565b61042b6104263660046139e5565b61132e565b6040516102a09190613aec565b6102967f401f66d300c59cfc80f7c726a9eb9d21ee04bdd3629511a0cfec7a609c00328581565b61029661046d366004613aff565b600091825260086020908152604080842092845291905290205490565b61040b610498366004613b21565b611457565b6102bc6104ab366004613b7a565b611502565b6005546001600160a01b03166102f4565b6104c9600481565b60405160ff90911681526020016102a0565b6104e3611594565b6040516102a09190613bd5565b6102bc6104fe366004613bf9565b611609565b6102bc610511366004613ecc565b611716565b6102d1610524366004613929565b611795565b6102bc610537366004613f93565b6117c0565b6102bc61054a366004613fd7565b611d9a565b6102d17f000000000000000000000000000000000000000000000000000000000000000081565b610296600081565b6102bc61058c36600461400b565b611dae565b6102bc61059f366004613ecc565b611dc7565b6105b76105b236600461376c565b611e86565b6040516102a091906141bb565b6104c96105d236600461426d565b6122bf565b6102bc6105e5366004614292565b612336565b6106117f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160801b031990911681526020016102a0565b610296600281565b6102bc610640366004613fd7565b612364565b61040b6106533660046142af565b612378565b6102bc610666366004613929565b6123de565b6102d1610679366004613aff565b6000918252600860209081526040808420928452919052902060010154600160a01b900463ffffffff16151590565b61040b6106b63660046142f4565b612404565b6106ce6106c936600461376c565b6124b9565b6040516102a092919061436b565b6102d16106ea3660046143e9565b612538565b6102bc6106fd366004614417565b612553565b610715610710366004613549565b612598565b60405163ffffffff90911681526020016102a0565b6000610739826302625a001190565b156107ba5760055460405163461e4f1960e11b8152600481018490526001600160a01b03858116602483015290911690638c3c9e3290604401602060405180830381865afa15801561078f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b3919061447f565b90506107f2565b5060008181526009602090815260408083206001600160a01b0386168452825280832054848452600883528184209084529091529020545b92915050565b600060019050600084806020019051810190610814919061486e565b6000848152600760209081526040808320815161010081018352815460801b6001600160801b03191660c082019081528351808601909452600183015460ff161515845260e082019390935291825260028101805495965093949193909284019161087e90614930565b80601f01602080910402602001604051908101604052809291908181526020018280546108aa90614930565b80156108f75780601f106108cc576101008083540402835291602001916108f7565b820191906000526020600020905b8154815290600101906020018083116108da57829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610a51576000848152602090206040805160c08101909152600484029091018054829060ff16600581111561096057610960614039565b600581111561097157610971614039565b815260018201546020820152600282015460ff80821615156040840152610100820481161515606084015262010000909104161515608082015260038201805460a0909201916109c090614930565b80601f01602080910402602001604051908101604052809291908181526020018280546109ec90614930565b8015610a395780601f10610a0e57610100808354040283529160200191610a39565b820191906000526020600020905b815481529060010190602001808311610a1c57829003601f168201915b50505050508152505081526020019060010190610925565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610bc7576000848152602090206040805160e08101909152600584029091018054829060ff166004811115610ab957610ab9614039565b6004811115610aca57610aca614039565b8152815461010090819004608090811b6001600160801b031990811660208501526001850154821b16604084015260028401546060840152600384015460ff8082161515928501929092529190910416151560a082015260048201805460c090920191610b3690614930565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6290614930565b8015610baf5780601f10610b8457610100808354040283529160200191610baf565b820191906000526020600020905b815481529060010190602001808311610b9257829003601f168201915b50505050508152505081526020019060010190610a7e565b5050509082525060058201546001600160a01b03908116602080840191909152600690930154604092830152838201516060808601518451938c1695840195909552928201899052939450600091610c3c9185918591610c3791015b60405160208183030381529060405261260e565b612672565b60008881526007602052604080822090516312b037ff60e01b815292935090916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916312b037ff91610c9e918a91879190600401614a63565b6000604051808303816000875af1158015610cbd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ce59190810190614e81565b90506000610cf3828261270f565b60008a8152600860209081526040808320848452909152902060010154909150600160a01b900463ffffffff1615610d4d576040516384e5f13b60e01b8152600481018a9052602481018290526044015b60405180910390fd5b610d578a8a61072a565b15610dab5760008981526009602090815260408083206001600160a01b038e168452909152908190205490516313c35aa360e11b8152600481018b9052602481018390526044810191909152606401610d44565b60405180606001604052808981526020018b6001600160a01b031681526020014263ffffffff16815250600860008b815260200190815260200160002060008381526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548163ffffffff021916908363ffffffff16021790555090505080600960008b815260200190815260200160002060008c6001600160a01b03166001600160a01b031681526020019081526020016000208190555080897f151b096e8a345f14b4b6978a01ec99e538cea7208101aca08ab7582edc14a7aa600860008d81526020019081526020016000206000858152602001908152602001600020604051610f119190815481526001909101546001600160a01b038116602083015260a01c63ffffffff16604082015260600190565b60405180910390a3604080518a8152602081018a90526001600160a01b038c169160009130917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050505050505050565b60006107f2826127c2565b6005546040516363ed4d5360e11b8152600481018390526001600160a01b038481166024830152600092169063c7da9aa690604401602060405180830381865afa158015610fcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff09190614f61565b9392505050565b6060611006826302625a001190565b15611014576107f282612802565b60408051602080820183526000918290528482526007905281902090517fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709161106291600290910190614f7e565b604051809103902014611085576000828152600760205260409020600201611088565b60065b805461109390614930565b80601f01602080910402602001604051908101604052809291908181526020018280546110bf90614930565b801561110c5780601f106110e15761010080835404028352916020019161110c565b820191906000526020600020905b8154815290600101906020018083116110ef57829003601f168201915b50505050509050919050565b6001600160a01b03851633148061113457506111348533612538565b6111505760405162461bcd60e51b8152600401610d4490614ff4565b61115d8585858585612811565b5050505050565b60008281526001602081905260409091200154611180816129ff565b61118a8383612a0c565b505050565b6001600160a01b03811633146111ff5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610d44565b6112098282612a77565b5050565b600554604051636d7fbb6760e01b8152600481018390526001600160a01b0384811660248301526060921690636d7fbb6790604401600060405180830381865afa15801561125f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ff09190810190615042565b604080516060808201835280825260006020830152818301529051631f6c2b9760e11b815282151560048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633ed8572e906024015b600060405180830381865afa158015611306573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107f29190810190615115565b606081518351146113935760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610d44565b600083516001600160401b038111156113ae576113ae613575565b6040519080825280602002602001820160405280156113d7578160200160208202803683370190505b50905060005b845181101561144f576114228582815181106113fb576113fb615149565b602002602001015185838151811061141557611415615149565b602002602001015161072a565b82828151811061143457611434615149565b602090810291909101015261144881615175565b90506113dd565b509392505050565b604080516060808201835280825260006020830152818301529051631778ed1360e21b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635de3b44c906114bd908690869060040161518e565b600060405180830381865afa1580156114da573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ff09190810190615115565b7fe6cd5415a09470f57cb652d653ef635ecd9a997fef2537decaf18eb7545b7fa461152c816129ff565b836001600160a01b0316856001600160a01b0316876001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628686604051611584929190918252602082015260400190565b60405180910390a4505050505050565b6115ba604080518082018252600080825282516020818101909452908152909182015290565b6116047f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612ade565b905090565b600054600490610100900460ff1615801561162b575060005460ff8083169116105b61168e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610d44565b6000805461ffff191660ff8316176101001781556116ab90612802565b5115806116b75750303b155b156116d0576116c583612b4c565b6116d0600083612a0c565b6000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b7f401f66d300c59cfc80f7c726a9eb9d21ee04bdd3629511a0cfec7a609c003285611740816129ff565b6000828152600760205260409020600501546001600160a01b03161561177c57604051639c454f9760e01b815260048101839052602401610d44565b61178b88888888888888612b58565b5050505050505050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6000828060200190518101906117d6919061486e565b6000838152600760209081526040808320815161010081018352815460801b6001600160801b03191660c082019081528351808601909452600183015460ff161515845260e082019390935291825260028101805495965093949193909284019161184090614930565b80601f016020809104026020016040519081016040528092919081815260200182805461186c90614930565b80156118b95780601f1061188e576101008083540402835291602001916118b9565b820191906000526020600020905b81548152906001019060200180831161189c57829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611a13576000848152602090206040805160c08101909152600484029091018054829060ff16600581111561192257611922614039565b600581111561193357611933614039565b815260018201546020820152600282015460ff80821615156040840152610100820481161515606084015262010000909104161515608082015260038201805460a09092019161198290614930565b80601f01602080910402602001604051908101604052809291908181526020018280546119ae90614930565b80156119fb5780601f106119d0576101008083540402835291602001916119fb565b820191906000526020600020905b8154815290600101906020018083116119de57829003601f168201915b505050505081525050815260200190600101906118e7565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611b89576000848152602090206040805160e08101909152600584029091018054829060ff166004811115611a7b57611a7b614039565b6004811115611a8c57611a8c614039565b8152815461010090819004608090811b6001600160801b031990811660208501526001850154821b16604084015260028401546060840152600384015460ff8082161515928501929092529190910416151560a082015260048201805460c090920191611af890614930565b80601f0160208091040260200160405190810160405280929190818152602001828054611b2490614930565b8015611b715780601f10611b4657610100808354040283529160200191611b71565b820191906000526020600020905b815481529060010190602001808311611b5457829003601f168201915b50505050508152505081526020019060010190611a40565b5050509082525060058201546001600160a01b031660208083019190915260069092015460409182015282810151606084015182519384018890529394509291600091611bde9185918591610c379101610c23565b60008781526007602052604080822090516312b037ff60e01b815292935090916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916312b037ff91611c40918a91879190600401614a63565b6000604051808303816000875af1158015611c5f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c879190810190614e81565b90506000611c95828261270f565b6000898152600860209081526040808320848452909152812060010154919250600160a01b90910463ffffffff169003611cec5760405163e39a92b760e01b81526004810189905260248101829052604401610d44565b600088815260086020908152604080832084845280835281842060018101805463ffffffff4216600160a01b0263ffffffff60a01b19909116179055938590529091525182918a917f143614a05a1facad63ed89ba02e510ec8c36cdc2e98a186044de5d3c30195a4391611d8791815481526001909101546001600160a01b038116602083015260a01c63ffffffff16604082015260600190565b60405180910390a3505050505050505050565b6000611da5816129ff565b61120982612bc3565b6040516309a711b960e31b815260040160405180910390fd5b6000818152600760205260409020600501546001600160a01b0316338114611e23576040516327310c2560e21b81526001600160801b0319891660048201526001600160a01b0382166024820152336044820152606401610d44565b611e3288888888888888612bcf565b817f8ed7a0bc75f77e269c7a6adb735cfc724fd2c5d7e57df975414e59e9c2592a7b60076000858152602001908152602001600020604051611e749190615306565b60405180910390a25050505050505050565b611ee66040805161010081018252600060c0820181815283516020810190945290835260e0820192909252908190815260200160608152602001606081526020016060815260200160006001600160a01b03168152602001600081525090565b600082815260076020908152604091829020825161010081018452815460801b6001600160801b03191660c082019081528451808501909552600183015460ff161515855260e08201949094529283526002810180549192840191611f4a90614930565b80601f0160208091040260200160405190810160405280929190818152602001828054611f7690614930565b8015611fc35780601f10611f9857610100808354040283529160200191611fc3565b820191906000526020600020905b815481529060010190602001808311611fa657829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561211d576000848152602090206040805160c08101909152600484029091018054829060ff16600581111561202c5761202c614039565b600581111561203d5761203d614039565b815260018201546020820152600282015460ff80821615156040840152610100820481161515606084015262010000909104161515608082015260038201805460a09092019161208c90614930565b80601f01602080910402602001604051908101604052809291908181526020018280546120b890614930565b80156121055780601f106120da57610100808354040283529160200191612105565b820191906000526020600020905b8154815290600101906020018083116120e857829003601f168201915b50505050508152505081526020019060010190611ff1565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015612293576000848152602090206040805160e08101909152600584029091018054829060ff16600481111561218557612185614039565b600481111561219657612196614039565b8152815461010090819004608090811b6001600160801b031990811660208501526001850154821b16604084015260028401546060840152600384015460ff8082161515928501929092529190910416151560a082015260048201805460c09092019161220290614930565b80601f016020809104026020016040519081016040528092919081815260200182805461222e90614930565b801561227b5780601f106122505761010080835404028352916020019161227b565b820191906000526020600020905b81548152906001019060200180831161225e57829003601f168201915b5050505050815250508152602001906001019061214a565b5050509082525060058201546001600160a01b0316602082015260069091015460409091015292915050565b600554604051630e972f9160e41b81526004810184905260ff831660248201526000916001600160a01b03169063e972f91090604401602060405180830381865afa158015612312573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff0919061545d565b6000612341816129ff565b50600580546001600160a01b0319166001600160a01b0392909216919091179055565b600061236f816129ff565b61120982612b4c565b604080516060808201835280825260006020830152818301529051631d1db46b60e21b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637476d1ac906114bd908690869060040161547a565b600082815260016020819052604090912001546123fa816129ff565b61118a8383612a77565b604080516060808201835280825260006020830152818301529051631f785c9560e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631f785c959061246c90879087908790600401615495565b600060405180830381865afa158015612489573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124b19190810190615115565b949350505050565b600554604051632b2bf81b60e11b81526004810183905260609182916001600160a01b0390911690635657f03690602401600060405180830381865afa158015612507573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261252f919081019061553b565b91509150915091565b60006040516309a711b960e31b815260040160405180910390fd5b6001600160a01b03851633148061256f575061256f8533612538565b61258b5760405162461bcd60e51b8152600401610d4490614ff4565b61115d8585858585612c84565b6005546040516314067f8b60e01b8152600481018390526001600160a01b03848116602483015260009216906314067f8b90604401602060405180830381865afa1580156125ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff091906155f7565b604080516060808201835280825260006020830152818301529051631a0d7ccb60e21b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636835f32c906112e99085906004016137d5565b61267a6134d4565b604051634c92019b60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906399240336906126ca908790879087906004016156c6565b600060405180830381865afa1580156126e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124b191908101906159c9565b6000805b8360600151518110156127a65782600581111561273257612732614039565b8460600151828151811061274857612748615149565b602002602001015160000151600581111561276557612765614039565b03612794578360600151818151811061278057612780615149565b6020026020010151604001519150506107f2565b8061279e81615175565b915050612713565b508160405163267ac2cf60e01b8152600401610d449190615a92565b60006001600160e01b03198216636cdb3d1360e11b14806127f357506001600160e01b031982166303a24d0760e21b145b806107f257506107f282612dc0565b60606004805461109390614930565b81518351146128735760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610d44565b6001600160a01b0384166128995760405162461bcd60e51b8152600401610d4490615aa0565b336128a8818787878787611dae565b60005b84518110156129915760008582815181106128c8576128c8615149565b6020026020010151905060008583815181106128e6576128e6615149565b60209081029190910181015160008481526002835260408082206001600160a01b038e1683529093529190912054909150818110156129375760405162461bcd60e51b8152600401610d4490615ae5565b60008381526002602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290612976908490615b2f565b925050819055505050508061298a90615175565b90506128ab565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516129e1929190615b42565b60405180910390a46129f7818787878787612df5565b505050505050565b612a098133612f59565b50565b612a168282611795565b6112095760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b612a818282611795565b156112095760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b612b04604080518082018252600080825282516020818101909452908152909182015290565b6040518060400160405280846001600160801b0319168152602001612b4384604080516020808201835260009091528151908101909152901515815290565b90529392505050565b60046112098282615bad565b612b6181612fb2565b612b7087878787878787612bcf565b807f2ca78c31fd1a7ac9bf2b3458f3f8376fa02d7b7022de5b91be03587a3619fc7e60076000848152602001908152602001600020604051612bb29190615306565b60405180910390a250505050505050565b60066112098282615bad565b600081815260076020526040902080546001600160801b031916608089901c17815560018101805460ff1916881515179055600201612c0e8682615bad565b50612c198185612ff4565b612c2381846130f7565b6001600160a01b03821615612c385781612c4d565b72c92065f759c3d1c94d08c27a2ab97a1c874cbc5b60009182526007602052604090912060050180546001600160a01b0319166001600160a01b03909216919091179055505050505050565b6001600160a01b038416612caa5760405162461bcd60e51b8152600401610d4490615aa0565b336000612cb68561321c565b90506000612cc38561321c565b9050612cd3838989858589611dae565b60008681526002602090815260408083206001600160a01b038c16845290915290205485811015612d165760405162461bcd60e51b8152600401610d4490615ae5565b60008781526002602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290612d55908490615b2f565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612db5848a8a8a8a8a613267565b505050505050505050565b60006001600160e01b03198216637965db0b60e01b14806107f257506301ffc9a760e01b6001600160e01b03198316146107f2565b6001600160a01b0384163b156129f75760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190612e399089908990889088908890600401615c6c565b6020604051808303816000875af1925050508015612e74575060408051601f3d908101601f19168201909252612e7191810190615cca565b60015b612f2057612e80615ce7565b806308c379a003612eb95750612e94615d02565b80612e9f5750612ebb565b8060405162461bcd60e51b8152600401610d4491906137d5565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610d44565b6001600160e01b0319811663bc197c8160e01b14612f505760405162461bcd60e51b8152600401610d4490615d8b565b50505050505050565b612f638282611795565b61120957612f7081613322565b612f7b836020613334565b604051602001612f8c929190615dd3565b60408051601f198184030181529082905262461bcd60e51b8252610d44916004016137d5565b612fbf816302625a001190565b15612fe05760405163b061c8d760e01b815260048101829052602401610d44565b600081815260076020526040902060060155565b6000828152600760205260408120600301905b82518110156130f1578183828151811061302357613023615149565b60209081029190910181015182546001818101855560009485529290932081516004909402018054919390929091839160ff199091169083600581111561306c5761306c614039565b0217905550602082015160018201556040820151600282018054606085015160808601511515620100000262ff0000199115156101000261ff00199515159590951661ffff1990931692909217939093179290921691909117905560a082015160038201906130db9082615bad565b50505080806130e990615175565b915050613007565b50505050565b6000828152600760205260408120600401905b82518110156130f1578183828151811061312657613126615149565b60209081029190910181015182546001818101855560009485529290932081516005909402018054919390929091839160ff199091169083600481111561316f5761316f614039565b02179055506020820151815470ffffffffffffffffffffffffffffffff001916610100608092831c810291909117835560408401516001840180546001600160801b03191691841c919091179055606084015160028401559083015160038301805460a086015161ffff1990911692151561ff0019169290921791151590920217905560c082015160048201906132069082615bad565b505050808061321490615175565b91505061310a565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061325657613256615149565b602090810291909101015292915050565b6001600160a01b0384163b156129f75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906132ab9089908990889088908890600401615e48565b6020604051808303816000875af19250505080156132e6575060408051601f3d908101601f191682019092526132e391810190615cca565b60015b6132f257612e80615ce7565b6001600160e01b0319811663f23a6e6160e01b14612f505760405162461bcd60e51b8152600401610d4490615d8b565b60606107f26001600160a01b03831660145b60606000613343836002615e8d565b61334e906002615b2f565b6001600160401b0381111561336557613365613575565b6040519080825280601f01601f19166020018201604052801561338f576020820181803683370190505b509050600360fc1b816000815181106133aa576133aa615149565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106133d9576133d9615149565b60200101906001600160f81b031916908160001a90535060006133fd846002615e8d565b613408906001615b2f565b90505b6001811115613480576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061343c5761343c615149565b1a60f81b82828151811061345257613452615149565b60200101906001600160f81b031916908160001a90535060049490941c9361347981615ea4565b905061340b565b508315610ff05760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610d44565b905290565b604051806080016040528060006001600160801b031916815260200160608152602001606081526020016134cf604051806060016040528060608152602001600015158152602001606081525090565b6001600160a01b0381168114612a0957600080fd5b803561354481613524565b919050565b6000806040838503121561355c57600080fd5b823561356781613524565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60c081018181106001600160401b03821117156135aa576135aa613575565b60405250565b60a081018181106001600160401b03821117156135aa576135aa613575565b608081018181106001600160401b03821117156135aa576135aa613575565b601f8201601f191681016001600160401b038111828210171561361357613613613575565b6040525050565b60405160e081016001600160401b038111828210171561363c5761363c613575565b60405290565b60405161364e816135b0565b90565b60405161364e8161358b565b60006001600160401b0382111561367657613676613575565b50601f01601f191660200190565b600082601f83011261369557600080fd5b81356136a08161365d565b6040516136ad82826135ee565b8281528560208487010111156136c257600080fd5b82602086016020830137600092810160200192909252509392505050565b6000806000606084860312156136f557600080fd5b83356001600160401b0381111561370b57600080fd5b61371786828701613684565b935050602084013561372881613524565b929592945050506040919091013590565b6001600160e01b031981168114612a0957600080fd5b60006020828403121561376157600080fd5b8135610ff081613739565b60006020828403121561377e57600080fd5b5035919050565b60005b838110156137a0578181015183820152602001613788565b50506000910152565b600081518084526137c1816020860160208601613785565b601f01601f19169290920160200192915050565b602081526000610ff060208301846137a9565b60006001600160401b0382111561380157613801613575565b5060051b60200190565b600082601f83011261381c57600080fd5b81356020613829826137e8565b60405161383682826135ee565b83815260059390931b850182019282810191508684111561385657600080fd5b8286015b84811015613871578035835291830191830161385a565b509695505050505050565b600080600080600060a0868803121561389457600080fd5b853561389f81613524565b945060208601356138af81613524565b935060408601356001600160401b03808211156138cb57600080fd5b6138d789838a0161380b565b945060608801359150808211156138ed57600080fd5b6138f989838a0161380b565b9350608088013591508082111561390f57600080fd5b5061391c88828901613684565b9150509295509295909350565b6000806040838503121561393c57600080fd5b82359150602083013561394e81613524565b809150509250929050565b8015158114612a0957600080fd5b803561354481613959565b60006020828403121561398457600080fd5b8135610ff081613959565b60008151606084526139a460608501826137a9565b9050602083015115156020850152604083015184820360408601526139c982826137a9565b95945050505050565b602081526000610ff0602083018461398f565b600080604083850312156139f857600080fd5b82356001600160401b0380821115613a0f57600080fd5b818501915085601f830112613a2357600080fd5b81356020613a30826137e8565b604051613a3d82826135ee565b83815260059390931b8501820192828101915089841115613a5d57600080fd5b948201945b83861015613a84578535613a7581613524565b82529482019490820190613a62565b96505086013592505080821115613a9a57600080fd5b50613aa78582860161380b565b9150509250929050565b600081518084526020808501945080840160005b83811015613ae157815187529582019590820190600101613ac5565b509495945050505050565b602081526000610ff06020830184613ab1565b60008060408385031215613b1257600080fd5b50508035926020909101359150565b60008060408385031215613b3457600080fd5b82356001600160401b0380821115613b4b57600080fd5b613b5786838701613684565b93506020850135915080821115613b6d57600080fd5b50613aa785828601613684565b600080600080600060a08688031215613b9257600080fd5b8535613b9d81613524565b94506020860135613bad81613524565b93506040860135613bbd81613524565b94979396509394606081013594506080013592915050565b81516001600160801b031916815260208083015151151590820152604081016107f2565b60008060408385031215613c0c57600080fd5b82356001600160401b03811115613c2257600080fd5b613c2e85828601613684565b925050602083013561394e81613524565b6001600160801b031981168114612a0957600080fd5b803561354481613c3f565b60068110612a0957600080fd5b600082601f830112613c7e57600080fd5b81356020613c8b826137e8565b60408051613c9983826135ee565b84815260059490941b8601830193838101925087851115613cb957600080fd5b8387015b85811015613d835780356001600160401b0380821115613cdd5760008081fd5b9089019060c0828c03601f1901811315613cf75760008081fd5b8551613d028161358b565b88840135613d0f81613c60565b815283870135898201526060613d26818601613967565b888301526080613d37818701613967565b8284015260a09150613d4a828701613967565b90830152918401359183831115613d615760008081fd5b613d6f8e8b85880101613684565b908201528752505050928401928401613cbd565b50979650505050505050565b60058110612a0957600080fd5b803561354481613d8f565b600082601f830112613db857600080fd5b81356020613dc5826137e8565b60408051613dd383826135ee565b84815260059490941b8601830193838101925087851115613df357600080fd5b8387015b85811015613d835780356001600160401b0380821115613e175760008081fd5b9089019060e0828c03601f1901811315613e315760008081fd5b613e3961361a565b613e44898501613d9c565b8152613e51878501613c55565b898201526060613e62818601613c55565b888301526080808601358284015260a09150613e7f828701613967565b9083015260c0613e90868201613967565b83830152928501359284841115613ea957600091508182fd5b613eb78f8c86890101613684565b90830152508752505050928401928401613df7565b600080600080600080600060e0888a031215613ee757600080fd5b8735613ef281613c3f565b96506020880135613f0281613959565b955060408801356001600160401b0380821115613f1e57600080fd5b613f2a8b838c01613684565b965060608a0135915080821115613f4057600080fd5b613f4c8b838c01613c6d565b955060808a0135915080821115613f6257600080fd5b50613f6f8a828b01613da7565b935050613f7e60a08901613539565b915060c0880135905092959891949750929550565b60008060408385031215613fa657600080fd5b82356001600160401b03811115613fbc57600080fd5b613fc885828601613684565b95602094909401359450505050565b600060208284031215613fe957600080fd5b81356001600160401b03811115613fff57600080fd5b6124b184828501613684565b6000806040838503121561401e57600080fd5b823561402981613524565b9150602083013561394e81613959565b634e487b7160e01b600052602160045260246000fd5b6006811061405f5761405f614039565b9052565b600081518084526020808501808196508360051b8101915082860160005b858110156140f5578284038952815160c061409d86835161404f565b818701518688015260408083015115159087015260608083015115159087015260808083015115159087015260a0918201519186018190526140e1818701836137a9565b9a87019a9550505090840190600101614081565b5091979650505050505050565b6005811061405f5761405f614039565b600081518084526020808501808196508360051b8101915082860160005b858110156140f5578284038952815160e061414c868351614102565b818701516001600160801b031990811687890152604080840151909116908701526060808301519087015260808083015115159087015260a08083015115159087015260c0918201519186018190526141a7818701836137a9565b9a87019a9550505090840190600101614130565b6020808252825180516001600160801b03191683830152015151151560408201526000602083015160e060608401526141f86101008401826137a9565b90506040840151601f19808584030160808601526142168383614063565b925060608601519150808584030160a0860152506142348282614112565b60808601516001600160a01b031660c086015260a09095015160e090940193909352509192915050565b60ff81168114612a0957600080fd5b6000806040838503121561428057600080fd5b82359150602083013561394e8161425e565b6000602082840312156142a457600080fd5b8135610ff081613524565b600080604083850312156142c257600080fd5b82356142cd81613959565b915060208301356001600160401b038111156142e857600080fd5b613aa785828601613684565b60008060006060848603121561430957600080fd5b83356001600160401b038082111561432057600080fd5b61432c87838801613684565b94506020860135915061433e82613959565b9092506040850135908082111561435457600080fd5b5061436186828701613684565b9150509250925092565b604080825283519082018190526000906020906060840190828701845b828110156143a457815184529284019290840190600101614388565b5050508381038285015284518082528583019183019060005b818110156143dc57835160ff16835292840192918401916001016143bd565b5090979650505050505050565b600080604083850312156143fc57600080fd5b823561440781613524565b9150602083013561394e81613524565b600080600080600060a0868803121561442f57600080fd5b853561443a81613524565b9450602086013561444a81613524565b9350604086013592506060860135915060808601356001600160401b0381111561447357600080fd5b61391c88828901613684565b60006020828403121561449157600080fd5b5051919050565b805161354481613c3f565b600082601f8301126144b457600080fd5b81516144bf8161365d565b6040516144cc82826135ee565b8281528560208487010111156144e157600080fd5b6139c9836020830160208801613785565b805161354481613959565b600082601f83011261450e57600080fd5b8151602061451b826137e8565b6040805161452983826135ee565b84815260059490941b860183019383810192508785111561454957600080fd5b8387015b85811015613d835780516001600160401b038082111561456d5760008081fd5b9089019060a0828c03601f19018113156145875760008081fd5b8551614592816135b0565b8884015161459f81613c60565b8152838701516145ae81613959565b818a01526060848101516145c181613959565b82890152608085810151828401529285015192848411156145e457600091508182fd5b6145f28f8c868901016144a3565b9083015250875250505092840192840161454d565b805161354481613d8f565b600082601f83011261462357600080fd5b81516020614630826137e8565b6040805161463e83826135ee565b84815260059490941b860183019383810192508785111561465e57600080fd5b8387015b85811015613d835780516001600160401b03808211156146825760008081fd5b9089019060c0828c03601f190181131561469c5760008081fd5b85516146a78161358b565b888401516146b481613d8f565b81526146c1848801614498565b8982015260606146d2818601614498565b8883015260806146e38187016144f2565b8284015260a09150818601518184015250828501519250838311156147085760008081fd5b6147168e8b858801016144a3565b908201528752505050928401928401614662565b600082601f83011261473b57600080fd5b81516020614748826137e8565b60405161475582826135ee565b83815260059390931b850182019282810191508684111561477557600080fd5b8286015b848110156138715780516001600160401b03808211156147995760008081fd5b9088019060a0828b03601f19018113156147b35760008081fd5b6147bb613642565b87840151838111156147cd5760008081fd5b6147db8d8a838801016144fd565b8252506040840151838111156147f15760008081fd5b6147ff8d8a83880101614612565b89830152506060808501516040830152608080860151858111156148235760008081fd5b6148318f8c838a01016144a3565b848401525092850151928484111561484b57600091508182fd5b6148598e8b868901016144a3565b90830152508652505050918301918301614779565b60006020828403121561488057600080fd5b81516001600160401b038082111561489757600080fd5b9083019060a082860312156148ab57600080fd5b6040516148b7816135b0565b82516148c281613c3f565b81526148d060208401614498565b6020820152604083015160408201526060830151828111156148f157600080fd5b6148fd878286016144a3565b60608301525060808301518281111561491557600080fd5b6149218782860161472a565b60808301525095945050505050565b600181811c9082168061494457607f821691505b60208210810361496457634e487b7160e01b600052602260045260246000fd5b50919050565b600081518084526020808501808196508360051b8101915082860160005b858110156140f5578284038952815160c06149a4868351614102565b818701516001600160801b031990811687890152604080840151909116908701526060808301511515908701526080808301519087015260a0918201519186018190526149f3818701836137a9565b9a87019a9550505090840190600101614988565b6001600160801b031981511682526000602082015160806020850152614a306080850182614063565b905060408301518482036040860152614a498282614112565b915050606083015184820360608601526139c9828261398f565b600060808083526001600160801b0319808751168285015260208088015182811660a087015250604088015191508160c08601526060880151915060a060e0860152614ab36101208601836137a9565b88840151868203607f1901610100880152805180835291935082019082840190600581901b8501840160005b82811015614bec57601f198783030184528451805160a0808552815190850181905260c0600582901b86018101928a01919086019060005b81811015614b815760bf198886030183528351614b3586825161404f565b8c81015115158d870152604081015115156040870152606081015160608701528e810151905060a08f870152614b6e60a08701826137a9565b955050928b0192918b0191600101614b17565b505050508782015184820389860152614b9a828261496a565b9150506040820151604085015260608201518482036060860152614bbe82826137a9565b9150508982015191508381038a850152614bd881836137a9565b968801969588019593505050600101614adf565b50888103858a0152614bfe818c614a07565b9750505050505050506124b16040830184805460801b6001600160801b03191682526001015460ff161515602090910152565b600082601f830112614c4257600080fd5b81516020614c4f826137e8565b60408051614c5d83826135ee565b84815260059490941b8601830193838101925087851115614c7d57600080fd5b8387015b85811015613d835780516001600160401b0380821115614ca057600080fd5b9089019060a0828c03601f19011215614cb95760008081fd5b8451614cc4816135b0565b87830151614cd181613c60565b8152614cde8387016144f2565b888201526060808401518783015260808085015184811115614d005760008081fd5b614d0e8f8c838901016144a3565b838501525060a0850151915083821115614d285760008081fd5b614d368e8b848801016144a3565b908301525086525050928401928401614c81565b600082601f830112614d5b57600080fd5b81516020614d68826137e8565b604051614d7582826135ee565b83815260059390931b8501820192828101915086841115614d9557600080fd5b8286015b848110156138715780516001600160401b0380821115614db95760008081fd5b9088019060e0828b03601f1901811315614dd35760008081fd5b614ddb61361a565b614de6888501614607565b8152614df460408501614498565b888201526060614e05818601614498565b60408301526080808601518284015260a091508186015185811115614e2a5760008081fd5b614e388f8c838a01016144a3565b82850152505060c0808601518284015283860151935084841115614e5e57600091508182fd5b614e6c8e8b868901016144a3565b90830152508652505050918301918301614d99565b600060208284031215614e9357600080fd5b81516001600160401b0380821115614eaa57600080fd5b9083019060c08286031215614ebe57600080fd5b614ec6613651565b614ecf83614498565b8152614edd60208401614498565b602082015260408301516040820152606083015182811115614efe57600080fd5b614f0a87828601614c31565b606083015250608083015182811115614f2257600080fd5b614f2e87828601614d4a565b60808301525060a083015182811115614f4657600080fd5b614f52878286016144a3565b60a08301525095945050505050565b600060208284031215614f7357600080fd5b8151610ff081613524565b6000808354614f8c81614930565b60018281168015614fa45760018114614fb957614fe8565b60ff1984168752821515830287019450614fe8565b8760005260208060002060005b85811015614fdf5781548a820152908401908201614fc6565b50505082870194505b50929695505050505050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b60006020828403121561505457600080fd5b81516001600160401b0381111561506a57600080fd5b6124b1848285016144a3565b60006060828403121561508857600080fd5b604051606081016001600160401b0382821081831117156150ab576150ab613575565b8160405282935084519150808211156150c357600080fd5b6150cf868387016144a3565b8352602085015191506150e182613959565b81602084015260408501519150808211156150fb57600080fd5b50615108858286016144a3565b6040830152505092915050565b60006020828403121561512757600080fd5b81516001600160401b0381111561513d57600080fd5b6124b184828501615076565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016151875761518761515f565b5060010190565b6040815260006151a160408301856137a9565b82810360208401526139c981856137a9565b600081546151c081614930565b8085526020600183811680156151dd57600181146151f757615225565b60ff1985168884015283151560051b880183019550615225565b866000528260002060005b8581101561521d5781548a8201860152908301908401615202565b890184019650505b505050505092915050565b600081548084526020808501808196506005915083821b8101866000528360002060005b868110156152f8578383038a5260e0825460ff61527386828416614102565b607882901b6001600160801b031916868a0152600185015460801b6001600160801b03198116604088015291506002850154606087015260038501548181161515608088015291506152ce60a08701828460081c1615159052565b50508060c08501526152e5818501600485016151b3565b9a87019a93505090840190600101615254565b509098975050505050505050565b6000602080835261533681840185805460801b6001600160801b03191682526001015460ff161515602090910152565b606060e08185015261534f6101008501600287016151b3565b6003808701601f1960808189860301818a01528483548087528887019150888160051b8801018560005289600020955060005b82811015615404578589830301845260c060ff6153a284828b541661404f565b60018901548d850152600289015481811615156040860152818160081c1615158d8601526153d8888601838360101c1615159052565b50508060a08401526153ee8184018a8a016151b3565b60049890980197948c0194925050600101615382565b50848c82030160a08d015261541c8160048f01615230565b995050505050505050505061543b60058501546001600160a01b031690565b6001600160a01b031660c08401526006939093015460e0909201919091525090565b60006020828403121561546f57600080fd5b8151610ff08161425e565b82151581526040602082015260006124b160408301846137a9565b6060815260006154a860608301866137a9565b841515602084015282810360408401526154c281856137a9565b9695505050505050565b600082601f8301126154dd57600080fd5b815160206154ea826137e8565b6040516154f782826135ee565b83815260059390931b850182019282810191508684111561551757600080fd5b8286015b8481101561387157805161552e8161425e565b835291830191830161551b565b6000806040838503121561554e57600080fd5b82516001600160401b038082111561556557600080fd5b818501915085601f83011261557957600080fd5b81516020615586826137e8565b60405161559382826135ee565b83815260059390931b85018201928281019150898411156155b357600080fd5b948201945b838610156155d1578551825294820194908201906155b8565b918801519196509093505050808211156155ea57600080fd5b50613aa7858286016154cc565b60006020828403121561560957600080fd5b815163ffffffff81168114610ff057600080fd5b600081518084526020808501808196508360051b8101915082860160005b858110156140f5578284038952815160e0615657868351614102565b818701516001600160801b031990811687890152604080840151909116908701526060808301519087015260808083015115159087015260a08083015115159087015260c0918201519186018190526156b2818701836137a9565b9a87019a955050509084019060010161563b565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b8481101561576357607f198a8503018652815160c061570f86835161404f565b81850151868601526040808301511515908701528982015115158a8701528882015115158987015260a09182015191860181905261574f818701836137a9565b9785019795505050908201906001016156ef565b505087820390880152615776818a61561d565b94505050505082810360408401526154c2818561398f565b600082601f83011261579f57600080fd5b815160206157ac826137e8565b604080516157ba83826135ee565b84815260059490941b86018301938381019250878511156157da57600080fd5b8387015b85811015613d835780516001600160401b03808211156157fe5760008081fd5b9089019060c0828c03601f19018113156158185760008081fd5b85516158238161358b565b8884015161583081613c60565b8152838701518982015260606158478186016144f2565b8883015260806158588187016144f2565b8284015260a0915061586b8287016144f2565b908301529184015191838311156158825760008081fd5b6158908e8b858801016144a3565b9082015287525050509284019284016157de565b600082601f8301126158b557600080fd5b815160206158c2826137e8565b604080516158d083826135ee565b84815260059490941b86018301938381019250878511156158f057600080fd5b8387015b85811015613d835780516001600160401b03808211156159145760008081fd5b9089019060e0828c03601f190181131561592e5760008081fd5b61593661361a565b615941898501614607565b815261594e878501614498565b89820152606061595f818601614498565b888301526080808601518284015260a0915061597c8287016144f2565b9083015260c061598d8682016144f2565b838301529285015192848411156159a657600091508182fd5b6159b48f8c868901016144a3565b908301525087525050509284019284016158f4565b6000602082840312156159db57600080fd5b81516001600160401b03808211156159f257600080fd5b9083019060808286031215615a0657600080fd5b604051615a12816135cf565b615a1b83614498565b8152602083015182811115615a2f57600080fd5b615a3b8782860161578e565b602083015250604083015182811115615a5357600080fd5b615a5f878286016158a4565b604083015250606083015182811115615a7757600080fd5b615a8387828601615076565b60608301525095945050505050565b602081016107f2828461404f565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b808201808211156107f2576107f261515f565b604081526000615b556040830185613ab1565b82810360208401526139c98185613ab1565b601f82111561118a57600081815260208120601f850160051c81016020861015615b8e5750805b601f850160051c820191505b818110156129f757828155600101615b9a565b81516001600160401b03811115615bc657615bc6613575565b615bda81615bd48454614930565b84615b67565b602080601f831160018114615c0f5760008415615bf75750858301515b600019600386901b1c1916600185901b1785556129f7565b600085815260208120601f198616915b82811015615c3e57888601518255948401946001909101908401615c1f565b5085821015615c5c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0386811682528516602082015260a060408201819052600090615c9890830186613ab1565b8281036060840152615caa8186613ab1565b90508281036080840152615cbe81856137a9565b98975050505050505050565b600060208284031215615cdc57600080fd5b8151610ff081613739565b600060033d111561364e5760046000803e5060005160e01c90565b600060443d1015615d105790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715615d3f57505050505090565b8285019150815181811115615d575750505050505090565b843d8701016020828501011115615d715750505050505090565b615d80602082860101876135ee565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351615e0b816017850160208801613785565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351615e3c816028840160208801613785565b01602801949350505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090615e82908301846137a9565b979650505050505050565b80820281158282048414176107f2576107f261515f565b600081615eb357615eb361515f565b50600019019056fea2646970667358221220adde2e1dd9a1202e759cd46bd652c2ab3195df9a6118a93465b2df4a049b3ea664736f6c63430008140033",
    "sourceMap": "808:20415:58:-:0;;;2865:202;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2996:30;3016:1;;2996:11;:30::i;:::-;2972:9;1149:13:28;2972:9:58;1149:7:28;:13::i;:::-;-1:-1:-1;1540:13:43;;-1:-1:-1;;;;;;1531:22:43;;;1583:13;;;;;:33;1559:57;;;;1702:35;;;;;;;;;;;;;;;;;;;1676:62;-1:-1:-1;;;1676:62:43;;1054:42;;1676:25;;:62;;1702:35;1676:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1623:121:43;;;1850:33;;;;;;;;;;;;;;;;1824:60;;-1:-1:-1;;;1824:60:43;;1054:42;;1824:25;;:60;;1850:33;1824:60;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1776:114:43;;;1972:34;;;;;;;;;;;;;;;;1946:61;;-1:-1:-1;;;1946:61:43;;1054:42;;1946:25;;:61;;1972:34;1946:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1896:117:43;;;2089:31;;;;;;;;;;;;;;;;2063:58;;-1:-1:-1;;;2063:58:43;;1054:42;;2063:25;;:58;;2089:31;2063:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2019:108:43;;;2192:29;;;;;;;;;;;;;;;;2166:56;;-1:-1:-1;;;2166:56:43;;1054:42;;2166:25;;:56;;2192:29;2166:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;2133:90:43;;;-1:-1:-1;3034:28:58::2;3045:9:::0;3056:5;3034:10:::2;:28::i;:::-;2865:202:::0;;808:20415;;2632:222:43;2729:25;808:20415:58;;;;;;;;-1:-1:-1;808:20415:58;;;;;;;;;;;;;;;;;;;;;;2729:25:43;-1:-1:-1;2769:80:43;;;;;;;;-1:-1:-1;;;;;;2769:80:43;;;;;;808:20415:58;;2769:80:43;808:20415:58;;;;;-1:-1:-1;808:20415:58;;;3100:55:43;;;;;;;;;;;;;2769:80;;;;;2632:222::o;8149:86:28:-;8215:4;:13;8222:6;8215:4;:13;:::i;:::-;;8149:86;:::o;3427:357:58:-;4860:13:27;;1012:1:58;;4860:13:27;;;;;4859:14;:40;;;;-1:-1:-1;4877:12:27;;:22;;;;:12;;:22;4859:40;4851:99;;;;-1:-1:-1;;;4851:99:27;;4983:2:66;4851:99:27;;;4965:21:66;5022:2;5002:18;;;4995:30;5061:34;5041:18;;;5034:62;-1:-1:-1;;;5112:18:66;;;5105:44;5166:19;;4851:99:27;;;;;;;;4960:12;:22;;-1:-1:-1;;4992:20:27;4960:22;;;4992:20;4960:22;4992:20;;;3642:14:58::1;::::0;:11:::1;:14::i;:::-;3636:28:::0;:33;;:67:::1;;-1:-1:-1::0;3681:4:58::1;3673:25;:30:::0;3636:67:::1;3632:148;;;3713:15;3721:6:::0;3713:7:::1;:15::i;:::-;3736:37;2198:4:18;3767:5:58::0;3736:10:::1;:37::i;:::-;5049:5:27::0;5033:21;;-1:-1:-1;;5033:21:27;;;5069:20;;5368:4:66;5356:17;;5338:36;;5069:20:27;;5326:2:66;5311:18;5069:20:27;;;;;;;3427:357:58;;;:::o;1940:103:28:-;2000:13;2032:4;2025:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1940:103;;;:::o;7587:233:18:-;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:18;;;;;;;;;;;;7665:149;;7708:12;;;;7740:4;7708:12;;;;;;;;-1:-1:-1;;;;;7708:29:18;;;;;;;;;;:36;;-1:-1:-1;;7708:36:18;;;;;;;7763:40;;719:10:33;;7708:12:18;;7763:40;;7708:12;7763:40;7587:233;;:::o;14:127:66:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:250;231:1;241:113;255:6;252:1;249:13;241:113;;;331:11;;;325:18;312:11;;;305:39;277:2;270:10;241:113;;;-1:-1:-1;;388:1:66;370:16;;363:27;146:250::o;401:177::-;480:13;;-1:-1:-1;;;;;522:31:66;;512:42;;502:70;;568:1;565;558:12;502:70;401:177;;;:::o;583:990::-;672:6;680;733:2;721:9;712:7;708:23;704:32;701:52;;;749:1;746;739:12;701:52;776:16;;-1:-1:-1;;;;;841:14:66;;;838:34;;;868:1;865;858:12;838:34;906:6;895:9;891:22;881:32;;951:7;944:4;940:2;936:13;932:27;922:55;;973:1;970;963:12;922:55;1002:2;996:9;1024:2;1020;1017:10;1014:36;;;1030:18;;:::i;:::-;1105:2;1099:9;1073:2;1159:13;;-1:-1:-1;;1155:22:66;;;1179:2;1151:31;1147:40;1135:53;;;1203:18;;;1223:22;;;1200:46;1197:72;;;1249:18;;:::i;:::-;1289:10;1285:2;1278:22;1324:2;1316:6;1309:18;1366:7;1359:4;1354:2;1350;1346:11;1342:22;1339:35;1336:55;;;1387:1;1384;1377:12;1336:55;1400:72;1469:2;1462:4;1454:6;1450:17;1443:4;1439:2;1435:13;1400:72;:::i;:::-;1491:6;1481:16;;;;;;;1516:51;1561:4;1550:9;1546:20;1516:51;:::i;:::-;1506:61;;583:990;;;;;:::o;1578:396::-;1727:2;1716:9;1709:21;1690:4;1759:6;1753:13;1802:6;1797:2;1786:9;1782:18;1775:34;1818:79;1890:6;1885:2;1874:9;1870:18;1865:2;1857:6;1853:15;1818:79;:::i;:::-;1958:2;1937:15;-1:-1:-1;;1933:29:66;1918:45;;;;1965:2;1914:54;;1578:396;-1:-1:-1;;1578:396:66:o;1979:208::-;2049:6;2102:2;2090:9;2081:7;2077:23;2073:32;2070:52;;;2118:1;2115;2108:12;2070:52;2141:40;2171:9;2141:40;:::i;:::-;2131:50;1979:208;-1:-1:-1;;;1979:208:66:o;2192:380::-;2271:1;2267:12;;;;2314;;;2335:61;;2389:4;2381:6;2377:17;2367:27;;2335:61;2442:2;2434:6;2431:14;2411:18;2408:38;2405:161;;2488:10;2483:3;2479:20;2476:1;2469:31;2523:4;2520:1;2513:15;2551:4;2548:1;2541:15;2405:161;;2192:380;;;:::o;2703:545::-;2805:2;2800:3;2797:11;2794:448;;;2841:1;2866:5;2862:2;2855:17;2911:4;2907:2;2897:19;2981:2;2969:10;2965:19;2962:1;2958:27;2952:4;2948:38;3017:4;3005:10;3002:20;2999:47;;;-1:-1:-1;3040:4:66;2999:47;3095:2;3090:3;3086:12;3083:1;3079:20;3073:4;3069:31;3059:41;;3150:82;3168:2;3161:5;3158:13;3150:82;;;3213:17;;;3194:1;3183:13;3150:82;;;3154:3;;;2794:448;2703:545;;;:::o;3424:1352::-;3544:10;;-1:-1:-1;;;;;3566:30:66;;3563:56;;;3599:18;;:::i;:::-;3628:97;3718:6;3678:38;3710:4;3704:11;3678:38;:::i;:::-;3672:4;3628:97;:::i;:::-;3780:4;;3844:2;3833:14;;3861:1;3856:663;;;;4563:1;4580:6;4577:89;;;-1:-1:-1;4632:19:66;;;4626:26;4577:89;-1:-1:-1;;3381:1:66;3377:11;;;3373:24;3369:29;3359:40;3405:1;3401:11;;;3356:57;4679:81;;3826:944;;3856:663;2650:1;2643:14;;;2687:4;2674:18;;-1:-1:-1;;3892:20:66;;;4010:236;4024:7;4021:1;4018:14;4010:236;;;4113:19;;;4107:26;4092:42;;4205:27;;;;4173:1;4161:14;;;;4040:19;;4010:236;;;4014:3;4274:6;4265:7;4262:19;4259:201;;;4335:19;;;4329:26;-1:-1:-1;;4418:1:66;4414:14;;;4430:3;4410:24;4406:37;4402:42;4387:58;4372:74;;4259:201;-1:-1:-1;;;;;4506:1:66;4490:14;;;4486:22;4473:36;;-1:-1:-1;3424:1352:66:o;5196:184::-;808:20415:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061027e5760003560e01c80637ab4339d1161015c578063b3c1cb21116100ce578063dc0ec5e811610087578063dc0ec5e81461066b578063e0689703146106a8578063e37ffe7c146106bb578063e985e9c5146106dc578063f242432a146106ef578063ff4468c41461070257600080fd5b8063b3c1cb21146105d7578063c187bbc1146105ea578063c9512d991461062a578063cdb7e66414610632578063cea8eb4e14610645578063d547741f1461065857600080fd5b8063a183dc2711610120578063a183dc271461054f578063a217fddf14610576578063a22cb4651461057e578063a75400b314610591578063ac6c3e69146105a4578063aed8c6bc146105c457600080fd5b80637ab4339d146104f0578063869f023e1461050357806391d148541461051657806396d75b93146105295780639b642de11461053c57600080fd5b806344112ed8116101f55780636bd14dfa116101b95780636bd14dfa1461045f5780636e01370e1461048a578063710b30961461049d578063730cb7d5146104b0578063754b377c146104c157806379502c55146104db57600080fd5b806344112ed8146103b657806346916301146103dd57806349161195146103f85780634e1273f4146104185780635a3285961461043857600080fd5b8063248a9ca311610247578063248a9ca31461032c5780632eb2c2d6146103505780632f2ff15d1461036357806336568abe146103765780633e1f3c27146103895780633eca99831461039c57600080fd5b8062fdd58e1461028357806301d682dd146102a957806301ffc9a7146102be5780630e064366146102e15780630e89341c1461030c575b600080fd5b610296610291366004613549565b61072a565b6040519081526020015b60405180910390f35b6102bc6102b73660046136e0565b6107f8565b005b6102d16102cc36600461374f565b610f6f565b60405190151581526020016102a0565b6102f46102ef366004613549565b610f7a565b6040516001600160a01b0390911681526020016102a0565b61031f61031a36600461376c565b610ff7565b6040516102a091906137d5565b61029661033a36600461376c565b6000908152600160208190526040909120015490565b6102bc61035e36600461387c565b611118565b6102bc610371366004613929565b611164565b6102bc610384366004613929565b61118f565b61031f610397366004613549565b61120d565b6102f472c92065f759c3d1c94d08c27a2ab97a1c874cbc81565b6102967fe6cd5415a09470f57cb652d653ef635ecd9a997fef2537decaf18eb7545b7fa481565b6102f4733cd5334eb64ebbd4003b72022cc25465f1bfcee681565b61040b610406366004613972565b611287565b6040516102a091906139d2565b61042b6104263660046139e5565b61132e565b6040516102a09190613aec565b6102967f401f66d300c59cfc80f7c726a9eb9d21ee04bdd3629511a0cfec7a609c00328581565b61029661046d366004613aff565b600091825260086020908152604080842092845291905290205490565b61040b610498366004613b21565b611457565b6102bc6104ab366004613b7a565b611502565b6005546001600160a01b03166102f4565b6104c9600481565b60405160ff90911681526020016102a0565b6104e3611594565b6040516102a09190613bd5565b6102bc6104fe366004613bf9565b611609565b6102bc610511366004613ecc565b611716565b6102d1610524366004613929565b611795565b6102bc610537366004613f93565b6117c0565b6102bc61054a366004613fd7565b611d9a565b6102d17f000000000000000000000000000000000000000000000000000000000000000081565b610296600081565b6102bc61058c36600461400b565b611dae565b6102bc61059f366004613ecc565b611dc7565b6105b76105b236600461376c565b611e86565b6040516102a091906141bb565b6104c96105d236600461426d565b6122bf565b6102bc6105e5366004614292565b612336565b6106117f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160801b031990911681526020016102a0565b610296600281565b6102bc610640366004613fd7565b612364565b61040b6106533660046142af565b612378565b6102bc610666366004613929565b6123de565b6102d1610679366004613aff565b6000918252600860209081526040808420928452919052902060010154600160a01b900463ffffffff16151590565b61040b6106b63660046142f4565b612404565b6106ce6106c936600461376c565b6124b9565b6040516102a092919061436b565b6102d16106ea3660046143e9565b612538565b6102bc6106fd366004614417565b612553565b610715610710366004613549565b612598565b60405163ffffffff90911681526020016102a0565b6000610739826302625a001190565b156107ba5760055460405163461e4f1960e11b8152600481018490526001600160a01b03858116602483015290911690638c3c9e3290604401602060405180830381865afa15801561078f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b3919061447f565b90506107f2565b5060008181526009602090815260408083206001600160a01b0386168452825280832054848452600883528184209084529091529020545b92915050565b600060019050600084806020019051810190610814919061486e565b6000848152600760209081526040808320815161010081018352815460801b6001600160801b03191660c082019081528351808601909452600183015460ff161515845260e082019390935291825260028101805495965093949193909284019161087e90614930565b80601f01602080910402602001604051908101604052809291908181526020018280546108aa90614930565b80156108f75780601f106108cc576101008083540402835291602001916108f7565b820191906000526020600020905b8154815290600101906020018083116108da57829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015610a51576000848152602090206040805160c08101909152600484029091018054829060ff16600581111561096057610960614039565b600581111561097157610971614039565b815260018201546020820152600282015460ff80821615156040840152610100820481161515606084015262010000909104161515608082015260038201805460a0909201916109c090614930565b80601f01602080910402602001604051908101604052809291908181526020018280546109ec90614930565b8015610a395780601f10610a0e57610100808354040283529160200191610a39565b820191906000526020600020905b815481529060010190602001808311610a1c57829003601f168201915b50505050508152505081526020019060010190610925565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610bc7576000848152602090206040805160e08101909152600584029091018054829060ff166004811115610ab957610ab9614039565b6004811115610aca57610aca614039565b8152815461010090819004608090811b6001600160801b031990811660208501526001850154821b16604084015260028401546060840152600384015460ff8082161515928501929092529190910416151560a082015260048201805460c090920191610b3690614930565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6290614930565b8015610baf5780601f10610b8457610100808354040283529160200191610baf565b820191906000526020600020905b815481529060010190602001808311610b9257829003601f168201915b50505050508152505081526020019060010190610a7e565b5050509082525060058201546001600160a01b03908116602080840191909152600690930154604092830152838201516060808601518451938c1695840195909552928201899052939450600091610c3c9185918591610c3791015b60405160208183030381529060405261260e565b612672565b60008881526007602052604080822090516312b037ff60e01b815292935090916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916312b037ff91610c9e918a91879190600401614a63565b6000604051808303816000875af1158015610cbd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ce59190810190614e81565b90506000610cf3828261270f565b60008a8152600860209081526040808320848452909152902060010154909150600160a01b900463ffffffff1615610d4d576040516384e5f13b60e01b8152600481018a9052602481018290526044015b60405180910390fd5b610d578a8a61072a565b15610dab5760008981526009602090815260408083206001600160a01b038e168452909152908190205490516313c35aa360e11b8152600481018b9052602481018390526044810191909152606401610d44565b60405180606001604052808981526020018b6001600160a01b031681526020014263ffffffff16815250600860008b815260200190815260200160002060008381526020019081526020016000206000820151816000015560208201518160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160146101000a81548163ffffffff021916908363ffffffff16021790555090505080600960008b815260200190815260200160002060008c6001600160a01b03166001600160a01b031681526020019081526020016000208190555080897f151b096e8a345f14b4b6978a01ec99e538cea7208101aca08ab7582edc14a7aa600860008d81526020019081526020016000206000858152602001908152602001600020604051610f119190815481526001909101546001600160a01b038116602083015260a01c63ffffffff16604082015260600190565b60405180910390a3604080518a8152602081018a90526001600160a01b038c169160009130917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050505050505050505050565b60006107f2826127c2565b6005546040516363ed4d5360e11b8152600481018390526001600160a01b038481166024830152600092169063c7da9aa690604401602060405180830381865afa158015610fcc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff09190614f61565b9392505050565b6060611006826302625a001190565b15611014576107f282612802565b60408051602080820183526000918290528482526007905281902090517fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4709161106291600290910190614f7e565b604051809103902014611085576000828152600760205260409020600201611088565b60065b805461109390614930565b80601f01602080910402602001604051908101604052809291908181526020018280546110bf90614930565b801561110c5780601f106110e15761010080835404028352916020019161110c565b820191906000526020600020905b8154815290600101906020018083116110ef57829003601f168201915b50505050509050919050565b6001600160a01b03851633148061113457506111348533612538565b6111505760405162461bcd60e51b8152600401610d4490614ff4565b61115d8585858585612811565b5050505050565b60008281526001602081905260409091200154611180816129ff565b61118a8383612a0c565b505050565b6001600160a01b03811633146111ff5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610d44565b6112098282612a77565b5050565b600554604051636d7fbb6760e01b8152600481018390526001600160a01b0384811660248301526060921690636d7fbb6790604401600060405180830381865afa15801561125f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ff09190810190615042565b604080516060808201835280825260006020830152818301529051631f6c2b9760e11b815282151560048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690633ed8572e906024015b600060405180830381865afa158015611306573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107f29190810190615115565b606081518351146113935760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b6064820152608401610d44565b600083516001600160401b038111156113ae576113ae613575565b6040519080825280602002602001820160405280156113d7578160200160208202803683370190505b50905060005b845181101561144f576114228582815181106113fb576113fb615149565b602002602001015185838151811061141557611415615149565b602002602001015161072a565b82828151811061143457611434615149565b602090810291909101015261144881615175565b90506113dd565b509392505050565b604080516060808201835280825260006020830152818301529051631778ed1360e21b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690635de3b44c906114bd908690869060040161518e565b600060405180830381865afa1580156114da573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ff09190810190615115565b7fe6cd5415a09470f57cb652d653ef635ecd9a997fef2537decaf18eb7545b7fa461152c816129ff565b836001600160a01b0316856001600160a01b0316876001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628686604051611584929190918252602082015260400190565b60405180910390a4505050505050565b6115ba604080518082018252600080825282516020818101909452908152909182015290565b6116047f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000612ade565b905090565b600054600490610100900460ff1615801561162b575060005460ff8083169116105b61168e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610d44565b6000805461ffff191660ff8316176101001781556116ab90612802565b5115806116b75750303b155b156116d0576116c583612b4c565b6116d0600083612a0c565b6000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b7f401f66d300c59cfc80f7c726a9eb9d21ee04bdd3629511a0cfec7a609c003285611740816129ff565b6000828152600760205260409020600501546001600160a01b03161561177c57604051639c454f9760e01b815260048101839052602401610d44565b61178b88888888888888612b58565b5050505050505050565b60009182526001602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6000828060200190518101906117d6919061486e565b6000838152600760209081526040808320815161010081018352815460801b6001600160801b03191660c082019081528351808601909452600183015460ff161515845260e082019390935291825260028101805495965093949193909284019161184090614930565b80601f016020809104026020016040519081016040528092919081815260200182805461186c90614930565b80156118b95780601f1061188e576101008083540402835291602001916118b9565b820191906000526020600020905b81548152906001019060200180831161189c57829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b82821015611a13576000848152602090206040805160c08101909152600484029091018054829060ff16600581111561192257611922614039565b600581111561193357611933614039565b815260018201546020820152600282015460ff80821615156040840152610100820481161515606084015262010000909104161515608082015260038201805460a09092019161198290614930565b80601f01602080910402602001604051908101604052809291908181526020018280546119ae90614930565b80156119fb5780601f106119d0576101008083540402835291602001916119fb565b820191906000526020600020905b8154815290600101906020018083116119de57829003601f168201915b505050505081525050815260200190600101906118e7565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015611b89576000848152602090206040805160e08101909152600584029091018054829060ff166004811115611a7b57611a7b614039565b6004811115611a8c57611a8c614039565b8152815461010090819004608090811b6001600160801b031990811660208501526001850154821b16604084015260028401546060840152600384015460ff8082161515928501929092529190910416151560a082015260048201805460c090920191611af890614930565b80601f0160208091040260200160405190810160405280929190818152602001828054611b2490614930565b8015611b715780601f10611b4657610100808354040283529160200191611b71565b820191906000526020600020905b815481529060010190602001808311611b5457829003601f168201915b50505050508152505081526020019060010190611a40565b5050509082525060058201546001600160a01b031660208083019190915260069092015460409182015282810151606084015182519384018890529394509291600091611bde9185918591610c379101610c23565b60008781526007602052604080822090516312b037ff60e01b815292935090916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016916312b037ff91611c40918a91879190600401614a63565b6000604051808303816000875af1158015611c5f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611c879190810190614e81565b90506000611c95828261270f565b6000898152600860209081526040808320848452909152812060010154919250600160a01b90910463ffffffff169003611cec5760405163e39a92b760e01b81526004810189905260248101829052604401610d44565b600088815260086020908152604080832084845280835281842060018101805463ffffffff4216600160a01b0263ffffffff60a01b19909116179055938590529091525182918a917f143614a05a1facad63ed89ba02e510ec8c36cdc2e98a186044de5d3c30195a4391611d8791815481526001909101546001600160a01b038116602083015260a01c63ffffffff16604082015260600190565b60405180910390a3505050505050505050565b6000611da5816129ff565b61120982612bc3565b6040516309a711b960e31b815260040160405180910390fd5b6000818152600760205260409020600501546001600160a01b0316338114611e23576040516327310c2560e21b81526001600160801b0319891660048201526001600160a01b0382166024820152336044820152606401610d44565b611e3288888888888888612bcf565b817f8ed7a0bc75f77e269c7a6adb735cfc724fd2c5d7e57df975414e59e9c2592a7b60076000858152602001908152602001600020604051611e749190615306565b60405180910390a25050505050505050565b611ee66040805161010081018252600060c0820181815283516020810190945290835260e0820192909252908190815260200160608152602001606081526020016060815260200160006001600160a01b03168152602001600081525090565b600082815260076020908152604091829020825161010081018452815460801b6001600160801b03191660c082019081528451808501909552600183015460ff161515855260e08201949094529283526002810180549192840191611f4a90614930565b80601f0160208091040260200160405190810160405280929190818152602001828054611f7690614930565b8015611fc35780601f10611f9857610100808354040283529160200191611fc3565b820191906000526020600020905b815481529060010190602001808311611fa657829003601f168201915b5050505050815260200160038201805480602002602001604051908101604052809291908181526020016000905b8282101561211d576000848152602090206040805160c08101909152600484029091018054829060ff16600581111561202c5761202c614039565b600581111561203d5761203d614039565b815260018201546020820152600282015460ff80821615156040840152610100820481161515606084015262010000909104161515608082015260038201805460a09092019161208c90614930565b80601f01602080910402602001604051908101604052809291908181526020018280546120b890614930565b80156121055780601f106120da57610100808354040283529160200191612105565b820191906000526020600020905b8154815290600101906020018083116120e857829003601f168201915b50505050508152505081526020019060010190611ff1565b50505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015612293576000848152602090206040805160e08101909152600584029091018054829060ff16600481111561218557612185614039565b600481111561219657612196614039565b8152815461010090819004608090811b6001600160801b031990811660208501526001850154821b16604084015260028401546060840152600384015460ff8082161515928501929092529190910416151560a082015260048201805460c09092019161220290614930565b80601f016020809104026020016040519081016040528092919081815260200182805461222e90614930565b801561227b5780601f106122505761010080835404028352916020019161227b565b820191906000526020600020905b81548152906001019060200180831161225e57829003601f168201915b5050505050815250508152602001906001019061214a565b5050509082525060058201546001600160a01b0316602082015260069091015460409091015292915050565b600554604051630e972f9160e41b81526004810184905260ff831660248201526000916001600160a01b03169063e972f91090604401602060405180830381865afa158015612312573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff0919061545d565b6000612341816129ff565b50600580546001600160a01b0319166001600160a01b0392909216919091179055565b600061236f816129ff565b61120982612b4c565b604080516060808201835280825260006020830152818301529051631d1db46b60e21b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690637476d1ac906114bd908690869060040161547a565b600082815260016020819052604090912001546123fa816129ff565b61118a8383612a77565b604080516060808201835280825260006020830152818301529051631f785c9560e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631f785c959061246c90879087908790600401615495565b600060405180830381865afa158015612489573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124b19190810190615115565b949350505050565b600554604051632b2bf81b60e11b81526004810183905260609182916001600160a01b0390911690635657f03690602401600060405180830381865afa158015612507573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261252f919081019061553b565b91509150915091565b60006040516309a711b960e31b815260040160405180910390fd5b6001600160a01b03851633148061256f575061256f8533612538565b61258b5760405162461bcd60e51b8152600401610d4490614ff4565b61115d8585858585612c84565b6005546040516314067f8b60e01b8152600481018390526001600160a01b03848116602483015260009216906314067f8b90604401602060405180830381865afa1580156125ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff091906155f7565b604080516060808201835280825260006020830152818301529051631a0d7ccb60e21b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636835f32c906112e99085906004016137d5565b61267a6134d4565b604051634c92019b60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906399240336906126ca908790879087906004016156c6565b600060405180830381865afa1580156126e7573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526124b191908101906159c9565b6000805b8360600151518110156127a65782600581111561273257612732614039565b8460600151828151811061274857612748615149565b602002602001015160000151600581111561276557612765614039565b03612794578360600151818151811061278057612780615149565b6020026020010151604001519150506107f2565b8061279e81615175565b915050612713565b508160405163267ac2cf60e01b8152600401610d449190615a92565b60006001600160e01b03198216636cdb3d1360e11b14806127f357506001600160e01b031982166303a24d0760e21b145b806107f257506107f282612dc0565b60606004805461109390614930565b81518351146128735760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b6064820152608401610d44565b6001600160a01b0384166128995760405162461bcd60e51b8152600401610d4490615aa0565b336128a8818787878787611dae565b60005b84518110156129915760008582815181106128c8576128c8615149565b6020026020010151905060008583815181106128e6576128e6615149565b60209081029190910181015160008481526002835260408082206001600160a01b038e1683529093529190912054909150818110156129375760405162461bcd60e51b8152600401610d4490615ae5565b60008381526002602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290612976908490615b2f565b925050819055505050508061298a90615175565b90506128ab565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb87876040516129e1929190615b42565b60405180910390a46129f7818787878787612df5565b505050505050565b612a098133612f59565b50565b612a168282611795565b6112095760008281526001602081815260408084206001600160a01b0386168086529252808420805460ff19169093179092559051339285917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9190a45050565b612a818282611795565b156112095760008281526001602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b612b04604080518082018252600080825282516020818101909452908152909182015290565b6040518060400160405280846001600160801b0319168152602001612b4384604080516020808201835260009091528151908101909152901515815290565b90529392505050565b60046112098282615bad565b612b6181612fb2565b612b7087878787878787612bcf565b807f2ca78c31fd1a7ac9bf2b3458f3f8376fa02d7b7022de5b91be03587a3619fc7e60076000848152602001908152602001600020604051612bb29190615306565b60405180910390a250505050505050565b60066112098282615bad565b600081815260076020526040902080546001600160801b031916608089901c17815560018101805460ff1916881515179055600201612c0e8682615bad565b50612c198185612ff4565b612c2381846130f7565b6001600160a01b03821615612c385781612c4d565b72c92065f759c3d1c94d08c27a2ab97a1c874cbc5b60009182526007602052604090912060050180546001600160a01b0319166001600160a01b03909216919091179055505050505050565b6001600160a01b038416612caa5760405162461bcd60e51b8152600401610d4490615aa0565b336000612cb68561321c565b90506000612cc38561321c565b9050612cd3838989858589611dae565b60008681526002602090815260408083206001600160a01b038c16845290915290205485811015612d165760405162461bcd60e51b8152600401610d4490615ae5565b60008781526002602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290612d55908490615b2f565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4612db5848a8a8a8a8a613267565b505050505050505050565b60006001600160e01b03198216637965db0b60e01b14806107f257506301ffc9a760e01b6001600160e01b03198316146107f2565b6001600160a01b0384163b156129f75760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190612e399089908990889088908890600401615c6c565b6020604051808303816000875af1925050508015612e74575060408051601f3d908101601f19168201909252612e7191810190615cca565b60015b612f2057612e80615ce7565b806308c379a003612eb95750612e94615d02565b80612e9f5750612ebb565b8060405162461bcd60e51b8152600401610d4491906137d5565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b6064820152608401610d44565b6001600160e01b0319811663bc197c8160e01b14612f505760405162461bcd60e51b8152600401610d4490615d8b565b50505050505050565b612f638282611795565b61120957612f7081613322565b612f7b836020613334565b604051602001612f8c929190615dd3565b60408051601f198184030181529082905262461bcd60e51b8252610d44916004016137d5565b612fbf816302625a001190565b15612fe05760405163b061c8d760e01b815260048101829052602401610d44565b600081815260076020526040902060060155565b6000828152600760205260408120600301905b82518110156130f1578183828151811061302357613023615149565b60209081029190910181015182546001818101855560009485529290932081516004909402018054919390929091839160ff199091169083600581111561306c5761306c614039565b0217905550602082015160018201556040820151600282018054606085015160808601511515620100000262ff0000199115156101000261ff00199515159590951661ffff1990931692909217939093179290921691909117905560a082015160038201906130db9082615bad565b50505080806130e990615175565b915050613007565b50505050565b6000828152600760205260408120600401905b82518110156130f1578183828151811061312657613126615149565b60209081029190910181015182546001818101855560009485529290932081516005909402018054919390929091839160ff199091169083600481111561316f5761316f614039565b02179055506020820151815470ffffffffffffffffffffffffffffffff001916610100608092831c810291909117835560408401516001840180546001600160801b03191691841c919091179055606084015160028401559083015160038301805460a086015161ffff1990911692151561ff0019169290921791151590920217905560c082015160048201906132069082615bad565b505050808061321490615175565b91505061310a565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061325657613256615149565b602090810291909101015292915050565b6001600160a01b0384163b156129f75760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906132ab9089908990889088908890600401615e48565b6020604051808303816000875af19250505080156132e6575060408051601f3d908101601f191682019092526132e391810190615cca565b60015b6132f257612e80615ce7565b6001600160e01b0319811663f23a6e6160e01b14612f505760405162461bcd60e51b8152600401610d4490615d8b565b60606107f26001600160a01b03831660145b60606000613343836002615e8d565b61334e906002615b2f565b6001600160401b0381111561336557613365613575565b6040519080825280601f01601f19166020018201604052801561338f576020820181803683370190505b509050600360fc1b816000815181106133aa576133aa615149565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106133d9576133d9615149565b60200101906001600160f81b031916908160001a90535060006133fd846002615e8d565b613408906001615b2f565b90505b6001811115613480576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061343c5761343c615149565b1a60f81b82828151811061345257613452615149565b60200101906001600160f81b031916908160001a90535060049490941c9361347981615ea4565b905061340b565b508315610ff05760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610d44565b905290565b604051806080016040528060006001600160801b031916815260200160608152602001606081526020016134cf604051806060016040528060608152602001600015158152602001606081525090565b6001600160a01b0381168114612a0957600080fd5b803561354481613524565b919050565b6000806040838503121561355c57600080fd5b823561356781613524565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60c081018181106001600160401b03821117156135aa576135aa613575565b60405250565b60a081018181106001600160401b03821117156135aa576135aa613575565b608081018181106001600160401b03821117156135aa576135aa613575565b601f8201601f191681016001600160401b038111828210171561361357613613613575565b6040525050565b60405160e081016001600160401b038111828210171561363c5761363c613575565b60405290565b60405161364e816135b0565b90565b60405161364e8161358b565b60006001600160401b0382111561367657613676613575565b50601f01601f191660200190565b600082601f83011261369557600080fd5b81356136a08161365d565b6040516136ad82826135ee565b8281528560208487010111156136c257600080fd5b82602086016020830137600092810160200192909252509392505050565b6000806000606084860312156136f557600080fd5b83356001600160401b0381111561370b57600080fd5b61371786828701613684565b935050602084013561372881613524565b929592945050506040919091013590565b6001600160e01b031981168114612a0957600080fd5b60006020828403121561376157600080fd5b8135610ff081613739565b60006020828403121561377e57600080fd5b5035919050565b60005b838110156137a0578181015183820152602001613788565b50506000910152565b600081518084526137c1816020860160208601613785565b601f01601f19169290920160200192915050565b602081526000610ff060208301846137a9565b60006001600160401b0382111561380157613801613575565b5060051b60200190565b600082601f83011261381c57600080fd5b81356020613829826137e8565b60405161383682826135ee565b83815260059390931b850182019282810191508684111561385657600080fd5b8286015b84811015613871578035835291830191830161385a565b509695505050505050565b600080600080600060a0868803121561389457600080fd5b853561389f81613524565b945060208601356138af81613524565b935060408601356001600160401b03808211156138cb57600080fd5b6138d789838a0161380b565b945060608801359150808211156138ed57600080fd5b6138f989838a0161380b565b9350608088013591508082111561390f57600080fd5b5061391c88828901613684565b9150509295509295909350565b6000806040838503121561393c57600080fd5b82359150602083013561394e81613524565b809150509250929050565b8015158114612a0957600080fd5b803561354481613959565b60006020828403121561398457600080fd5b8135610ff081613959565b60008151606084526139a460608501826137a9565b9050602083015115156020850152604083015184820360408601526139c982826137a9565b95945050505050565b602081526000610ff0602083018461398f565b600080604083850312156139f857600080fd5b82356001600160401b0380821115613a0f57600080fd5b818501915085601f830112613a2357600080fd5b81356020613a30826137e8565b604051613a3d82826135ee565b83815260059390931b8501820192828101915089841115613a5d57600080fd5b948201945b83861015613a84578535613a7581613524565b82529482019490820190613a62565b96505086013592505080821115613a9a57600080fd5b50613aa78582860161380b565b9150509250929050565b600081518084526020808501945080840160005b83811015613ae157815187529582019590820190600101613ac5565b509495945050505050565b602081526000610ff06020830184613ab1565b60008060408385031215613b1257600080fd5b50508035926020909101359150565b60008060408385031215613b3457600080fd5b82356001600160401b0380821115613b4b57600080fd5b613b5786838701613684565b93506020850135915080821115613b6d57600080fd5b50613aa785828601613684565b600080600080600060a08688031215613b9257600080fd5b8535613b9d81613524565b94506020860135613bad81613524565b93506040860135613bbd81613524565b94979396509394606081013594506080013592915050565b81516001600160801b031916815260208083015151151590820152604081016107f2565b60008060408385031215613c0c57600080fd5b82356001600160401b03811115613c2257600080fd5b613c2e85828601613684565b925050602083013561394e81613524565b6001600160801b031981168114612a0957600080fd5b803561354481613c3f565b60068110612a0957600080fd5b600082601f830112613c7e57600080fd5b81356020613c8b826137e8565b60408051613c9983826135ee565b84815260059490941b8601830193838101925087851115613cb957600080fd5b8387015b85811015613d835780356001600160401b0380821115613cdd5760008081fd5b9089019060c0828c03601f1901811315613cf75760008081fd5b8551613d028161358b565b88840135613d0f81613c60565b815283870135898201526060613d26818601613967565b888301526080613d37818701613967565b8284015260a09150613d4a828701613967565b90830152918401359183831115613d615760008081fd5b613d6f8e8b85880101613684565b908201528752505050928401928401613cbd565b50979650505050505050565b60058110612a0957600080fd5b803561354481613d8f565b600082601f830112613db857600080fd5b81356020613dc5826137e8565b60408051613dd383826135ee565b84815260059490941b8601830193838101925087851115613df357600080fd5b8387015b85811015613d835780356001600160401b0380821115613e175760008081fd5b9089019060e0828c03601f1901811315613e315760008081fd5b613e3961361a565b613e44898501613d9c565b8152613e51878501613c55565b898201526060613e62818601613c55565b888301526080808601358284015260a09150613e7f828701613967565b9083015260c0613e90868201613967565b83830152928501359284841115613ea957600091508182fd5b613eb78f8c86890101613684565b90830152508752505050928401928401613df7565b600080600080600080600060e0888a031215613ee757600080fd5b8735613ef281613c3f565b96506020880135613f0281613959565b955060408801356001600160401b0380821115613f1e57600080fd5b613f2a8b838c01613684565b965060608a0135915080821115613f4057600080fd5b613f4c8b838c01613c6d565b955060808a0135915080821115613f6257600080fd5b50613f6f8a828b01613da7565b935050613f7e60a08901613539565b915060c0880135905092959891949750929550565b60008060408385031215613fa657600080fd5b82356001600160401b03811115613fbc57600080fd5b613fc885828601613684565b95602094909401359450505050565b600060208284031215613fe957600080fd5b81356001600160401b03811115613fff57600080fd5b6124b184828501613684565b6000806040838503121561401e57600080fd5b823561402981613524565b9150602083013561394e81613959565b634e487b7160e01b600052602160045260246000fd5b6006811061405f5761405f614039565b9052565b600081518084526020808501808196508360051b8101915082860160005b858110156140f5578284038952815160c061409d86835161404f565b818701518688015260408083015115159087015260608083015115159087015260808083015115159087015260a0918201519186018190526140e1818701836137a9565b9a87019a9550505090840190600101614081565b5091979650505050505050565b6005811061405f5761405f614039565b600081518084526020808501808196508360051b8101915082860160005b858110156140f5578284038952815160e061414c868351614102565b818701516001600160801b031990811687890152604080840151909116908701526060808301519087015260808083015115159087015260a08083015115159087015260c0918201519186018190526141a7818701836137a9565b9a87019a9550505090840190600101614130565b6020808252825180516001600160801b03191683830152015151151560408201526000602083015160e060608401526141f86101008401826137a9565b90506040840151601f19808584030160808601526142168383614063565b925060608601519150808584030160a0860152506142348282614112565b60808601516001600160a01b031660c086015260a09095015160e090940193909352509192915050565b60ff81168114612a0957600080fd5b6000806040838503121561428057600080fd5b82359150602083013561394e8161425e565b6000602082840312156142a457600080fd5b8135610ff081613524565b600080604083850312156142c257600080fd5b82356142cd81613959565b915060208301356001600160401b038111156142e857600080fd5b613aa785828601613684565b60008060006060848603121561430957600080fd5b83356001600160401b038082111561432057600080fd5b61432c87838801613684565b94506020860135915061433e82613959565b9092506040850135908082111561435457600080fd5b5061436186828701613684565b9150509250925092565b604080825283519082018190526000906020906060840190828701845b828110156143a457815184529284019290840190600101614388565b5050508381038285015284518082528583019183019060005b818110156143dc57835160ff16835292840192918401916001016143bd565b5090979650505050505050565b600080604083850312156143fc57600080fd5b823561440781613524565b9150602083013561394e81613524565b600080600080600060a0868803121561442f57600080fd5b853561443a81613524565b9450602086013561444a81613524565b9350604086013592506060860135915060808601356001600160401b0381111561447357600080fd5b61391c88828901613684565b60006020828403121561449157600080fd5b5051919050565b805161354481613c3f565b600082601f8301126144b457600080fd5b81516144bf8161365d565b6040516144cc82826135ee565b8281528560208487010111156144e157600080fd5b6139c9836020830160208801613785565b805161354481613959565b600082601f83011261450e57600080fd5b8151602061451b826137e8565b6040805161452983826135ee565b84815260059490941b860183019383810192508785111561454957600080fd5b8387015b85811015613d835780516001600160401b038082111561456d5760008081fd5b9089019060a0828c03601f19018113156145875760008081fd5b8551614592816135b0565b8884015161459f81613c60565b8152838701516145ae81613959565b818a01526060848101516145c181613959565b82890152608085810151828401529285015192848411156145e457600091508182fd5b6145f28f8c868901016144a3565b9083015250875250505092840192840161454d565b805161354481613d8f565b600082601f83011261462357600080fd5b81516020614630826137e8565b6040805161463e83826135ee565b84815260059490941b860183019383810192508785111561465e57600080fd5b8387015b85811015613d835780516001600160401b03808211156146825760008081fd5b9089019060c0828c03601f190181131561469c5760008081fd5b85516146a78161358b565b888401516146b481613d8f565b81526146c1848801614498565b8982015260606146d2818601614498565b8883015260806146e38187016144f2565b8284015260a09150818601518184015250828501519250838311156147085760008081fd5b6147168e8b858801016144a3565b908201528752505050928401928401614662565b600082601f83011261473b57600080fd5b81516020614748826137e8565b60405161475582826135ee565b83815260059390931b850182019282810191508684111561477557600080fd5b8286015b848110156138715780516001600160401b03808211156147995760008081fd5b9088019060a0828b03601f19018113156147b35760008081fd5b6147bb613642565b87840151838111156147cd5760008081fd5b6147db8d8a838801016144fd565b8252506040840151838111156147f15760008081fd5b6147ff8d8a83880101614612565b89830152506060808501516040830152608080860151858111156148235760008081fd5b6148318f8c838a01016144a3565b848401525092850151928484111561484b57600091508182fd5b6148598e8b868901016144a3565b90830152508652505050918301918301614779565b60006020828403121561488057600080fd5b81516001600160401b038082111561489757600080fd5b9083019060a082860312156148ab57600080fd5b6040516148b7816135b0565b82516148c281613c3f565b81526148d060208401614498565b6020820152604083015160408201526060830151828111156148f157600080fd5b6148fd878286016144a3565b60608301525060808301518281111561491557600080fd5b6149218782860161472a565b60808301525095945050505050565b600181811c9082168061494457607f821691505b60208210810361496457634e487b7160e01b600052602260045260246000fd5b50919050565b600081518084526020808501808196508360051b8101915082860160005b858110156140f5578284038952815160c06149a4868351614102565b818701516001600160801b031990811687890152604080840151909116908701526060808301511515908701526080808301519087015260a0918201519186018190526149f3818701836137a9565b9a87019a9550505090840190600101614988565b6001600160801b031981511682526000602082015160806020850152614a306080850182614063565b905060408301518482036040860152614a498282614112565b915050606083015184820360608601526139c9828261398f565b600060808083526001600160801b0319808751168285015260208088015182811660a087015250604088015191508160c08601526060880151915060a060e0860152614ab36101208601836137a9565b88840151868203607f1901610100880152805180835291935082019082840190600581901b8501840160005b82811015614bec57601f198783030184528451805160a0808552815190850181905260c0600582901b86018101928a01919086019060005b81811015614b815760bf198886030183528351614b3586825161404f565b8c81015115158d870152604081015115156040870152606081015160608701528e810151905060a08f870152614b6e60a08701826137a9565b955050928b0192918b0191600101614b17565b505050508782015184820389860152614b9a828261496a565b9150506040820151604085015260608201518482036060860152614bbe82826137a9565b9150508982015191508381038a850152614bd881836137a9565b968801969588019593505050600101614adf565b50888103858a0152614bfe818c614a07565b9750505050505050506124b16040830184805460801b6001600160801b03191682526001015460ff161515602090910152565b600082601f830112614c4257600080fd5b81516020614c4f826137e8565b60408051614c5d83826135ee565b84815260059490941b8601830193838101925087851115614c7d57600080fd5b8387015b85811015613d835780516001600160401b0380821115614ca057600080fd5b9089019060a0828c03601f19011215614cb95760008081fd5b8451614cc4816135b0565b87830151614cd181613c60565b8152614cde8387016144f2565b888201526060808401518783015260808085015184811115614d005760008081fd5b614d0e8f8c838901016144a3565b838501525060a0850151915083821115614d285760008081fd5b614d368e8b848801016144a3565b908301525086525050928401928401614c81565b600082601f830112614d5b57600080fd5b81516020614d68826137e8565b604051614d7582826135ee565b83815260059390931b8501820192828101915086841115614d9557600080fd5b8286015b848110156138715780516001600160401b0380821115614db95760008081fd5b9088019060e0828b03601f1901811315614dd35760008081fd5b614ddb61361a565b614de6888501614607565b8152614df460408501614498565b888201526060614e05818601614498565b60408301526080808601518284015260a091508186015185811115614e2a5760008081fd5b614e388f8c838a01016144a3565b82850152505060c0808601518284015283860151935084841115614e5e57600091508182fd5b614e6c8e8b868901016144a3565b90830152508652505050918301918301614d99565b600060208284031215614e9357600080fd5b81516001600160401b0380821115614eaa57600080fd5b9083019060c08286031215614ebe57600080fd5b614ec6613651565b614ecf83614498565b8152614edd60208401614498565b602082015260408301516040820152606083015182811115614efe57600080fd5b614f0a87828601614c31565b606083015250608083015182811115614f2257600080fd5b614f2e87828601614d4a565b60808301525060a083015182811115614f4657600080fd5b614f52878286016144a3565b60a08301525095945050505050565b600060208284031215614f7357600080fd5b8151610ff081613524565b6000808354614f8c81614930565b60018281168015614fa45760018114614fb957614fe8565b60ff1984168752821515830287019450614fe8565b8760005260208060002060005b85811015614fdf5781548a820152908401908201614fc6565b50505082870194505b50929695505050505050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b60006020828403121561505457600080fd5b81516001600160401b0381111561506a57600080fd5b6124b1848285016144a3565b60006060828403121561508857600080fd5b604051606081016001600160401b0382821081831117156150ab576150ab613575565b8160405282935084519150808211156150c357600080fd5b6150cf868387016144a3565b8352602085015191506150e182613959565b81602084015260408501519150808211156150fb57600080fd5b50615108858286016144a3565b6040830152505092915050565b60006020828403121561512757600080fd5b81516001600160401b0381111561513d57600080fd5b6124b184828501615076565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016151875761518761515f565b5060010190565b6040815260006151a160408301856137a9565b82810360208401526139c981856137a9565b600081546151c081614930565b8085526020600183811680156151dd57600181146151f757615225565b60ff1985168884015283151560051b880183019550615225565b866000528260002060005b8581101561521d5781548a8201860152908301908401615202565b890184019650505b505050505092915050565b600081548084526020808501808196506005915083821b8101866000528360002060005b868110156152f8578383038a5260e0825460ff61527386828416614102565b607882901b6001600160801b031916868a0152600185015460801b6001600160801b03198116604088015291506002850154606087015260038501548181161515608088015291506152ce60a08701828460081c1615159052565b50508060c08501526152e5818501600485016151b3565b9a87019a93505090840190600101615254565b509098975050505050505050565b6000602080835261533681840185805460801b6001600160801b03191682526001015460ff161515602090910152565b606060e08185015261534f6101008501600287016151b3565b6003808701601f1960808189860301818a01528483548087528887019150888160051b8801018560005289600020955060005b82811015615404578589830301845260c060ff6153a284828b541661404f565b60018901548d850152600289015481811615156040860152818160081c1615158d8601526153d8888601838360101c1615159052565b50508060a08401526153ee8184018a8a016151b3565b60049890980197948c0194925050600101615382565b50848c82030160a08d015261541c8160048f01615230565b995050505050505050505061543b60058501546001600160a01b031690565b6001600160a01b031660c08401526006939093015460e0909201919091525090565b60006020828403121561546f57600080fd5b8151610ff08161425e565b82151581526040602082015260006124b160408301846137a9565b6060815260006154a860608301866137a9565b841515602084015282810360408401526154c281856137a9565b9695505050505050565b600082601f8301126154dd57600080fd5b815160206154ea826137e8565b6040516154f782826135ee565b83815260059390931b850182019282810191508684111561551757600080fd5b8286015b8481101561387157805161552e8161425e565b835291830191830161551b565b6000806040838503121561554e57600080fd5b82516001600160401b038082111561556557600080fd5b818501915085601f83011261557957600080fd5b81516020615586826137e8565b60405161559382826135ee565b83815260059390931b85018201928281019150898411156155b357600080fd5b948201945b838610156155d1578551825294820194908201906155b8565b918801519196509093505050808211156155ea57600080fd5b50613aa7858286016154cc565b60006020828403121561560957600080fd5b815163ffffffff81168114610ff057600080fd5b600081518084526020808501808196508360051b8101915082860160005b858110156140f5578284038952815160e0615657868351614102565b818701516001600160801b031990811687890152604080840151909116908701526060808301519087015260808083015115159087015260a08083015115159087015260c0918201519186018190526156b2818701836137a9565b9a87019a955050509084019060010161563b565b60006060808301818452808751808352608092508286019150828160051b8701016020808b0160005b8481101561576357607f198a8503018652815160c061570f86835161404f565b81850151868601526040808301511515908701528982015115158a8701528882015115158987015260a09182015191860181905261574f818701836137a9565b9785019795505050908201906001016156ef565b505087820390880152615776818a61561d565b94505050505082810360408401526154c2818561398f565b600082601f83011261579f57600080fd5b815160206157ac826137e8565b604080516157ba83826135ee565b84815260059490941b86018301938381019250878511156157da57600080fd5b8387015b85811015613d835780516001600160401b03808211156157fe5760008081fd5b9089019060c0828c03601f19018113156158185760008081fd5b85516158238161358b565b8884015161583081613c60565b8152838701518982015260606158478186016144f2565b8883015260806158588187016144f2565b8284015260a0915061586b8287016144f2565b908301529184015191838311156158825760008081fd5b6158908e8b858801016144a3565b9082015287525050509284019284016157de565b600082601f8301126158b557600080fd5b815160206158c2826137e8565b604080516158d083826135ee565b84815260059490941b86018301938381019250878511156158f057600080fd5b8387015b85811015613d835780516001600160401b03808211156159145760008081fd5b9089019060e0828c03601f190181131561592e5760008081fd5b61593661361a565b615941898501614607565b815261594e878501614498565b89820152606061595f818601614498565b888301526080808601518284015260a0915061597c8287016144f2565b9083015260c061598d8682016144f2565b838301529285015192848411156159a657600091508182fd5b6159b48f8c868901016144a3565b908301525087525050509284019284016158f4565b6000602082840312156159db57600080fd5b81516001600160401b03808211156159f257600080fd5b9083019060808286031215615a0657600080fd5b604051615a12816135cf565b615a1b83614498565b8152602083015182811115615a2f57600080fd5b615a3b8782860161578e565b602083015250604083015182811115615a5357600080fd5b615a5f878286016158a4565b604083015250606083015182811115615a7757600080fd5b615a8387828601615076565b60608301525095945050505050565b602081016107f2828461404f565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b808201808211156107f2576107f261515f565b604081526000615b556040830185613ab1565b82810360208401526139c98185613ab1565b601f82111561118a57600081815260208120601f850160051c81016020861015615b8e5750805b601f850160051c820191505b818110156129f757828155600101615b9a565b81516001600160401b03811115615bc657615bc6613575565b615bda81615bd48454614930565b84615b67565b602080601f831160018114615c0f5760008415615bf75750858301515b600019600386901b1c1916600185901b1785556129f7565b600085815260208120601f198616915b82811015615c3e57888601518255948401946001909101908401615c1f565b5085821015615c5c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0386811682528516602082015260a060408201819052600090615c9890830186613ab1565b8281036060840152615caa8186613ab1565b90508281036080840152615cbe81856137a9565b98975050505050505050565b600060208284031215615cdc57600080fd5b8151610ff081613739565b600060033d111561364e5760046000803e5060005160e01c90565b600060443d1015615d105790565b6040516003193d81016004833e81513d6001600160401b038160248401118184111715615d3f57505050505090565b8285019150815181811115615d575750505050505090565b843d8701016020828501011115615d715750505050505090565b615d80602082860101876135ee565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351615e0b816017850160208801613785565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351615e3c816028840160208801613785565b01602801949350505050565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090615e82908301846137a9565b979650505050505050565b80820281158282048414176107f2576107f261515f565b600081615eb357615eb361515f565b50600019019056fea2646970667358221220adde2e1dd9a1202e759cd46bd652c2ab3195df9a6118a93465b2df4a049b3ea664736f6c63430008140033",
    "sourceMap": "808:20415:58:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16463:366;;;;;;:::i;:::-;;:::i;:::-;;;755:25:66;;;743:2;728:18;16463:366:58;;;;;;;;4277:1700;;;;;;:::i;:::-;;:::i;:::-;;20712:177;;;;;;:::i;:::-;;:::i;:::-;;;4260:14:66;;4253:22;4235:41;;4223:2;4208:18;20712:177:58;4095:187:66;19082:158:58;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4560:32:66;;;4542:51;;4530:2;4515:18;19082:158:58;4396:203:66;10907:333:58;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4504:129:18:-;;;;;;:::i;:::-;4578:7;4604:12;;;:6;:12;;;;;;;;:22;;;4504:129;4042:426:28;;;;;;:::i;:::-;;:::i;4929:145:18:-;;;;;;:::i;:::-;;:::i;6038:214::-;;;;;;:::i;:::-;;:::i;19775:169:58:-;;;;;;:::i;:::-;;:::i;1303:102::-;;1363:42;1303:102;;1075:80;;1122:33;1075:80;;972:125:43;;1054:42;972:125;;23032:158;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2569:486:28:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1159:84:58:-;;1208:35;1159:84;;10637:149;;;;;;:::i;:::-;10720:7;10742:22;;;:13;:22;;;;;;;;:31;;;;;;;;:39;;10637:149;22593:191:43;;;;;;:::i;:::-;;:::i;18135:226:58:-;;;;;;:::i;:::-;;:::i;18795:124::-;18892:21;;-1:-1:-1;;;;;18892:21:58;18795:124;;965:48;;1012:1;965:48;;;;;13549:4:66;13537:17;;;13519:36;;13507:2;13492:18;965:48:58;13377:184:66;2333:126:43;;;:::i;:::-;;;;;;;:::i;3427:357:58:-;;;;;;:::i;:::-;;:::i;8243:546::-;;;;;;:::i;:::-;;:::i;3021:145:18:-;;;;;;:::i;:::-;;:::i;5981:1273:58:-;;;;;;:::i;:::-;;:::i;10248:130::-;;;;;;:::i;:::-;;:::i;1430:43:43:-;;;;;2153:49:18;;2198:4;2153:49;;17203:144:58;;;;;;:::i;:::-;;:::i;9516:580::-;;;;;;:::i;:::-;;:::i;11364:130::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;20122:183::-;;;;;;:::i;:::-;;:::i;18537:196::-;;;;;;:::i;:::-;;:::i;1395:31:43:-;;;;;;;;-1:-1:-1;;;;;;26785:52:66;;;26767:71;;26755:2;26740:18;1395:31:43;26621:223:66;914:53:43;;966:1;914:53;;10519:114:58;;;;;;:::i;:::-;;:::i;23194:205:43:-;;;;;;:::i;:::-;;:::i;5354:147:18:-;;;;;;:::i;:::-;;:::i;11709:160:58:-;;;;;;:::i;:::-;11799:4;11818:22;;;:13;:22;;;;;;;;:31;;;;;;;;:41;;;-1:-1:-1;;;11818:41:58;;;;:46;;;11709:160;22788:240:43;;;;;;:::i;:::-;;:::i;20461:218:58:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;17425:165::-;;;;;;:::i;:::-;;:::i;3576:394:28:-;;;;;;:::i;:::-;;:::i;19406:163:58:-;;;;;;:::i;:::-;;:::i;:::-;;;30446:10:66;30434:23;;;30416:42;;30404:2;30389:18;19406:163:58;30272:192:66;16463:366:58;16591:7;16610:29;16631:7;15940:10;-1:-1:-1;15930:20:58;15475:480;16610:29;16606:116;;;16656:21;;:59;;-1:-1:-1;;;16656:59:58;;;;;30643:25:66;;;-1:-1:-1;;;;;30704:32:66;;;30684:18;;;30677:60;16656:21:58;;;;:41;;30616:18:66;;16656:59:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16649:66;;;;16606:116;-1:-1:-1;16727:15:58;16745:18;;;:9;:18;;;;;;;;-1:-1:-1;;;;;16745:27:58;;;;;;;;;;16785:22;;;:13;:22;;;;;:31;;;;;;;;:39;16463:366;;;;;:::o;4277:1700::-;4380:14;4397:1;4380:18;;4405:36;4455:13;4444:49;;;;;;;;;;;;:::i;:::-;4500:34;4537:24;;;:15;:24;;;;;;;;4500:61;;;;;;;;;;;-1:-1:-1;;;;;;4500:61:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4405:88;;-1:-1:-1;4500:34:58;;:61;;4537:24;;4500:61;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;;4500:61:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4500:61:58;;;-1:-1:-1;4500:61:58;;;;-1:-1:-1;;;;;4500:61:58;;;;;;;;;;;;;;;;;;;;;4604:26;;;;4675:27;;;;;4861:23;;40039:32:66;;;4861:23:58;;;40021:51:66;;;;40088:18;;;40081:34;;;4604:26:58;;-1:-1:-1;;;4746:147:58;;4604:26;;4675:27;;4836:50;;39994:18:66;4861:23:58;;;;;;;;;;;;;4836:14;:50::i;:::-;4746:12;:147::i;:::-;4900:40;5038:24;;;:15;:24;;;;;;4943:133;;-1:-1:-1;;;4943:133:58;;4709:184;;-1:-1:-1;4900:40:58;;-1:-1:-1;;;;;4943:21:58;:28;;;;:133;;4990:8;;4709:184;;5038:24;4943:133;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4943:133:58;;;;;;;;;;;;:::i;:::-;4900:176;-1:-1:-1;5140:15:58;5158:32;4900:176;5140:15;5158:16;:32::i;:::-;5200:22;;;;:13;:22;;;;;;;;:31;;;;;;;;:41;;;:31;;-1:-1:-1;;;;5200:41:58;;;;:46;5196:123;;5263:49;;-1:-1:-1;;;5263:49:58;;;;;51705:25:66;;;51746:18;;;51739:34;;;51678:18;;5263:49:58;;;;;;;;5196:123;5410:22;5420:2;5424:7;5410:9;:22::i;:::-;:27;5406:135;;5511:18;;;;:9;:18;;;;;;;;-1:-1:-1;;;;;5511:22:58;;;;;;;;;;;;5454:80;;-1:-1:-1;;;5454:80:58;;;;;51986:25:66;;;52027:18;;;52020:34;;;52070:18;;;52063:34;;;;51959:18;;5454:80:58;51784:319:66;5406:135:58;5647:101;;;;;;;;5718:6;5647:101;;;;5739:2;-1:-1:-1;;;;;5647:101:58;;;;;5685:15;5647:101;;;;;5613:13;:22;5627:7;5613:22;;;;;;;;;;;:31;5636:7;5613:31;;;;;;;;;;;:135;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5613:135:58;;;;;-1:-1:-1;;;;;5613:135:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5779:7;5754:9;:18;5764:7;5754:18;;;;;;;;;;;:22;5773:2;-1:-1:-1;;;;;5754:22:58;-1:-1:-1;;;;;5754:22:58;;;;;;;;;;;;:32;;;;5821:7;5812;5798:64;5830:13;:22;5844:7;5830:22;;;;;;;;;;;:31;5853:7;5830:31;;;;;;;;;;;5798:64;;;;;52472:13:66;;52454:32;;52530:4;52518:17;;;52512:24;-1:-1:-1;;;;;52574:35:66;;52567:4;52552:20;;52545:65;52597:3;52652:19;52673:10;52648:36;52641:4;52626:20;;52619:66;52442:2;52427:18;;52251:440;5798:64:58;;;;;;;;5910:62;;;51705:25:66;;;51761:2;51746:18;;51739:34;;;-1:-1:-1;;;;;5910:62:58;;;5948:1;;5933:4;;5910:62;;51678:18:66;5910:62:58;;;;;;;4374:1603;;;;;;;;4277:1700;;;:::o;20712:177::-;20829:4;20848:36;20872:11;20848:23;:36::i;19082:158::-;19180:21;;:55;;-1:-1:-1;;;19180:55:58;;;;;30643:25:66;;;-1:-1:-1;;;;;30704:32:66;;;30684:18;;;30677:60;19158:7:58;;19180:21;;:42;;30616:18:66;;19180:55:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19173:62;19082:158;-1:-1:-1;;;19082:158:58:o;10907:333::-;10976:13;11001:29;11022:7;15940:10;-1:-1:-1;15930:20:58;15475:480;11001:29;10997:77;;;11047:20;11059:7;11047:11;:20::i;10997:77::-;11152:9;;;;;;;;;-1:-1:-1;11152:9:58;;;;11108:24;;;:15;:24;;;;;11092:46;;11142:20;;11092:46;;11108:28;;;;;11092:46;:::i;:::-;;;;;;;;:70;:143;;11207:24;;;;:15;:24;;;;;:28;;11092:143;;;11173:23;11092:143;11079:156;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10907:333;;;:::o;4042:426:28:-;-1:-1:-1;;;;;4267:20:28;;719:10:33;4267:20:28;;:60;;-1:-1:-1;4291:36:28;4308:4;719:10:33;17425:165:58;:::i;4291:36:28:-;4246:153;;;;-1:-1:-1;;;4246:153:28;;;;;;;:::i;:::-;4409:52;4432:4;4438:2;4442:3;4447:7;4456:4;4409:22;:52::i;:::-;4042:426;;;;;:::o;4929:145:18:-;4578:7;4604:12;;;:6;:12;;;;;;;;:22;;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;-1:-1:-1;;;;;6133:23:18;;719:10:33;6133:23:18;6125:83;;;;-1:-1:-1;;;6125:83:18;;54547:2:66;6125:83:18;;;54529:21:66;54586:2;54566:18;;;54559:30;54625:34;54605:18;;;54598:62;-1:-1:-1;;;54676:18:66;;;54669:45;54731:19;;6125:83:18;54345:411:66;6125:83:18;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;19775:169:58:-;19881:21;;:58;;-1:-1:-1;;;19881:58:58;;;;;30643:25:66;;;-1:-1:-1;;;;;30704:32:66;;;30684:18;;;30677:60;19854:12:58;;19881:21;;:45;;30616:18:66;;19881:58:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;19881:58:58;;;;;;;;;;;;:::i;23032:158:43:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;23142:43:43;;-1:-1:-1;;;23142:43:43;;4260:14:66;;4253:22;23142:43:43;;;4235:41:66;-1:-1:-1;;;;;23142:17:43;:23;;;;4208:18:66;;23142:43:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;23142:43:43;;;;;;;;;;;;:::i;2569:486:28:-;2702:16;2757:3;:10;2738:8;:15;:29;2730:83;;;;-1:-1:-1;;;2730:83:28;;56570:2:66;2730:83:28;;;56552:21:66;56609:2;56589:18;;;56582:30;56648:34;56628:18;;;56621:62;-1:-1:-1;;;56699:18:66;;;56692:39;56748:19;;2730:83:28;56368:405:66;2730:83:28;2824:30;2871:8;:15;-1:-1:-1;;;;;2857:30:28;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2857:30:28;;2824:63;;2903:9;2898:120;2922:8;:15;2918:1;:19;2898:120;;;2977:30;2987:8;2996:1;2987:11;;;;;;;;:::i;:::-;;;;;;;3000:3;3004:1;3000:6;;;;;;;;:::i;:::-;;;;;;;2977:9;:30::i;:::-;2958:13;2972:1;2958:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2939:3;;;:::i;:::-;;;2898:120;;;-1:-1:-1;3035:13:28;2569:486;-1:-1:-1;;;2569:486:28:o;22593:191:43:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;22736:43:43;;-1:-1:-1;;;22736:43:43;;:17;-1:-1:-1;;;;;22736:23:43;;;;:43;;22760:7;;22769:9;;22736:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22736:43:43;;;;;;;;;;;;:::i;18135:226:58:-;1122:33;2631:16:18;2642:4;2631:10;:16::i;:::-;18342:2:58::1;-1:-1:-1::0;;;;;18311:45:58::1;18336:4;-1:-1:-1::0;;;;;18311:45:58::1;18326:8;-1:-1:-1::0;;;;;18311:45:58::1;;18346:2;18350:5;18311:45;;;;;;51705:25:66::0;;;51761:2;51746:18;;51739:34;51693:2;51678:18;;51531:248;18311:45:58::1;;;;;;;;18135:226:::0;;;;;;:::o;2333:126:43:-;2372:25;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2372:25:43;2412:42;2424:6;2432:21;2412:11;:42::i;:::-;2405:49;;2333:126;:::o;3427:357:58:-;4860:13:27;;1012:1:58;;4860:13:27;;;;;4859:14;:40;;;;-1:-1:-1;4877:12:27;;:22;;;;:12;;:22;4859:40;4851:99;;;;-1:-1:-1;;;4851:99:27;;57768:2:66;4851:99:27;;;57750:21:66;57807:2;57787:18;;;57780:30;57846:34;57826:18;;;57819:62;-1:-1:-1;;;57897:18:66;;;57890:44;57951:19;;4851:99:27;57566:410:66;4851:99:27;4960:12;:22;;-1:-1:-1;;4992:20:27;4960:22;;;4992:20;4960:22;4992:20;;;3642:14:58::1;::::0;:11:::1;:14::i;:::-;3636:28:::0;:33;;:67:::1;;-1:-1:-1::0;3681:4:58::1;3673:25;:30:::0;3636:67:::1;3632:148;;;3713:15;3721:6;3713:7;:15::i;:::-;3736:37;2198:4:18;3767:5:58::0;3736:10:::1;:37::i;:::-;5049:5:27::0;5033:21;;-1:-1:-1;;5033:21:27;;;5069:20;;13549:4:66;13537:17;;13519:36;;5069:20:27;;13507:2:66;13492:18;5069:20:27;;;;;;;3427:357:58;;;:::o;8243:546::-;1208:35;2631:16:18;2642:4;2631:10;:16::i;:::-;8569:1:58::1;8527:24:::0;;;:15:::1;:24;::::0;;;;:30:::1;;::::0;-1:-1:-1;;;;;8527:30:58::1;:44:::0;8523:111:::1;;8588:39;::::0;-1:-1:-1;;;8588:39:58;;::::1;::::0;::::1;755:25:66::0;;;728:18;;8588:39:58::1;609:177:66::0;8523:111:58::1;8639:145;8661:5;8674:19;8701:8;8717:12;8737:13;8758:5;8771:7;8639:14;:145::i;:::-;8243:546:::0;;;;;;;;:::o;3021:145:18:-;3107:4;3130:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3130:29:18;;;;;;;;;;;;;;;3021:145::o;5981:1273:58:-;6072:36;6122:13;6111:49;;;;;;;;;;;;:::i;:::-;6167:34;6204:24;;;:15;:24;;;;;;;;6167:61;;;;;;;;;;;-1:-1:-1;;;;;;6167:61:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6072:88;;-1:-1:-1;6167:34:58;;:61;;6204:24;;6167:61;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;;6167:61:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6167:61:58;;;-1:-1:-1;6167:61:58;;;;-1:-1:-1;;;;;6167:61:58;;;;;;;;;;;;;;;;;;;6271:26;;;;6342:27;;;;6528:19;;;;;755:25:66;;;6271:26:58;;-1:-1:-1;6271:26:58;6342:27;-1:-1:-1;;6413:143:58;;6271:26;;6342:27;;6503:46;;728:18:66;6528:19:58;609:177:66;6413:143:58;6563:40;6701:24;;;:15;:24;;;;;;6606:133;;-1:-1:-1;;;6606:133:58;;6376:180;;-1:-1:-1;6563:40:58;;-1:-1:-1;;;;;6606:21:58;:28;;;;:133;;6653:8;;6376:180;;6701:24;6606:133;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6606:133:58;;;;;;;;;;;;:::i;:::-;6563:176;-1:-1:-1;6746:15:58;6764:32;6563:176;6746:15;6764:16;:32::i;:::-;6921:22;;;;:13;:22;;;;;;;;:31;;;;;;;;:41;;;:31;;-1:-1:-1;;;;6921:41:58;;;;;:46;;6917:116;;6984:42;;-1:-1:-1;;;6984:42:58;;;;;51705:25:66;;;51746:18;;;51739:34;;;51678:18;;6984:42:58;51531:248:66;6917:116:58;7105:22;;;;:13;:22;;;;;;;;:31;;;;;;;;;:41;;;:67;;;7156:15;7105:67;-1:-1:-1;;;7105:67:58;-1:-1:-1;;;;7105:67:58;;;;;;7217:31;;;;;;;7184:65;7128:7;;7119;;7184:65;;;;52472:13:66;;52454:32;;52530:4;52518:17;;;52512:24;-1:-1:-1;;;;;52574:35:66;;52567:4;52552:20;;52545:65;52597:3;52652:19;52673:10;52648:36;52641:4;52626:20;;52619:66;52442:2;52427:18;;52251:440;7184:65:58;;;;;;;;6066:1188;;;;;;;5981:1273;;:::o;10248:130::-;2198:4:18;2631:16;2198:4;2631:10;:16::i;:::-;10339:34:58::1;10366:6;10339:26;:34::i;17203:144::-:0;17318:24;;-1:-1:-1;;;17318:24:58;;;;;;;;;;;9516:580;9761:19;9783:24;;;:15;:24;;;;;:30;;;-1:-1:-1;;;;;9783:30:58;9838:10;9823:25;;9819:106;;9865:53;;-1:-1:-1;;;9865:53:58;;-1:-1:-1;;;;;;58201:52:66;;9865:53:58;;;58183:71:66;-1:-1:-1;;;;;58328:15:66;;58308:18;;;58301:43;9907:10:58;58360:18:66;;;58353:43;58156:18;;9865:53:58;57981:421:66;9819:106:58;9930:94;9942:5;9949:19;9970:8;9980:12;9994:13;10009:5;10016:7;9930:11;:94::i;:::-;10057:7;10036:55;10066:15;:24;10082:7;10066:24;;;;;;;;;;;10036:55;;;;;;:::i;:::-;;;;;;;;9755:341;9516:580;;;;;;;:::o;11364:130::-;11430:20;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11430:20:58;11465:24;;;;:15;:24;;;;;;;;;11458:31;;;;;;;;;;;-1:-1:-1;;;;;;11458:31:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11465:24;;11458:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;;11458:31:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;11458:31:58;;;-1:-1:-1;11458:31:58;;;;-1:-1:-1;;;;;11458:31:58;;;;;;;;;;;;;;;;11364:130;-1:-1:-1;;11364:130:58:o;20122:183::-;20225:21;;:75;;-1:-1:-1;;;20225:75:58;;;;;62902:25:66;;;62975:4;62963:17;;62943:18;;;62936:45;20205:5:58;;-1:-1:-1;;;;;20225:21:58;;:64;;62875:18:66;;20225:75:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;18537:196::-;2198:4:18;2631:16;2198:4;2631:10;:16::i;:::-;-1:-1:-1;18661:21:58::1;:67:::0;;-1:-1:-1;;;;;;18661:67:58::1;-1:-1:-1::0;;;;;18661:67:58;;;::::1;::::0;;;::::1;::::0;;18537:196::o;10519:114::-;2198:4:18;2631:16;2198:4;2631:10;:16::i;:::-;10610:18:58::1;10618:9;10610:7;:18::i;23194:205:43:-:0;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;23340:54:43;;-1:-1:-1;;;23340:54:43;;:17;-1:-1:-1;;;;;23340:23:43;;;;:54;;23364:18;;23384:9;;23340:54;;;:::i;5354:147:18:-;4578:7;4604:12;;;:6;:12;;;;;;;;:22;;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;22788:240:43:-:0;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;22960:63:43;;-1:-1:-1;;;22960:63:43;;:17;-1:-1:-1;;;;;22960:23:43;;;;:63;;22984:7;;22993:18;;23013:9;;22960:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;22960:63:43;;;;;;;;;;;;:::i;:::-;22953:70;22788:240;-1:-1:-1;;;;22788:240:43:o;20461:218:58:-;20596:21;;:78;;-1:-1:-1;;;20596:78:58;;;;;755:25:66;;;20549:16:58;;;;-1:-1:-1;;;;;20596:21:58;;;;:74;;728:18:66;;20596:78:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20596:78:58;;;;;;;;;;;;:::i;:::-;20589:85;;;;20461:218;;;:::o;17425:165::-;17542:4;17561:24;;-1:-1:-1;;;17561:24:58;;;;;;;;;;;3576:394:28;-1:-1:-1;;;;;3776:20:28;;719:10:33;3776:20:28;;:60;;-1:-1:-1;3800:36:28;3817:4;719:10:33;17425:165:58;:::i;3800:36:28:-;3755:153;;;;-1:-1:-1;;;3755:153:28;;;;;;;:::i;:::-;3918:45;3936:4;3942:2;3946;3950:6;3958:4;3918:17;:45::i;19406:163:58:-;19506:21;;:58;;-1:-1:-1;;;19506:58:58;;;;;30643:25:66;;;-1:-1:-1;;;;;30704:32:66;;;30684:18;;;30677:60;19485:6:58;;19506:21;;:45;;30616:18:66;;19506:58:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;22240:144:43:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;22347:32:43;;-1:-1:-1;;;22347:32:43;;:17;-1:-1:-1;;;;;22347:23:43;;;;:32;;22371:7;;22347:32;;;:::i;26123:247::-;26277:26;;:::i;:::-;26318:47;;-1:-1:-1;;;26318:47:43;;-1:-1:-1;;;;;26318:15:43;:21;;;;:47;;26340:5;;26347:6;;26355:9;;26318:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;26318:47:43;;;;;;;;;;;;:::i;176:397:48:-;291:7;;360:154;384:6;:12;;;:19;380:1;:23;360:154;;;450:8;422:36;;;;;;;;:::i;:::-;:6;:12;;;435:1;422:15;;;;;;;;:::i;:::-;;;;;;;:24;;;:36;;;;;;;;:::i;:::-;;418:90;;477:6;:12;;;490:1;477:15;;;;;;;;:::i;:::-;;;;;;;:22;;;470:29;;;;;418:90;405:3;;;;:::i;:::-;;;;360:154;;;;559:8;526:42;;-1:-1:-1;;;526:42:48;;;;;;;;:::i;1236:305:28:-;1338:4;-1:-1:-1;;;;;;1373:41:28;;-1:-1:-1;;;1373:41:28;;:109;;-1:-1:-1;;;;;;;1430:52:28;;-1:-1:-1;;;1430:52:28;1373:109;:161;;;;1498:36;1522:11;1498:23;:36::i;1940:103::-;2000:13;2032:4;2025:11;;;;;:::i;6211:1115::-;6431:7;:14;6417:3;:10;:28;6409:81;;;;-1:-1:-1;;;6409:81:28;;75369:2:66;6409:81:28;;;75351:21:66;75408:2;75388:18;;;75381:30;75447:34;75427:18;;;75420:62;-1:-1:-1;;;75498:18:66;;;75491:38;75546:19;;6409:81:28;75167:404:66;6409:81:28;-1:-1:-1;;;;;6508:16:28;;6500:66;;;;-1:-1:-1;;;6500:66:28;;;;;;;:::i;:::-;719:10:33;6619:60:28;719:10:33;6650:4:28;6656:2;6660:3;6665:7;6674:4;6619:20;:60::i;:::-;6695:9;6690:411;6714:3;:10;6710:1;:14;6690:411;;;6745:10;6758:3;6762:1;6758:6;;;;;;;;:::i;:::-;;;;;;;6745:19;;6778:14;6795:7;6803:1;6795:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6820:19;6842:13;;;:9;:13;;;;;;-1:-1:-1;;;;;6842:19:28;;;;;;;;;;;;6795:10;;-1:-1:-1;6883:21:28;;;;6875:76;;;;-1:-1:-1;;;6875:76:28;;;;;;;:::i;:::-;6993:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6993:19:28;;;;;;;;;;7015:20;;;6993:42;;7063:17;;;;;;;:27;;7015:20;;6993:13;7063:27;;7015:20;;7063:27;:::i;:::-;;;;;;;;6731:370;;;6726:3;;;;:::i;:::-;;;6690:411;;;;7146:2;-1:-1:-1;;;;;7116:47:28;7140:4;-1:-1:-1;;;;;7116:47:28;7130:8;-1:-1:-1;;;;;7116:47:28;;7150:3;7155:7;7116:47;;;;;;;:::i;:::-;;;;;;;;7244:75;7280:8;7290:4;7296:2;7300:3;7305:7;7314:4;7244:35;:75::i;:::-;6399:927;6211:1115;;;;;:::o;3460:103:18:-;3526:30;3537:4;719:10:33;3526::18;:30::i;:::-;3460:103;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7708:12;;;;7740:4;7708:12;;;;;;;;-1:-1:-1;;;;;7708:29:18;;;;;;;;;;:36;;-1:-1:-1;;7708:36:18;;;;;;;7763:40;;719:10:33;;7708:12:18;;7763:40;;7708:12;7763:40;7587:233;;:::o;7991:234::-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;8112:29:18;;;;;;;;;;:37;;-1:-1:-1;;8112:37:18;;;8168:40;719:10:33;;8112:12:18;;8168:40;;8144:5;8168:40;7991:234;;:::o;2632:222:43:-;2729:25;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:25:43;2769:80;;;;;;;;2796:5;-1:-1:-1;;;;;2769:80:43;;;;;;2810:37;2827:19;-1:-1:-1;;;;;;;;;;;;;3100:55:43;;;;;;;;;;;;;;2992:168;2810:37;2769:80;;2762:87;2632:222;-1:-1:-1;;;2632:222:43:o;8149:86:28:-;8215:4;:13;8222:6;8215:4;:13;:::i;12481:435:58:-;12721:20;12733:7;12721:11;:20::i;:::-;12747:94;12759:5;12766:19;12787:8;12797:12;12811:13;12826:5;12833:7;12747:11;:94::i;:::-;12877:7;12853:58;12886:15;:24;12902:7;12886:24;;;;;;;;;;;12853:58;;;;;;:::i;:::-;;;;;;;;12481:435;;;;;;;:::o;15959:110::-;16032:23;:32;16058:6;16032:23;:32;:::i;13484:593::-;13721:24;;;;:15;:24;;;;;:45;;-1:-1:-1;;;;;;13721:45:58;;;;;;;;-1:-1:-1;13772:37:58;;:79;;-1:-1:-1;;13772:79:58;;;;;;;13857:28;;:39;13888:8;13857:28;:39;:::i;:::-;;13902:32;13912:7;13921:12;13902:9;:32::i;:::-;13940:34;13951:7;13960:13;13940:10;:34::i;:::-;-1:-1:-1;;;;;14013:19:58;;;:59;;14067:5;14013:59;;;1363:42;14013:59;13980:24;;;;:15;:24;;;;;;:30;;:92;;-1:-1:-1;;;;;;13980:92:58;-1:-1:-1;;;;;13980:92:58;;;;;;;;;-1:-1:-1;;;;;;13484:593:58:o;4918:947:28:-;-1:-1:-1;;;;;5099:16:28;;5091:66;;;;-1:-1:-1;;;5091:66:28;;;;;;;:::i;:::-;719:10:33;5168:16:28;5232:21;5250:2;5232:17;:21::i;:::-;5209:44;;5263:24;5290:25;5308:6;5290:17;:25::i;:::-;5263:52;;5326:60;5347:8;5357:4;5363:2;5367:3;5372:7;5381:4;5326:20;:60::i;:::-;5397:19;5419:13;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5419:19:28;;;;;;;;;;5456:21;;;;5448:76;;;;-1:-1:-1;;;5448:76:28;;;;;;;:::i;:::-;5558:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5558:19:28;;;;;;;;;;5580:20;;;5558:42;;5620:17;;;;;;;:27;;5580:20;;5558:13;5620:27;;5580:20;;5620:27;:::i;:::-;;;;-1:-1:-1;;5663:46:28;;;51705:25:66;;;51761:2;51746:18;;51739:34;;;-1:-1:-1;;;;;5663:46:28;;;;;;;;;;;;;;51678:18:66;5663:46:28;;;;;;;5790:68;5821:8;5831:4;5837:2;5841;5845:6;5853:4;5790:30;:68::i;:::-;5081:784;;;;4918:947;;;;;:::o;2732:202:18:-;2817:4;-1:-1:-1;;;;;;2840:47:18;;-1:-1:-1;;;2840:47:18;;:87;;-1:-1:-1;;;;;;;;;;937:40:36;;;2891:36:18;829:155:36;16116:792:28;-1:-1:-1;;;;;16348:13:28;;1702:19:32;:23;16344:558:28;;16383:79;;-1:-1:-1;;;16383:79:28;;-1:-1:-1;;;;;16383:43:28;;;;;:79;;16427:8;;16437:4;;16443:3;;16448:7;;16457:4;;16383:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16383:79:28;;;;;;;;-1:-1:-1;;16383:79:28;;;;;;;;;;;;:::i;:::-;;;16379:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;16768:6;16761:14;;-1:-1:-1;;;16761:14:28;;;;;;;;:::i;16379:513::-;;;16815:62;;-1:-1:-1;;;16815:62:28;;81222:2:66;16815:62:28;;;81204:21:66;81261:2;81241:18;;;81234:30;81300:34;81280:18;;;81273:62;-1:-1:-1;;;81351:18:66;;;81344:50;81411:19;;16815:62:28;81020:416:66;16379:513:28;-1:-1:-1;;;;;;16541:60:28;;-1:-1:-1;;;16541:60:28;16537:157;;16625:50;;-1:-1:-1;;;16625:50:28;;;;;;;:::i;16537:157::-;16463:245;16116:792;;;;;;:::o;3844:479:18:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;4022:252:18;;;;;;;;;;-1:-1:-1;;;3970:336:18;;;;;;;:::i;15143:199:58:-;15199:29;15220:7;15940:10;-1:-1:-1;15930:20:58;15475:480;15199:29;15195:94;;;15245:37;;-1:-1:-1;;;15245:37:58;;;;;755:25:66;;;728:18;;15245:37:58;609:177:66;15195:94:58;15295:24;;;;:15;:24;;;;;:32;;:42;15143:199::o;14268:249::-;14346:35;14384:24;;;:15;:24;;;;;:37;;;14427:86;14451:5;:12;14447:1;:16;14427:86;;;14478:13;14497:5;14503:1;14497:8;;;;;;;;:::i;:::-;;;;;;;;;;;;14478:28;;;;;;;;-1:-1:-1;14478:28:58;;;;;;;;;;;;;;;;14497:8;;14478:28;;;;;;-1:-1:-1;;14478:28:58;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;14478:28:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14478:28:58;;;;;-1:-1:-1;;14478:28:58;;;;;;;-1:-1:-1;;14478:28:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;14465:3;;;;;:::i;:::-;;;;14427:86;;;;14340:177;14268:249;;:::o;14706:258::-;14787:37;14827:24;;;:15;:24;;;;;:38;;;14871:89;14895:6;:13;14891:1;:17;14871:89;;;14923:14;14943:6;14950:1;14943:9;;;;;;;;:::i;:::-;;;;;;;;;;;;14923:30;;;;;;;;-1:-1:-1;14923:30:58;;;;;;;;;;;;;;;;14943:9;;14923:30;;;;;;-1:-1:-1;;14923:30:58;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;14923:30:58;;;;;;-1:-1:-1;;14923:30:58;;;;;;;;;;;;;;;;;;-1:-1:-1;14923:30:58;;;;-1:-1:-1;;;;;;14923:30:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14923:30:58;;;;;;-1:-1:-1;;14923:30:58;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;14910:3;;;;;:::i;:::-;;;;14871:89;;16914:193:28;17033:16;;;17047:1;17033:16;;;;;;;;;16980;;17008:22;;17033:16;;;;;;;;;;;;-1:-1:-1;17033:16:28;17008:41;;17070:7;17059:5;17065:1;17059:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;17095:5;16914:193;-1:-1:-1;;16914:193:28:o;15385:725::-;-1:-1:-1;;;;;15592:13:28;;1702:19:32;:23;15588:516:28;;15627:72;;-1:-1:-1;;;15627:72:28;;-1:-1:-1;;;;;15627:38:28;;;;;:72;;15666:8;;15676:4;;15682:2;;15686:6;;15694:4;;15627:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15627:72:28;;;;;;;;-1:-1:-1;;15627:72:28;;;;;;;;;;;;:::i;:::-;;;15623:471;;;;:::i;:::-;-1:-1:-1;;;;;;15748:55:28;;-1:-1:-1;;;15748:55:28;15744:152;;15827:50;;-1:-1:-1;;;15827:50:28;;;;;;;:::i;2407:149:35:-;2465:13;2497:52;-1:-1:-1;;;;;2509:22:35;;343:2;1818:437;1893:13;1918:19;1950:10;1954:6;1950:1;:10;:::i;:::-;:14;;1963:1;1950:14;:::i;:::-;-1:-1:-1;;;;;1940:25:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1940:25:35;;1918:47;;-1:-1:-1;;;1975:6:35;1982:1;1975:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1975:15:35;;;;;;;;;-1:-1:-1;;;2000:6:35;2007:1;2000:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;2000:15:35;;;;;;;;-1:-1:-1;2030:9:35;2042:10;2046:6;2042:1;:10;:::i;:::-;:14;;2055:1;2042:14;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;-1:-1:-1;;;2105:5:35;2113:3;2105:11;2096:21;;;;;;;:::i;:::-;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;:33;-1:-1:-1;;;;;2084:33:35;;;;;;;;-1:-1:-1;2141:1:35;2131:11;;;;;2065:3;;;:::i;:::-;;;2025:128;;;-1:-1:-1;2170:10:35;;2162:55;;;;-1:-1:-1;;;2162:55:35;;85107:2:66;2162:55:35;;;85089:21:66;;;85126:18;;;85119:30;85185:34;85165:18;;;85158:62;85237:18;;2162:55:35;84905:356:66;-1:-1:-1;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:66;-1:-1:-1;;;;;89:31:66;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:315::-;357:6;365;418:2;406:9;397:7;393:23;389:32;386:52;;;434:1;431;424:12;386:52;473:9;460:23;492:31;517:5;492:31;:::i;:::-;542:5;594:2;579:18;;;;566:32;;-1:-1:-1;;;289:315:66:o;791:127::-;852:10;847:3;843:20;840:1;833:31;883:4;880:1;873:15;907:4;904:1;897:15;923:226;1010:4;1002:6;998:17;1081:6;1069:10;1066:22;-1:-1:-1;;;;;1033:10:66;1030:34;1027:62;1024:88;;;1092:18;;:::i;:::-;1128:2;1121:22;-1:-1:-1;923:226:66:o;1154:::-;1241:4;1233:6;1229:17;1312:6;1300:10;1297:22;-1:-1:-1;;;;;1264:10:66;1261:34;1258:62;1255:88;;;1323:18;;:::i;1385:226::-;1472:4;1464:6;1460:17;1543:6;1531:10;1528:22;-1:-1:-1;;;;;1495:10:66;1492:34;1489:62;1486:88;;;1554:18;;:::i;1616:249::-;1726:2;1707:13;;-1:-1:-1;;1703:27:66;1691:40;;-1:-1:-1;;;;;1746:34:66;;1782:22;;;1743:62;1740:88;;;1808:18;;:::i;:::-;1844:2;1837:22;-1:-1:-1;;1616:249:66:o;1870:254::-;1943:2;1937:9;1985:4;1973:17;;-1:-1:-1;;;;;2005:34:66;;2041:22;;;2002:62;1999:88;;;2067:18;;:::i;:::-;2103:2;2096:22;1870:254;:::o;2129:118::-;2196:2;2190:9;2208:33;2190:9;2208:33;:::i;:::-;2129:118;:::o;2252:124::-;2325:2;2319:9;2337:33;2319:9;2337:33;:::i;2381:186::-;2429:4;-1:-1:-1;;;;;2454:6:66;2451:30;2448:56;;;2484:18;;:::i;:::-;-1:-1:-1;2550:2:66;2529:15;-1:-1:-1;;2525:29:66;2556:4;2521:40;;2381:186::o;2572:508::-;2614:5;2667:3;2660:4;2652:6;2648:17;2644:27;2634:55;;2685:1;2682;2675:12;2634:55;2721:6;2708:20;2747:31;2775:2;2747:31;:::i;:::-;2807:2;2801:9;2819:31;2847:2;2839:6;2819:31;:::i;:::-;2874:2;2866:6;2859:18;2920:3;2913:4;2908:2;2900:6;2896:15;2892:26;2889:35;2886:55;;;2937:1;2934;2927:12;2886:55;3001:2;2994:4;2986:6;2982:17;2975:4;2967:6;2963:17;2950:54;3048:1;3024:15;;;3041:4;3020:26;3013:37;;;;-1:-1:-1;3028:6:66;2572:508;-1:-1:-1;;;2572:508:66:o;3085:523::-;3171:6;3179;3187;3240:2;3228:9;3219:7;3215:23;3211:32;3208:52;;;3256:1;3253;3246:12;3208:52;3296:9;3283:23;-1:-1:-1;;;;;3321:6:66;3318:30;3315:50;;;3361:1;3358;3351:12;3315:50;3384:49;3425:7;3416:6;3405:9;3401:22;3384:49;:::i;:::-;3374:59;;;3483:2;3472:9;3468:18;3455:32;3496:31;3521:5;3496:31;:::i;:::-;3085:523;;3546:5;;-1:-1:-1;;;3598:2:66;3583:18;;;;3570:32;;3085:523::o;3613:131::-;-1:-1:-1;;;;;;3687:32:66;;3677:43;;3667:71;;3734:1;3731;3724:12;3749:245;3807:6;3860:2;3848:9;3839:7;3835:23;3831:32;3828:52;;;3876:1;3873;3866:12;3828:52;3915:9;3902:23;3934:30;3958:5;3934:30;:::i;4604:180::-;4663:6;4716:2;4704:9;4695:7;4691:23;4687:32;4684:52;;;4732:1;4729;4722:12;4684:52;-1:-1:-1;4755:23:66;;4604:180;-1:-1:-1;4604:180:66:o;4789:250::-;4874:1;4884:113;4898:6;4895:1;4892:13;4884:113;;;4974:11;;;4968:18;4955:11;;;4948:39;4920:2;4913:10;4884:113;;;-1:-1:-1;;5031:1:66;5013:16;;5006:27;4789:250::o;5044:271::-;5086:3;5124:5;5118:12;5151:6;5146:3;5139:19;5167:76;5236:6;5229:4;5224:3;5220:14;5213:4;5206:5;5202:16;5167:76;:::i;:::-;5297:2;5276:15;-1:-1:-1;;5272:29:66;5263:39;;;;5304:4;5259:50;;5044:271;-1:-1:-1;;5044:271:66:o;5320:220::-;5469:2;5458:9;5451:21;5432:4;5489:45;5530:2;5519:9;5515:18;5507:6;5489:45;:::i;5912:183::-;5972:4;-1:-1:-1;;;;;5997:6:66;5994:30;5991:56;;;6027:18;;:::i;:::-;-1:-1:-1;6072:1:66;6068:14;6084:4;6064:25;;5912:183::o;6100:724::-;6154:5;6207:3;6200:4;6192:6;6188:17;6184:27;6174:55;;6225:1;6222;6215:12;6174:55;6261:6;6248:20;6287:4;6310:43;6350:2;6310:43;:::i;:::-;6382:2;6376:9;6394:31;6422:2;6414:6;6394:31;:::i;:::-;6460:18;;;6552:1;6548:10;;;;6536:23;;6532:32;;;6494:15;;;;-1:-1:-1;6576:15:66;;;6573:35;;;6604:1;6601;6594:12;6573:35;6640:2;6632:6;6628:15;6652:142;6668:6;6663:3;6660:15;6652:142;;;6734:17;;6722:30;;6772:12;;;;6685;;6652:142;;;-1:-1:-1;6812:6:66;6100:724;-1:-1:-1;;;;;;6100:724:66:o;6829:1071::-;6983:6;6991;6999;7007;7015;7068:3;7056:9;7047:7;7043:23;7039:33;7036:53;;;7085:1;7082;7075:12;7036:53;7124:9;7111:23;7143:31;7168:5;7143:31;:::i;:::-;7193:5;-1:-1:-1;7250:2:66;7235:18;;7222:32;7263:33;7222:32;7263:33;:::i;:::-;7315:7;-1:-1:-1;7373:2:66;7358:18;;7345:32;-1:-1:-1;;;;;7426:14:66;;;7423:34;;;7453:1;7450;7443:12;7423:34;7476:61;7529:7;7520:6;7509:9;7505:22;7476:61;:::i;:::-;7466:71;;7590:2;7579:9;7575:18;7562:32;7546:48;;7619:2;7609:8;7606:16;7603:36;;;7635:1;7632;7625:12;7603:36;7658:63;7713:7;7702:8;7691:9;7687:24;7658:63;:::i;:::-;7648:73;;7774:3;7763:9;7759:19;7746:33;7730:49;;7804:2;7794:8;7791:16;7788:36;;;7820:1;7817;7810:12;7788:36;;7843:51;7886:7;7875:8;7864:9;7860:24;7843:51;:::i;:::-;7833:61;;;6829:1071;;;;;;;;:::o;7905:315::-;7973:6;7981;8034:2;8022:9;8013:7;8009:23;8005:32;8002:52;;;8050:1;8047;8040:12;8002:52;8086:9;8073:23;8063:33;;8146:2;8135:9;8131:18;8118:32;8159:31;8184:5;8159:31;:::i;:::-;8209:5;8199:15;;;7905:315;;;;;:::o;8684:118::-;8770:5;8763:13;8756:21;8749:5;8746:32;8736:60;;8792:1;8789;8782:12;8807:128;8872:20;;8901:28;8872:20;8901:28;:::i;8940:241::-;8996:6;9049:2;9037:9;9028:7;9024:23;9020:32;9017:52;;;9065:1;9062;9055:12;9017:52;9104:9;9091:23;9123:28;9145:5;9123:28;:::i;9186:437::-;9245:3;9289:5;9283:12;9316:4;9311:3;9304:17;9342:47;9383:4;9378:3;9374:14;9360:12;9342:47;:::i;:::-;9330:59;;9452:4;9445:5;9441:16;9435:23;9428:31;9421:39;9414:4;9409:3;9405:14;9398:63;9509:4;9502:5;9498:16;9492:23;9557:3;9551:4;9547:14;9540:4;9535:3;9531:14;9524:38;9578:39;9612:4;9596:14;9578:39;:::i;:::-;9571:46;9186:437;-1:-1:-1;;;;;9186:437:66:o;9628:287::-;9827:2;9816:9;9809:21;9790:4;9847:62;9905:2;9894:9;9890:18;9882:6;9847:62;:::i;9920:1277::-;10038:6;10046;10099:2;10087:9;10078:7;10074:23;10070:32;10067:52;;;10115:1;10112;10105:12;10067:52;10155:9;10142:23;-1:-1:-1;;;;;10225:2:66;10217:6;10214:14;10211:34;;;10241:1;10238;10231:12;10211:34;10279:6;10268:9;10264:22;10254:32;;10324:7;10317:4;10313:2;10309:13;10305:27;10295:55;;10346:1;10343;10336:12;10295:55;10382:2;10369:16;10404:4;10427:43;10467:2;10427:43;:::i;:::-;10499:2;10493:9;10511:31;10539:2;10531:6;10511:31;:::i;:::-;10577:18;;;10665:1;10661:10;;;;10653:19;;10649:28;;;10611:15;;;;-1:-1:-1;10689:19:66;;;10686:39;;;10721:1;10718;10711:12;10686:39;10745:11;;;;10765:217;10781:6;10776:3;10773:15;10765:217;;;10861:3;10848:17;10878:31;10903:5;10878:31;:::i;:::-;10922:18;;10798:12;;;;10960;;;;10765:217;;;11001:6;-1:-1:-1;;11045:18:66;;11032:32;;-1:-1:-1;;11076:16:66;;;11073:36;;;11105:1;11102;11095:12;11073:36;;11128:63;11183:7;11172:8;11161:9;11157:24;11128:63;:::i;:::-;11118:73;;;9920:1277;;;;;:::o;11202:435::-;11255:3;11293:5;11287:12;11320:6;11315:3;11308:19;11346:4;11375:2;11370:3;11366:12;11359:19;;11412:2;11405:5;11401:14;11433:1;11443:169;11457:6;11454:1;11451:13;11443:169;;;11518:13;;11506:26;;11552:12;;;;11587:15;;;;11479:1;11472:9;11443:169;;;-1:-1:-1;11628:3:66;;11202:435;-1:-1:-1;;;;;11202:435:66:o;11642:261::-;11821:2;11810:9;11803:21;11784:4;11841:56;11893:2;11882:9;11878:18;11870:6;11841:56;:::i;11908:248::-;11976:6;11984;12037:2;12025:9;12016:7;12012:23;12008:32;12005:52;;;12053:1;12050;12043:12;12005:52;-1:-1:-1;;12076:23:66;;;12146:2;12131:18;;;12118:32;;-1:-1:-1;11908:248:66:o;12161:539::-;12247:6;12255;12308:2;12296:9;12287:7;12283:23;12279:32;12276:52;;;12324:1;12321;12314:12;12276:52;12364:9;12351:23;-1:-1:-1;;;;;12434:2:66;12426:6;12423:14;12420:34;;;12450:1;12447;12440:12;12420:34;12473:49;12514:7;12505:6;12494:9;12490:22;12473:49;:::i;:::-;12463:59;;12575:2;12564:9;12560:18;12547:32;12531:48;;12604:2;12594:8;12591:16;12588:36;;;12620:1;12617;12610:12;12588:36;;12643:51;12686:7;12675:8;12664:9;12660:24;12643:51;:::i;12705:667::-;12800:6;12808;12816;12824;12832;12885:3;12873:9;12864:7;12860:23;12856:33;12853:53;;;12902:1;12899;12892:12;12853:53;12941:9;12928:23;12960:31;12985:5;12960:31;:::i;:::-;13010:5;-1:-1:-1;13067:2:66;13052:18;;13039:32;13080:33;13039:32;13080:33;:::i;:::-;13132:7;-1:-1:-1;13191:2:66;13176:18;;13163:32;13204:33;13163:32;13204:33;:::i;:::-;12705:667;;;;-1:-1:-1;13256:7:66;;13310:2;13295:18;;13282:32;;-1:-1:-1;13361:3:66;13346:19;13333:33;;12705:667;-1:-1:-1;;12705:667:66:o;13928:281::-;13783:12;;-1:-1:-1;;;;;;13779:58:66;13767:71;;13907:4;13896:16;;;13890:23;13884:30;13877:38;13870:46;13854:14;;;13847:70;14136:2;14121:18;;14148:55;13695:228;14214:456;14292:6;14300;14353:2;14341:9;14332:7;14328:23;14324:32;14321:52;;;14369:1;14366;14359:12;14321:52;14409:9;14396:23;-1:-1:-1;;;;;14434:6:66;14431:30;14428:50;;;14474:1;14471;14464:12;14428:50;14497:49;14538:7;14529:6;14518:9;14514:22;14497:49;:::i;:::-;14487:59;;;14596:2;14585:9;14581:18;14568:32;14609:31;14634:5;14609:31;:::i;14675:151::-;-1:-1:-1;;;;;;14750:51:66;;14740:62;;14730:90;;14816:1;14813;14806:12;14831:134;14899:20;;14928:31;14899:20;14928:31;:::i;14970:107::-;15051:1;15044:5;15041:12;15031:40;;15067:1;15064;15057:12;15082:2014;15147:5;15200:3;15193:4;15185:6;15181:17;15177:27;15167:55;;15218:1;15215;15208:12;15167:55;15254:6;15241:20;15280:4;15303:43;15343:2;15303:43;:::i;:::-;15365:2;15396;15390:9;15408:31;15436:2;15428:6;15408:31;:::i;:::-;15474:18;;;15566:1;15562:10;;;;15550:23;;15546:32;;;15508:15;;;;-1:-1:-1;15590:15:66;;;15587:35;;;15618:1;15615;15608:12;15587:35;15654:2;15646:6;15642:15;15666:1400;15682:6;15677:3;15674:15;15666:1400;;;15768:3;15755:17;-1:-1:-1;;;;;15845:2:66;15832:11;15829:19;15826:109;;;15889:1;15918:2;15914;15907:14;15826:109;15958:24;;;;16005:4;16033:12;;;-1:-1:-1;;16029:26:66;16025:35;-1:-1:-1;16022:125:66;;;16101:1;16130:2;16126;16119:14;16022:125;16182:2;16176:9;16198:35;16224:8;16198:35;:::i;:::-;16280:2;16276;16272:11;16259:25;16297:37;16328:5;16297:37;:::i;:::-;16347:23;;16422:11;;;16409:25;16390:17;;;16383:52;16459:2;16500:29;16516:12;;;16500:29;:::i;:::-;16495:2;16485:8;16481:17;16474:56;16554:3;16597:29;16621:3;16617:2;16613:12;16597:29;:::i;:::-;16591:3;16581:8;16577:18;16570:57;16651:3;16640:14;;16694:29;16718:3;16714:2;16710:12;16694:29;:::i;:::-;16674:18;;;16667:57;16766:11;;;16753:25;;16794:16;;;16791:109;;;16852:1;16882:3;16877;16870:16;16791:109;16940:49;16985:3;16980:2;16969:8;16965:2;16961:17;16957:26;16940:49;:::i;:::-;16920:18;;;16913:77;17003:21;;-1:-1:-1;;;17044:12:66;;;;15699;;15666:1400;;;-1:-1:-1;17084:6:66;15082:2014;-1:-1:-1;;;;;;;15082:2014:66:o;17101:108::-;17183:1;17176:5;17173:12;17163:40;;17199:1;17196;17189:12;17214:148;17289:20;;17318:38;17289:20;17318:38;:::i;17367:1989::-;17433:5;17486:3;17479:4;17471:6;17467:17;17463:27;17453:55;;17504:1;17501;17494:12;17453:55;17540:6;17527:20;17566:4;17589:43;17629:2;17589:43;:::i;:::-;17651:2;17682;17676:9;17694:31;17722:2;17714:6;17694:31;:::i;:::-;17760:18;;;17852:1;17848:10;;;;17836:23;;17832:32;;;17794:15;;;;-1:-1:-1;17876:15:66;;;17873:35;;;17904:1;17901;17894:12;17873:35;17940:2;17932:6;17928:15;17952:1374;17968:6;17963:3;17960:15;17952:1374;;;18054:3;18041:17;-1:-1:-1;;;;;18131:2:66;18118:11;18115:19;18112:109;;;18175:1;18204:2;18200;18193:14;18112:109;18244:24;;;;18291:4;18319:12;;;-1:-1:-1;;18315:26:66;18311:35;-1:-1:-1;18308:125:66;;;18387:1;18416:2;18412;18405:14;18308:125;18459:23;;:::i;:::-;18509:38;18543:2;18539;18535:11;18509:38;:::i;:::-;18502:5;18495:53;18584:31;18611:2;18607;18603:11;18584:31;:::i;:::-;18579:2;18572:5;18568:14;18561:55;18640:2;18678:32;18705:3;18701:2;18697:12;18678:32;:::i;:::-;18673:2;18666:5;18662:14;18655:56;18735:3;18796;18792:2;18788:12;18775:26;18769:3;18762:5;18758:15;18751:51;18826:3;18815:14;;18866:29;18890:3;18886:2;18882:12;18866:29;:::i;:::-;18849:15;;;18842:54;18920:3;18960:29;18976:12;;;18960:29;:::i;:::-;18943:15;;;18936:54;19032:11;;;19019:25;;19060:16;;;19057:109;;;19118:1;19107:12;;19148:3;19143;19136:16;19057:109;19203:49;19248:3;19243:2;19232:8;19228:2;19224:17;19220:26;19203:49;:::i;:::-;19186:15;;;19179:74;-1:-1:-1;19266:18:66;;-1:-1:-1;;;19304:12:66;;;;17985;;17952:1374;;19361:1294;19592:6;19600;19608;19616;19624;19632;19640;19693:3;19681:9;19672:7;19668:23;19664:33;19661:53;;;19710:1;19707;19700:12;19661:53;19749:9;19736:23;19768:31;19793:5;19768:31;:::i;:::-;19818:5;-1:-1:-1;19875:2:66;19860:18;;19847:32;19888:30;19847:32;19888:30;:::i;:::-;19937:7;-1:-1:-1;19995:2:66;19980:18;;19967:32;-1:-1:-1;;;;;20048:14:66;;;20045:34;;;20075:1;20072;20065:12;20045:34;20098:49;20139:7;20130:6;20119:9;20115:22;20098:49;:::i;:::-;20088:59;;20200:2;20189:9;20185:18;20172:32;20156:48;;20229:2;20219:8;20216:16;20213:36;;;20245:1;20242;20235:12;20213:36;20268:74;20334:7;20323:8;20312:9;20308:24;20268:74;:::i;:::-;20258:84;;20395:3;20384:9;20380:19;20367:33;20351:49;;20425:2;20415:8;20412:16;20409:36;;;20441:1;20438;20431:12;20409:36;;20464:75;20531:7;20520:8;20509:9;20505:24;20464:75;:::i;:::-;20454:85;;;20558:39;20592:3;20581:9;20577:19;20558:39;:::i;:::-;20548:49;;20644:3;20633:9;20629:19;20616:33;20606:43;;19361:1294;;;;;;;;;;:::o;20660:388::-;20737:6;20745;20798:2;20786:9;20777:7;20773:23;20769:32;20766:52;;;20814:1;20811;20804:12;20766:52;20854:9;20841:23;-1:-1:-1;;;;;20879:6:66;20876:30;20873:50;;;20919:1;20916;20909:12;20873:50;20942:49;20983:7;20974:6;20963:9;20959:22;20942:49;:::i;:::-;20932:59;21038:2;21023:18;;;;21010:32;;-1:-1:-1;;;;20660:388:66:o;21053:321::-;21122:6;21175:2;21163:9;21154:7;21150:23;21146:32;21143:52;;;21191:1;21188;21181:12;21143:52;21231:9;21218:23;-1:-1:-1;;;;;21256:6:66;21253:30;21250:50;;;21296:1;21293;21286:12;21250:50;21319:49;21360:7;21351:6;21340:9;21336:22;21319:49;:::i;21379:382::-;21444:6;21452;21505:2;21493:9;21484:7;21480:23;21476:32;21473:52;;;21521:1;21518;21511:12;21473:52;21560:9;21547:23;21579:31;21604:5;21579:31;:::i;:::-;21629:5;-1:-1:-1;21686:2:66;21671:18;;21658:32;21699:30;21658:32;21699:30;:::i;21766:127::-;21827:10;21822:3;21818:20;21815:1;21808:31;21858:4;21855:1;21848:15;21882:4;21879:1;21872:15;21898:139;21978:1;21971:5;21968:12;21958:46;;21984:18;;:::i;:::-;22013;;21898:139::o;22042:1214::-;22106:3;22144:5;22138:12;22171:6;22166:3;22159:19;22197:4;22238:2;22233:3;22229:12;22263:11;22290;22283:18;;22340:6;22337:1;22333:14;22326:5;22322:26;22310:38;;22382:2;22375:5;22371:14;22403:1;22413:817;22427:6;22424:1;22421:13;22413:817;;;22498:5;22492:4;22488:16;22483:3;22476:29;22534:6;22528:13;22564:4;22581:41;22617:4;22612:2;22606:9;22581:41;:::i;:::-;22663:11;;;22657:18;22642:13;;;22635:41;22699:4;22758:11;;;22752:18;22745:26;22738:34;22723:13;;;22716:57;22796:4;22855:11;;;22849:18;22842:26;22835:34;22820:13;;;22813:57;22893:4;22952:11;;;22946:18;22939:26;22932:34;22917:13;;;22910:57;22990:4;23033:11;;;23027:18;23065:13;;;23058:25;;;23104:46;23136:13;;;23027:18;23104:46;:::i;:::-;23208:12;;;;23096:54;-1:-1:-1;;;23173:15:66;;;;22449:1;22442:9;22413:817;;;-1:-1:-1;23246:4:66;;22042:1214;-1:-1:-1;;;;;;;22042:1214:66:o;23261:140::-;23342:1;23335:5;23332:12;23322:46;;23348:18;;:::i;23406:1452::-;23471:3;23509:5;23503:12;23536:6;23531:3;23524:19;23562:4;23603:2;23598:3;23594:12;23628:11;23655;23648:18;;23705:6;23702:1;23698:14;23691:5;23687:26;23675:38;;23747:2;23740:5;23736:14;23768:1;23778:1054;23792:6;23789:1;23786:13;23778:1054;;;23863:5;23857:4;23853:16;23848:3;23841:29;23899:6;23893:13;23929:4;23946:42;23983:4;23978:2;23972:9;23946:42;:::i;:::-;24027:11;;;24021:18;-1:-1:-1;;;;;;24136:21:66;;;24121:13;;;24114:44;24181:4;24230:11;;;24224:18;24220:27;;;24205:13;;;24198:50;24271:4;24316:11;;;24310:18;24295:13;;;24288:41;24352:4;24411:11;;;24405:18;24398:26;24391:34;24376:13;;;24369:57;24449:4;24494:11;;;24488:18;4069:13;4062:21;24551:13;;;4050:34;24588:4;24633:11;;;24627:18;24665:13;;;24658:25;;;24704:48;24738:13;;;24627:18;24704:48;:::i;:::-;24810:12;;;;24696:56;-1:-1:-1;;;24775:15:66;;;;23814:1;23807:9;23778:1054;;24863:1066;25056:2;25038:21;;;25105:13;;13783:12;;-1:-1:-1;;;;;;13779:58:66;25120:18;;;13767:71;13896:16;13890:23;13884:30;13877:38;13870:46;13854:14;;;13847:70;25019:4;25186:2;25178:6;25174:15;25168:22;25226:4;25221:2;25210:9;25206:18;25199:32;25254:52;25301:3;25290:9;25286:19;25272:12;25254:52;:::i;:::-;25240:66;;25355:4;25347:6;25343:17;25337:24;25384:2;25380:7;25452:2;25440:9;25432:6;25428:22;25424:31;25418:3;25407:9;25403:19;25396:60;25479:63;25535:6;25519:14;25479:63;:::i;:::-;25465:77;;25591:2;25583:6;25579:15;25573:22;25551:44;;25660:2;25648:9;25640:6;25636:22;25632:31;25626:3;25615:9;25611:19;25604:60;;25687:64;25744:6;25728:14;25687:64;:::i;:::-;25810:3;25798:16;;25792:23;-1:-1:-1;;;;;25788:49:66;25782:3;25767:19;;25760:78;25825:3;25882:16;;;25876:23;25869:4;25854:20;;;25847:53;;;;-1:-1:-1;25882:16:66;;25673:78;-1:-1:-1;;24863:1066:66:o;25934:114::-;26018:4;26011:5;26007:16;26000:5;25997:27;25987:55;;26038:1;26035;26028:12;26053:311;26119:6;26127;26180:2;26168:9;26159:7;26155:23;26151:32;26148:52;;;26196:1;26193;26186:12;26148:52;26232:9;26219:23;26209:33;;26292:2;26281:9;26277:18;26264:32;26305:29;26328:5;26305:29;:::i;26369:247::-;26428:6;26481:2;26469:9;26460:7;26456:23;26452:32;26449:52;;;26497:1;26494;26487:12;26449:52;26536:9;26523:23;26555:31;26580:5;26555:31;:::i;26849:449::-;26923:6;26931;26984:2;26972:9;26963:7;26959:23;26955:32;26952:52;;;27000:1;26997;26990:12;26952:52;27039:9;27026:23;27058:28;27080:5;27058:28;:::i;:::-;27105:5;-1:-1:-1;27161:2:66;27146:18;;27133:32;-1:-1:-1;;;;;27177:30:66;;27174:50;;;27220:1;27217;27210:12;27174:50;27243:49;27284:7;27275:6;27264:9;27260:22;27243:49;:::i;27303:668::-;27395:6;27403;27411;27464:2;27452:9;27443:7;27439:23;27435:32;27432:52;;;27480:1;27477;27470:12;27432:52;27520:9;27507:23;-1:-1:-1;;;;;27590:2:66;27582:6;27579:14;27576:34;;;27606:1;27603;27596:12;27576:34;27629:49;27670:7;27661:6;27650:9;27646:22;27629:49;:::i;:::-;27619:59;;27728:2;27717:9;27713:18;27700:32;27687:45;;27741:28;27763:5;27741:28;:::i;:::-;27788:5;;-1:-1:-1;27846:2:66;27831:18;;27818:32;;27862:16;;;27859:36;;;27891:1;27888;27881:12;27859:36;;27914:51;27957:7;27946:8;27935:9;27931:24;27914:51;:::i;:::-;27904:61;;;27303:668;;;;;:::o;27976:1159::-;28240:2;28252:21;;;28322:13;;28225:18;;;28344:22;;;28192:4;;28419;;28397:2;28382:18;;;28446:15;;;28192:4;28489:169;28503:6;28500:1;28497:13;28489:169;;;28564:13;;28552:26;;28598:12;;;;28633:15;;;;28525:1;28518:9;28489:169;;;-1:-1:-1;;;28694:19:66;;;28674:18;;;28667:47;28764:13;;28786:21;;;28862:15;;;;28825:12;;;28897:1;28907:200;28923:8;28918:3;28915:17;28907:200;;;28996:15;;29013:4;28992:26;28978:41;;29080:17;;;;29041:14;;;;28951:1;28942:11;28907:200;;;-1:-1:-1;29124:5:66;;27976:1159;-1:-1:-1;;;;;;;27976:1159:66:o;29140:388::-;29208:6;29216;29269:2;29257:9;29248:7;29244:23;29240:32;29237:52;;;29285:1;29282;29275:12;29237:52;29324:9;29311:23;29343:31;29368:5;29343:31;:::i;:::-;29393:5;-1:-1:-1;29450:2:66;29435:18;;29422:32;29463:33;29422:32;29463:33;:::i;29533:734::-;29637:6;29645;29653;29661;29669;29722:3;29710:9;29701:7;29697:23;29693:33;29690:53;;;29739:1;29736;29729:12;29690:53;29778:9;29765:23;29797:31;29822:5;29797:31;:::i;:::-;29847:5;-1:-1:-1;29904:2:66;29889:18;;29876:32;29917:33;29876:32;29917:33;:::i;:::-;29969:7;-1:-1:-1;30023:2:66;30008:18;;29995:32;;-1:-1:-1;30074:2:66;30059:18;;30046:32;;-1:-1:-1;30129:3:66;30114:19;;30101:33;-1:-1:-1;;;;;30146:30:66;;30143:50;;;30189:1;30186;30179:12;30143:50;30212:49;30253:7;30244:6;30233:9;30229:22;30212:49;:::i;30748:184::-;30818:6;30871:2;30859:9;30850:7;30846:23;30842:32;30839:52;;;30887:1;30884;30877:12;30839:52;-1:-1:-1;30910:16:66;;30748:184;-1:-1:-1;30748:184:66:o;30937:138::-;31016:13;;31038:31;31016:13;31038:31;:::i;31080:488::-;31133:5;31186:3;31179:4;31171:6;31167:17;31163:27;31153:55;;31204:1;31201;31194:12;31153:55;31233:6;31227:13;31259:31;31287:2;31259:31;:::i;:::-;31319:2;31313:9;31331:31;31359:2;31351:6;31331:31;:::i;:::-;31386:2;31378:6;31371:18;31432:3;31425:4;31420:2;31412:6;31408:15;31404:26;31401:35;31398:55;;;31449:1;31446;31439:12;31398:55;31462:76;31535:2;31528:4;31520:6;31516:17;31509:4;31501:6;31497:17;31462:76;:::i;31573:132::-;31649:13;;31671:28;31649:13;31671:28;:::i;31710:2033::-;31779:5;31832:3;31825:4;31817:6;31813:17;31809:27;31799:55;;31850:1;31847;31840:12;31799:55;31879:6;31873:13;31905:4;31928:43;31968:2;31928:43;:::i;:::-;31990:2;32021;32015:9;32033:31;32061:2;32053:6;32033:31;:::i;:::-;32099:18;;;32191:1;32187:10;;;;32175:23;;32171:32;;;32133:15;;;;-1:-1:-1;32215:15:66;;;32212:35;;;32243:1;32240;32233:12;32212:35;32279:2;32271:6;32267:15;32291:1422;32307:6;32302:3;32299:15;32291:1422;;;32386:3;32380:10;-1:-1:-1;;;;;32463:2:66;32450:11;32447:19;32444:109;;;32507:1;32536:2;32532;32525:14;32444:109;32576:24;;;;32623:4;32651:12;;;-1:-1:-1;;32647:26:66;32643:35;-1:-1:-1;32640:125:66;;;32719:1;32748:2;32744;32737:14;32640:125;32800:2;32794:9;32816:35;32842:8;32816:35;:::i;:::-;32891:2;32887;32883:11;32877:18;32908:37;32939:5;32908:37;:::i;:::-;32958:23;;33015:11;;;33009:18;33040:30;33009:18;33040:30;:::i;:::-;33090:17;;;33083:34;33141:2;33177:12;;;33171:19;33203:30;33171:19;33203:30;:::i;:::-;33253:17;;;33246:34;33304:3;33353:12;;;33347:19;33327:18;;;33320:47;33402:11;;;33396:18;;33430:16;;;33427:109;;;33488:1;33477:12;;33518:3;33513;33506:16;33427:109;33576:60;33632:3;33627:2;33616:8;33612:2;33608:17;33604:26;33576:60;:::i;:::-;33556:18;;;33549:88;-1:-1:-1;33650:21:66;;-1:-1:-1;;;33691:12:66;;;;32324;;32291:1422;;33748:152;33834:13;;33856:38;33834:13;33856:38;:::i;33905:2035::-;33975:5;34028:3;34021:4;34013:6;34009:17;34005:27;33995:55;;34046:1;34043;34036:12;33995:55;34075:6;34069:13;34101:4;34124:43;34164:2;34124:43;:::i;:::-;34186:2;34217;34211:9;34229:31;34257:2;34249:6;34229:31;:::i;:::-;34295:18;;;34387:1;34383:10;;;;34371:23;;34367:32;;;34329:15;;;;-1:-1:-1;34411:15:66;;;34408:35;;;34439:1;34436;34429:12;34408:35;34475:2;34467:6;34463:15;34487:1423;34503:6;34498:3;34495:15;34487:1423;;;34582:3;34576:10;-1:-1:-1;;;;;34659:2:66;34646:11;34643:19;34640:109;;;34703:1;34732:2;34728;34721:14;34640:109;34772:24;;;;34819:4;34847:12;;;-1:-1:-1;;34843:26:66;34839:35;-1:-1:-1;34836:125:66;;;34915:1;34944:2;34940;34933:14;34836:125;34996:2;34990:9;35012:35;35038:8;35012:35;:::i;:::-;35087:2;35083;35079:11;35073:18;35104:38;35136:5;35104:38;:::i;:::-;35155:23;;35217:42;35247:11;;;35217:42;:::i;:::-;35212:2;35202:8;35198:17;35191:69;35284:2;35325:43;35363:3;35359:2;35355:12;35325:43;:::i;:::-;35320:2;35310:8;35306:17;35299:70;35393:3;35436:40;35471:3;35467:2;35463:12;35436:40;:::i;:::-;35430:3;35420:8;35416:18;35409:68;35501:3;35490:14;;35558:3;35554:2;35550:12;35544:19;35538:3;35528:8;35524:18;35517:47;;35607:2;35603;35599:11;35593:18;35577:34;;35640:2;35630:8;35627:16;35624:109;;;35685:1;35715:3;35710;35703:16;35624:109;35773:60;35829:3;35824:2;35813:8;35809:2;35805:17;35801:26;35773:60;:::i;:::-;35753:18;;;35746:88;35847:21;;-1:-1:-1;;;35888:12:66;;;;34520;;34487:1423;;35945:2390;36027:5;36080:3;36073:4;36065:6;36061:17;36057:27;36047:55;;36098:1;36095;36088:12;36047:55;36127:6;36121:13;36153:4;36176:43;36216:2;36176:43;:::i;:::-;36248:2;36242:9;36260:31;36288:2;36280:6;36260:31;:::i;:::-;36326:18;;;36418:1;36414:10;;;;36402:23;;36398:32;;;36360:15;;;;-1:-1:-1;36442:15:66;;;36439:35;;;36470:1;36467;36460:12;36439:35;36506:2;36498:6;36494:15;36518:1787;36534:6;36529:3;36526:15;36518:1787;;;36613:3;36607:10;-1:-1:-1;;;;;36690:2:66;36677:11;36674:19;36671:109;;;36734:1;36763:2;36759;36752:14;36671:109;36803:24;;;;36850:4;36878:12;;;-1:-1:-1;;36874:26:66;36870:35;-1:-1:-1;36867:125:66;;;36946:1;36975:2;36971;36964:14;36867:125;37018:17;;:::i;:::-;37078:2;37074;37070:11;37064:18;37111:2;37101:8;37098:16;37095:106;;;37155:1;37184:2;37180;37173:14;37095:106;37228:76;37300:3;37295:2;37284:8;37280:2;37276:17;37272:26;37228:76;:::i;:::-;37221:5;37214:91;;37348:2;37344;37340:11;37334:18;37381:2;37371:8;37368:16;37365:109;;;37426:1;37456:3;37451;37444:16;37365:109;37510:77;37583:3;37578:2;37567:8;37563:2;37559:17;37555:26;37510:77;:::i;:::-;37505:2;37498:5;37494:14;37487:101;;37612:2;37664:3;37660:2;37656:12;37650:19;37645:2;37638:5;37634:14;37627:43;37694:3;37740;37736:2;37732:12;37726:19;37774:2;37764:8;37761:16;37758:109;;;37819:1;37849:3;37844;37837:16;37758:109;37904:60;37960:3;37955:2;37944:8;37940:2;37936:17;37932:26;37904:60;:::i;:::-;37887:15;;;37880:85;-1:-1:-1;38000:11:66;;;37994:18;;38028:16;;;38025:109;;;38086:1;38075:12;;38116:3;38111;38104:16;38025:109;38171:60;38227:3;38222:2;38211:8;38207:2;38203:17;38199:26;38171:60;:::i;:::-;38154:15;;;38147:85;-1:-1:-1;38245:18:66;;-1:-1:-1;;;38283:12:66;;;;36551;;36518:1787;;38340:1117;38449:6;38502:2;38490:9;38481:7;38477:23;38473:32;38470:52;;;38518:1;38515;38508:12;38470:52;38551:9;38545:16;-1:-1:-1;;;;;38621:2:66;38613:6;38610:14;38607:34;;;38637:1;38634;38627:12;38607:34;38660:22;;;;38716:4;38698:16;;;38694:27;38691:47;;;38734:1;38731;38724:12;38691:47;38767:2;38761:9;38779:33;38805:6;38779:33;:::i;:::-;38840:2;38834:9;38852:31;38877:5;38852:31;:::i;:::-;38892:21;;38946:42;38984:2;38976:11;;38946:42;:::i;:::-;38941:2;38933:6;38929:15;38922:67;39036:2;39032;39028:11;39022:18;39017:2;39009:6;39005:15;38998:43;39080:2;39076;39072:11;39066:18;39109:2;39099:8;39096:16;39093:36;;;39125:1;39122;39115:12;39093:36;39162:55;39209:7;39198:8;39194:2;39190:17;39162:55;:::i;:::-;39157:2;39149:6;39145:15;39138:80;;39257:3;39253:2;39249:12;39243:19;39287:2;39277:8;39274:16;39271:36;;;39303:1;39300;39293:12;39271:36;39341:84;39417:7;39406:8;39402:2;39398:17;39341:84;:::i;:::-;39335:3;39323:16;;39316:110;-1:-1:-1;39327:6:66;38340:1117;-1:-1:-1;;;;;38340:1117:66:o;39462:380::-;39541:1;39537:12;;;;39584;;;39605:61;;39659:4;39651:6;39647:17;39637:27;;39605:61;39712:2;39704:6;39701:14;39681:18;39678:38;39675:161;;39758:10;39753:3;39749:20;39746:1;39739:31;39793:4;39790:1;39783:15;39821:4;39818:1;39811:15;39675:161;;39462:380;;;:::o;40126:1306::-;40184:3;40222:5;40216:12;40249:6;40244:3;40237:19;40275:4;40316:2;40311:3;40307:12;40341:11;40368;40361:18;;40418:6;40415:1;40411:14;40404:5;40400:26;40388:38;;40460:2;40453:5;40449:14;40481:1;40491:915;40505:6;40502:1;40499:13;40491:915;;;40576:5;40570:4;40566:16;40561:3;40554:29;40612:6;40606:13;40642:4;40659:42;40696:4;40691:2;40685:9;40659:42;:::i;:::-;40740:11;;;40734:18;-1:-1:-1;;;;;;40849:21:66;;;40834:13;;;40827:44;40894:4;40943:11;;;40937:18;40933:27;;;40918:13;;;40911:50;40984:4;41043:11;;;41037:18;41030:26;41023:34;41008:13;;;41001:57;41081:4;41126:11;;;41120:18;41105:13;;;41098:41;41162:4;41207:11;;;41201:18;41239:13;;;41232:25;;;41278:48;41312:13;;;41201:18;41278:48;:::i;:::-;41384:12;;;;41270:56;-1:-1:-1;;;41349:15:66;;;;40527:1;40520:9;40491:915;;41437:699;-1:-1:-1;;;;;41547:39:66;41539:5;41533:12;41529:58;41524:3;41517:71;41499:3;41634:4;41627:5;41623:16;41617:23;41672:4;41665;41660:3;41656:14;41649:28;41698:69;41761:4;41756:3;41752:14;41738:12;41698:69;:::i;:::-;41686:81;;41815:4;41808:5;41804:16;41798:23;41863:3;41857:4;41853:14;41846:4;41841:3;41837:14;41830:38;41891:62;41948:4;41932:14;41891:62;:::i;:::-;41877:76;;;42001:4;41994:5;41990:16;41984:23;42051:3;42043:6;42039:16;42032:4;42027:3;42023:14;42016:40;42072:58;42123:6;42107:14;42072:58;:::i;42511:3555::-;42884:4;42913:3;42943:2;42932:9;42925:21;-1:-1:-1;;;;;42965:39:66;43059:2;43050:6;43044:13;43040:22;43035:2;43024:9;43020:18;43013:50;43082:4;43133:2;43125:6;43121:15;43115:22;43193:2;43179:12;43175:21;43168:4;43157:9;43153:20;43146:51;;43234:4;43226:6;43222:17;43216:24;43206:34;;43277:2;43271:3;43260:9;43256:19;43249:31;43329:4;43321:6;43317:17;43311:24;43289:46;;43372:4;43366:3;43355:9;43351:19;43344:33;43400:54;43449:3;43438:9;43434:19;43418:14;43400:54;:::i;:::-;43491:15;;;43485:22;43548;;;-1:-1:-1;;43544:37:66;43538:3;43523:19;;43516:66;43631:21;;43661:22;;;43386:68;;-1:-1:-1;43796:23:66;;;43699:15;;;;43757:1;43753:14;;;43741:27;;43737:36;;43837:1;43847:2001;43861:6;43858:1;43855:13;43847:2001;;;-1:-1:-1;;43926:19:66;;;43922:33;43910:46;;43979:13;;44071:9;;44031:4;44093:20;;;44174:21;;44019:17;;;44208:24;;;44266:3;44317:1;44313:16;;;44301:29;;44297:39;;;44365:23;;;44254:16;;;;-1:-1:-1;44426:732:66;44442:8;44437:3;44434:17;44426:732;;;44548:3;44544:8;44535:6;44527;44523:19;44519:34;44512:5;44505:49;44587:8;44581:15;44613:43;44649:6;44644:2;44638:9;44613:43;:::i;:::-;44725:2;44721;44717:11;44711:18;44704:26;44697:34;44692:2;44684:6;44680:15;44673:59;44803:4;44799:2;44795:13;44789:20;44782:28;44775:36;44768:4;44760:6;44756:17;44749:63;44869:4;44865:2;44861:13;44855:20;44848:4;44840:6;44836:17;44829:47;44929:2;44925;44921:11;44915:18;44893:40;;44974:4;44969:2;44961:6;44957:15;44950:29;45006:52;45052:4;45044:6;45040:17;45024:14;45006:52;:::i;:::-;44996:62;-1:-1:-1;;45087:17:66;;;;45130:14;;;;44470:1;44461:11;44426:732;;;44430:3;;;;45207:2;45203;45199:11;45193:18;45260:6;45252;45248:19;45243:2;45235:6;45231:15;45224:44;45295:57;45345:6;45329:14;45295:57;:::i;:::-;45281:71;;;45405:4;45401:2;45397:13;45391:20;45384:4;45376:6;45372:17;45365:47;45461:4;45457:2;45453:13;45447:20;45518:6;45510;45506:19;45499:4;45491:6;45487:17;45480:46;45553:41;45587:6;45571:14;45553:41;:::i;:::-;45539:55;;;45643:2;45639;45635:11;45629:18;45607:40;;45696:6;45688;45684:19;45679:2;45671:6;45667:15;45660:44;45727:41;45761:6;45745:14;45727:41;:::i;:::-;45791:15;;;;45826:12;;;;45717:51;-1:-1:-1;;;43883:1:66;43876:9;43847:2001;;;43851:3;45896:9;45888:6;45884:22;45879:2;45868:9;45864:18;45857:50;45924:53;45970:6;45962;45924:53;:::i;:::-;45916:61;;;;;;;;;45986:74;46054:4;46043:9;46039:20;46031:6;42361:12;;42356:3;42352:22;-1:-1:-1;;;;;;42348:68:66;42336:81;;42484:4;42473:16;42467:23;42492:4;42463:34;42456:42;42449:50;42442:4;42433:14;;;42426:74;42256:250;46071:2018;46148:5;46201:3;46194:4;46186:6;46182:17;46178:27;46168:55;;46219:1;46216;46209:12;46168:55;46248:6;46242:13;46274:4;46297:43;46337:2;46297:43;:::i;:::-;46359:2;46390;46384:9;46402:31;46430:2;46422:6;46402:31;:::i;:::-;46468:18;;;46560:1;46556:10;;;;46544:23;;46540:32;;;46502:15;;;;-1:-1:-1;46584:15:66;;;46581:35;;;46612:1;46609;46602:12;46581:35;46648:2;46640:6;46636:15;46660:1399;46676:6;46671:3;46668:15;46660:1399;;;46755:3;46749:10;-1:-1:-1;;;;;46832:2:66;46819:11;46816:19;46813:39;;;46848:1;46845;46838:12;46813:39;46875:24;;;;46947:4;46923:12;;;-1:-1:-1;;46919:26:66;46915:37;46912:127;;;46993:1;47022:2;47018;47011:14;46912:127;47074:2;47068:9;47090:35;47116:8;47090:35;:::i;:::-;47165:2;47161;47157:11;47151:18;47182:37;47213:5;47182:37;:::i;:::-;47232:23;;47294:39;47321:11;;;47294:39;:::i;:::-;47289:2;47279:8;47275:17;47268:66;47357:2;47412;47408;47404:11;47398:18;47393:2;47383:8;47379:17;47372:45;47440:3;47486:2;47482;47478:11;47472:18;47519:2;47509:8;47506:16;47503:109;;;47564:1;47594:3;47589;47582:16;47503:109;47651:60;47707:3;47702:2;47691:8;47687:2;47683:17;47679:26;47651:60;:::i;:::-;47646:2;47636:8;47632:17;47625:87;;47755:4;47751:2;47747:13;47741:20;47725:36;;47790:2;47780:8;47777:16;47774:109;;;47835:1;47865:3;47860;47853:16;47774:109;47922:60;47978:3;47973:2;47962:8;47958:2;47954:17;47950:26;47922:60;:::i;:::-;47903:17;;;47896:87;-1:-1:-1;47996:21:66;;-1:-1:-1;;48037:12:66;;;;46693;;46660:1399;;48094:2184;48172:5;48225:3;48218:4;48210:6;48206:17;48202:27;48192:55;;48243:1;48240;48233:12;48192:55;48272:6;48266:13;48298:4;48321:43;48361:2;48321:43;:::i;:::-;48393:2;48387:9;48405:31;48433:2;48425:6;48405:31;:::i;:::-;48471:18;;;48563:1;48559:10;;;;48547:23;;48543:32;;;48505:15;;;;-1:-1:-1;48587:15:66;;;48584:35;;;48615:1;48612;48605:12;48584:35;48651:2;48643:6;48639:15;48663:1585;48679:6;48674:3;48671:15;48663:1585;;;48758:3;48752:10;-1:-1:-1;;;;;48835:2:66;48822:11;48819:19;48816:109;;;48879:1;48908:2;48904;48897:14;48816:109;48948:24;;;;48995:4;49023:12;;;-1:-1:-1;;49019:26:66;49015:35;-1:-1:-1;49012:125:66;;;49091:1;49120:2;49116;49109:14;49012:125;49163:23;;:::i;:::-;49213:49;49258:2;49254;49250:11;49213:49;:::i;:::-;49206:5;49199:64;49299:42;49337:2;49333;49329:11;49299:42;:::i;:::-;49294:2;49287:5;49283:14;49276:66;49365:2;49403:42;49441:2;49437;49433:11;49403:42;:::i;:::-;49398:2;49391:5;49387:14;49380:66;49470:3;49523;49519:2;49515:12;49509:19;49504:2;49497:5;49493:14;49486:43;49553:3;49542:14;;49599:3;49595:2;49591:12;49585:19;49633:2;49623:8;49620:16;49617:109;;;49678:1;49708:3;49703;49696:16;49617:109;49763:60;49819:3;49814:2;49803:8;49799:2;49795:17;49791:26;49763:60;:::i;:::-;49757:3;49750:5;49746:15;49739:85;;;49848:3;49902;49898:2;49894:12;49888:19;49882:3;49875:5;49871:15;49864:44;49951:2;49947;49943:11;49937:18;49921:34;;49984:2;49974:8;49971:16;49968:109;;;50029:1;50018:12;;50059:3;50054;50047:16;49968:109;50114:60;50170:3;50165:2;50154:8;50150:2;50146:17;50142:26;50114:60;:::i;:::-;50097:15;;;50090:85;-1:-1:-1;50188:18:66;;-1:-1:-1;;;50226:12:66;;;;48696;;48663:1585;;50283:1243;50398:6;50451:2;50439:9;50430:7;50426:23;50422:32;50419:52;;;50467:1;50464;50457:12;50419:52;50500:9;50494:16;-1:-1:-1;;;;;50570:2:66;50562:6;50559:14;50556:34;;;50586:1;50583;50576:12;50556:34;50609:22;;;;50665:4;50647:16;;;50643:27;50640:47;;;50683:1;50680;50673:12;50640:47;50709:23;;:::i;:::-;50755:33;50785:2;50755:33;:::i;:::-;50748:5;50741:48;50821:42;50859:2;50855;50851:11;50821:42;:::i;:::-;50816:2;50809:5;50805:14;50798:66;50910:2;50906;50902:11;50896:18;50891:2;50884:5;50880:14;50873:42;50954:2;50950;50946:11;50940:18;50983:2;50973:8;50970:16;50967:36;;;50999:1;50996;50989:12;50967:36;51035:79;51106:7;51095:8;51091:2;51087:17;51035:79;:::i;:::-;51030:2;51023:5;51019:14;51012:103;;51154:3;51150:2;51146:12;51140:19;51184:2;51174:8;51171:16;51168:36;;;51200:1;51197;51190:12;51168:36;51237:80;51309:7;51298:8;51294:2;51290:17;51237:80;:::i;:::-;51231:3;51224:5;51220:15;51213:105;;51357:3;51353:2;51349:12;51343:19;51387:2;51377:8;51374:16;51371:36;;;51403:1;51400;51393:12;51371:36;51440:55;51487:7;51476:8;51472:2;51468:17;51440:55;:::i;:::-;51434:3;51423:15;;51416:80;-1:-1:-1;51427:5:66;50283:1243;-1:-1:-1;;;;;50283:1243:66:o;52696:251::-;52766:6;52819:2;52807:9;52798:7;52794:23;52790:32;52787:52;;;52835:1;52832;52825:12;52787:52;52867:9;52861:16;52886:31;52911:5;52886:31;:::i;53081:844::-;53211:3;53240:1;53273:6;53267:13;53303:36;53329:9;53303:36;:::i;:::-;53358:1;53375:18;;;53402:133;;;;53549:1;53544:356;;;;53368:532;;53402:133;-1:-1:-1;;53435:24:66;;53423:37;;53508:14;;53501:22;53489:35;;53480:45;;;-1:-1:-1;53402:133:66;;53544:356;53575:6;53572:1;53565:17;53605:4;53650:2;53647:1;53637:16;53675:1;53689:165;53703:6;53700:1;53697:13;53689:165;;;53781:14;;53768:11;;;53761:35;53824:16;;;;53718:10;;53689:165;;;53693:3;;;53883:6;53878:3;53874:16;53867:23;;53368:532;-1:-1:-1;53916:3:66;;53081:844;-1:-1:-1;;;;;;53081:844:66:o;53930:410::-;54132:2;54114:21;;;54171:2;54151:18;;;54144:30;54210:34;54205:2;54190:18;;54183:62;-1:-1:-1;;;54276:2:66;54261:18;;54254:44;54330:3;54315:19;;53930:410::o;54761:335::-;54840:6;54893:2;54881:9;54872:7;54868:23;54864:32;54861:52;;;54909:1;54906;54899:12;54861:52;54942:9;54936:16;-1:-1:-1;;;;;54967:6:66;54964:30;54961:50;;;55007:1;55004;54997:12;54961:50;55030:60;55082:7;55073:6;55062:9;55058:22;55030:60;:::i;55101:878::-;55175:5;55223:4;55211:9;55206:3;55202:19;55198:30;55195:50;;;55241:1;55238;55231:12;55195:50;55274:2;55268:9;55316:4;55308:6;55304:17;-1:-1:-1;;;;;55408:6:66;55396:10;55393:22;55388:2;55376:10;55373:18;55370:46;55367:72;;;55419:18;;:::i;:::-;55459:10;55455:2;55448:22;55488:6;55479:15;;55523:9;55517:16;55503:30;;55556:2;55548:6;55545:14;55542:34;;;55572:1;55569;55562:12;55542:34;55600:56;55652:3;55643:6;55632:9;55628:22;55600:56;:::i;:::-;55592:6;55585:72;55702:2;55691:9;55687:18;55681:25;55666:40;;55715:30;55737:7;55715:30;:::i;:::-;55778:7;55773:2;55765:6;55761:15;55754:32;55832:2;55821:9;55817:18;55811:25;55795:41;;55861:2;55851:8;55848:16;55845:36;;;55877:1;55874;55867:12;55845:36;;55914:58;55968:3;55957:8;55946:9;55942:24;55914:58;:::i;:::-;55909:2;55901:6;55897:15;55890:83;;;55101:878;;;;:::o;55984:379::-;56089:6;56142:2;56130:9;56121:7;56117:23;56113:32;56110:52;;;56158:1;56155;56148:12;56110:52;56191:9;56185:16;-1:-1:-1;;;;;56216:6:66;56213:30;56210:50;;;56256:1;56253;56246:12;56210:50;56279:78;56349:7;56340:6;56329:9;56325:22;56279:78;:::i;56778:127::-;56839:10;56834:3;56830:20;56827:1;56820:31;56870:4;56867:1;56860:15;56894:4;56891:1;56884:15;56910:127;56971:10;56966:3;56962:20;56959:1;56952:31;57002:4;56999:1;56992:15;57026:4;57023:1;57016:15;57042:135;57081:3;57102:17;;;57099:43;;57122:18;;:::i;:::-;-1:-1:-1;57169:1:66;57158:13;;57042:135::o;57182:379::-;57375:2;57364:9;57357:21;57338:4;57401:45;57442:2;57431:9;57427:18;57419:6;57401:45;:::i;:::-;57494:9;57486:6;57482:22;57477:2;57466:9;57462:18;57455:50;57522:33;57548:6;57540;57522:33;:::i;58407:772::-;58457:3;58498:5;58492:12;58527:36;58553:9;58527:36;:::i;:::-;58572:19;;;58610:4;58633:1;58650:18;;;58677:146;;;;58837:1;58832:341;;;;58643:530;;58677:146;-1:-1:-1;;58719:24:66;;58705:12;;;58698:46;58791:14;;58784:22;58781:1;58777:30;58768:40;;58764:49;;;-1:-1:-1;58677:146:66;;58832:341;58863:5;58860:1;58853:16;58910:2;58907:1;58897:16;58935:1;58949:174;58963:6;58960:1;58957:13;58949:174;;;59050:14;;59032:11;;;59028:20;;59021:44;59093:16;;;;58978:10;;58949:174;;;59147:11;;59143:20;;;-1:-1:-1;;58643:530:66;;;;;;58407:772;;;;:::o;59184:1427::-;59257:3;59295:5;59289:12;59322:6;59317:3;59310:19;59348:4;59389:2;59384:3;59380:12;59414:11;59441;59434:18;;59471:1;59461:11;;59512:6;59508:2;59504:15;59497:5;59493:27;59539:5;59536:1;59529:16;59581:2;59578:1;59568:16;59602:1;59612:973;59626:6;59623:1;59620:13;59612:973;;;59697:5;59691:4;59687:16;59682:3;59675:29;59727:4;59767:6;59761:13;59797:4;59814:51;59860:4;59855:2;59844:9;59840:18;59814:51;:::i;:::-;59908:3;59904:19;;;-1:-1:-1;;;;;;59900:65:66;59885:13;;;59878:88;60060:1;60048:14;;60042:21;42233:3;42229:20;-1:-1:-1;;;;;;13632:51:66;;60120:4;60110:15;;13620:64;59979:85;-1:-1:-1;60181:4:66;60169:17;;60163:24;60156:4;60146:15;;60139:49;60238:4;60226:17;;60220:24;60273:20;;;4069:13;4062:21;60305:3;60295:14;;4050:34;60220:24;-1:-1:-1;60323:62:66;60379:4;60373;60369:15;60364:2;60350:11;60347:1;60343:19;60339:28;4069:13;4062:21;4050:34;;3999:91;60323:62;;;60422:2;60415:4;60409;60405:15;60398:27;60446:59;60501:2;60495:4;60491:13;60484:4;60476:6;60472:17;60446:59;:::i;:::-;60563:12;;;;60438:67;-1:-1:-1;;60528:15:66;;;;59648:1;59641:9;59612:973;;;-1:-1:-1;60601:4:66;;59184:1427;-1:-1:-1;;;;;;;;59184:1427:66:o;60616:2111::-;60769:4;60798:2;60827;60816:9;60809:21;60839:72;60907:2;60896:9;60892:18;60884:6;42361:12;;42356:3;42352:22;-1:-1:-1;;;;;;42348:68:66;42336:81;;42484:4;42473:16;42467:23;42492:4;42463:34;42456:42;42449:50;42442:4;42433:14;;;42426:74;42256:250;60839:72;60930:2;60968:4;60963:2;60952:9;60948:18;60941:32;60996:65;61056:3;61045:9;61041:19;61034:4;61026:6;61022:17;60996:65;:::i;:::-;61080:4;61125:2;61117:6;61113:15;61151:2;61147:7;61173:3;61240:2;61228:9;61220:6;61216:22;61212:31;61207:2;61196:9;61192:18;61185:59;61264:6;61299:12;61293:19;61336:6;61328;61321:22;61371:2;61363:6;61359:15;61352:22;;61430:2;61420:6;61417:1;61413:14;61405:6;61401:27;61397:36;61452:12;61449:1;61442:23;61501:2;61498:1;61488:16;61474:30;;61522:1;61532:774;61546:6;61543:1;61540:13;61532:774;;;61632:2;61623:6;61615;61611:19;61607:28;61602:3;61595:41;61659:4;61686;61703:56;61752:6;61747:2;61738:6;61732:13;61728:22;61703:56;:::i;:::-;61814:1;61806:6;61802:14;61796:21;61791:2;61783:6;61779:15;61772:46;61866:4;61858:6;61854:17;61848:24;61940:2;61929:9;61925:18;61918:26;61911:34;61904:4;61896:6;61892:17;61885:61;62020:2;62008:9;62005:1;62001:17;61997:26;61990:34;61983:42;61978:2;61970:6;61966:15;61959:67;62039:61;62096:2;62088:6;62084:15;62079:2;62067:9;62063:2;62059:18;62055:27;4069:13;4062:21;4050:34;;3999:91;62039:61;;;62139:2;62132:4;62124:6;62120:17;62113:29;62165:59;62220:2;62212:6;62208:15;62203:2;62195:6;62191:15;62165:59;:::i;:::-;62259:4;62247:17;;;;;62284:12;;;;62155:69;-1:-1:-1;;61568:1:66;61561:9;61532:774;;;61536:3;62372:2;62360:9;62352:6;62348:22;62344:31;62337:4;62326:9;62322:20;62315:61;62399:75;62467:6;62460:4;62452:6;62448:17;62399:75;:::i;:::-;62385:89;;;;;;;;;;;62505:65;62566:1;62558:6;62554:14;62548:21;-1:-1:-1;;;;;52204:36:66;;52108:138;62505:65;-1:-1:-1;;;;;4353:31:66;62629:4;62614:20;;4341:44;62691:4;62679:17;;;;62673:24;62666:4;62651:20;;;62644:54;;;;-1:-1:-1;62715:6:66;60616:2111::o;62992:247::-;63060:6;63113:2;63101:9;63092:7;63088:23;63084:32;63081:52;;;63129:1;63126;63119:12;63081:52;63161:9;63155:16;63180:29;63203:5;63180:29;:::i;63244:299::-;63427:6;63420:14;63413:22;63402:9;63395:41;63472:2;63467;63456:9;63452:18;63445:30;63376:4;63492:45;63533:2;63522:9;63518:18;63510:6;63492:45;:::i;63548:460::-;63763:2;63752:9;63745:21;63726:4;63789:45;63830:2;63819:9;63815:18;63807:6;63789:45;:::i;:::-;63884:6;63877:14;63870:22;63865:2;63854:9;63850:18;63843:50;63941:9;63933:6;63929:22;63924:2;63913:9;63909:18;63902:50;63969:33;63995:6;63987;63969:33;:::i;:::-;63961:41;63548:460;-1:-1:-1;;;;;;63548:460:66:o;64013:792::-;64076:5;64129:3;64122:4;64114:6;64110:17;64106:27;64096:55;;64147:1;64144;64137:12;64096:55;64176:6;64170:13;64202:4;64225:43;64265:2;64225:43;:::i;:::-;64297:2;64291:9;64309:31;64337:2;64329:6;64309:31;:::i;:::-;64375:18;;;64467:1;64463:10;;;;64451:23;;64447:32;;;64409:15;;;;-1:-1:-1;64491:15:66;;;64488:35;;;64519:1;64516;64509:12;64488:35;64555:2;64547:6;64543:15;64567:208;64583:6;64578:3;64575:15;64567:208;;;64656:3;64650:10;64673:29;64696:5;64673:29;:::i;:::-;64715:18;;64753:12;;;;64600;;64567:208;;64810:1192;64937:6;64945;64998:2;64986:9;64977:7;64973:23;64969:32;64966:52;;;65014:1;65011;65004:12;64966:52;65047:9;65041:16;-1:-1:-1;;;;;65117:2:66;65109:6;65106:14;65103:34;;;65133:1;65130;65123:12;65103:34;65171:6;65160:9;65156:22;65146:32;;65216:7;65209:4;65205:2;65201:13;65197:27;65187:55;;65238:1;65235;65228:12;65187:55;65267:2;65261:9;65289:4;65312:43;65352:2;65312:43;:::i;:::-;65384:2;65378:9;65396:31;65424:2;65416:6;65396:31;:::i;:::-;65462:18;;;65550:1;65546:10;;;;65538:19;;65534:28;;;65496:15;;;;-1:-1:-1;65574:19:66;;;65571:39;;;65606:1;65603;65596:12;65571:39;65630:11;;;;65650:135;65666:6;65661:3;65658:15;65650:135;;;65732:10;;65720:23;;65683:12;;;;65763;;;;65650:135;;;65841:18;;;65835:25;65804:6;;-1:-1:-1;65835:25:66;;-1:-1:-1;;;65872:16:66;;;65869:36;;;65901:1;65898;65891:12;65869:36;;65924:72;65988:7;65977:8;65966:9;65962:24;65924:72;:::i;66007:280::-;66076:6;66129:2;66117:9;66108:7;66104:23;66100:32;66097:52;;;66145:1;66142;66135:12;66097:52;66177:9;66171:16;66227:10;66220:5;66216:22;66209:5;66206:33;66196:61;;66253:1;66250;66243:12;66292:1474;66379:3;66417:5;66411:12;66444:6;66439:3;66432:19;66470:4;66511:2;66506:3;66502:12;66536:11;66563;66556:18;;66613:6;66610:1;66606:14;66599:5;66595:26;66583:38;;66655:2;66648:5;66644:14;66676:1;66686:1054;66700:6;66697:1;66694:13;66686:1054;;;66771:5;66765:4;66761:16;66756:3;66749:29;66807:6;66801:13;66837:4;66854:42;66891:4;66886:2;66880:9;66854:42;:::i;:::-;66935:11;;;66929:18;-1:-1:-1;;;;;;67044:21:66;;;67029:13;;;67022:44;67089:4;67138:11;;;67132:18;67128:27;;;67113:13;;;67106:50;67179:4;67224:11;;;67218:18;67203:13;;;67196:41;67260:4;67319:11;;;67313:18;67306:26;67299:34;67284:13;;;67277:57;67357:4;67402:11;;;67396:18;4069:13;4062:21;67459:13;;;4050:34;67496:4;67541:11;;;67535:18;67573:13;;;67566:25;;;67612:48;67646:13;;;67535:18;67612:48;:::i;:::-;67718:12;;;;67604:56;-1:-1:-1;;;67683:15:66;;;;66722:1;66715:9;66686:1054;;67771:1936;68211:4;68240:2;68280;68269:9;68265:18;68310:2;68299:9;68292:21;68333:6;68368;68362:13;68399:6;68391;68384:22;68425:3;68415:13;;68459:2;68448:9;68444:18;68437:25;;68521:2;68511:6;68508:1;68504:14;68493:9;68489:30;68485:39;68543:4;68582:2;68574:6;68570:15;68603:1;68613:800;68627:6;68624:1;68621:13;68613:800;;;68720:3;68716:8;68704:9;68696:6;68692:22;68688:37;68683:3;68676:50;68755:6;68749:13;68785:4;68802:43;68838:6;68833:2;68827:9;68802:43;:::i;:::-;68888:11;;;68882:18;68865:15;;;68858:43;68924:4;68985:11;;;68979:18;68972:26;68965:34;68948:15;;;68941:59;69057:11;;;69051:18;69044:26;69037:34;69020:15;;;69013:59;69129:11;;;69123:18;69116:26;69109:34;69092:15;;;69085:59;69167:4;69210:11;;;69204:18;69242:15;;;69235:27;;;69285:48;69317:15;;;69204:18;69285:48;:::i;:::-;69391:12;;;;69275:58;-1:-1:-1;;;69356:15:66;;;;68649:1;68642:9;68613:800;;;-1:-1:-1;;69449:22:66;;;69429:18;;;69422:50;69495:78;69453:6;69558;69495:78;:::i;:::-;69481:92;;;;;;69623:9;69615:6;69611:22;69604:4;69593:9;69589:20;69582:52;69651:50;69694:6;69686;69651:50;:::i;69712:2034::-;69788:5;69841:3;69834:4;69826:6;69822:17;69818:27;69808:55;;69859:1;69856;69849:12;69808:55;69888:6;69882:13;69914:4;69937:43;69977:2;69937:43;:::i;:::-;69999:2;70030;70024:9;70042:31;70070:2;70062:6;70042:31;:::i;:::-;70108:18;;;70200:1;70196:10;;;;70184:23;;70180:32;;;70142:15;;;;-1:-1:-1;70224:15:66;;;70221:35;;;70252:1;70249;70242:12;70221:35;70288:2;70280:6;70276:15;70300:1416;70316:6;70311:3;70308:15;70300:1416;;;70395:3;70389:10;-1:-1:-1;;;;;70472:2:66;70459:11;70456:19;70453:109;;;70516:1;70545:2;70541;70534:14;70453:109;70585:24;;;;70632:4;70660:12;;;-1:-1:-1;;70656:26:66;70652:35;-1:-1:-1;70649:125:66;;;70728:1;70757:2;70753;70746:14;70649:125;70809:2;70803:9;70825:35;70851:8;70825:35;:::i;:::-;70900:2;70896;70892:11;70886:18;70917:37;70948:5;70917:37;:::i;:::-;70967:23;;71035:11;;;71029:18;71010:17;;;71003:45;71072:2;71113:40;71140:12;;;71113:40;:::i;:::-;71108:2;71098:8;71094:17;71087:67;71178:3;71221:40;71256:3;71252:2;71248:12;71221:40;:::i;:::-;71215:3;71205:8;71201:18;71194:68;71286:3;71275:14;;71329:40;71364:3;71360:2;71356:12;71329:40;:::i;:::-;71309:18;;;71302:68;71405:11;;;71399:18;;71433:16;;;71430:109;;;71491:1;71521:3;71516;71509:16;71430:109;71579:60;71635:3;71630:2;71619:8;71615:2;71611:17;71607:26;71579:60;:::i;:::-;71559:18;;;71552:88;71653:21;;-1:-1:-1;;;71694:12:66;;;;70333;;70300:1416;;71751:2038;71828:5;71881:3;71874:4;71866:6;71862:17;71858:27;71848:55;;71899:1;71896;71889:12;71848:55;71928:6;71922:13;71954:4;71977:43;72017:2;71977:43;:::i;:::-;72039:2;72070;72064:9;72082:31;72110:2;72102:6;72082:31;:::i;:::-;72148:18;;;72240:1;72236:10;;;;72224:23;;72220:32;;;72182:15;;;;-1:-1:-1;72264:15:66;;;72261:35;;;72292:1;72289;72282:12;72261:35;72328:2;72320:6;72316:15;72340:1419;72356:6;72351:3;72348:15;72340:1419;;;72435:3;72429:10;-1:-1:-1;;;;;72512:2:66;72499:11;72496:19;72493:109;;;72556:1;72585:2;72581;72574:14;72493:109;72625:24;;;;72672:4;72700:12;;;-1:-1:-1;;72696:26:66;72692:35;-1:-1:-1;72689:125:66;;;72768:1;72797:2;72793;72786:14;72689:125;72840:23;;:::i;:::-;72890:49;72935:2;72931;72927:11;72890:49;:::i;:::-;72883:5;72876:64;72976:42;73014:2;73010;73006:11;72976:42;:::i;:::-;72971:2;72964:5;72960:14;72953:66;73043:2;73081:43;73119:3;73115:2;73111:12;73081:43;:::i;:::-;73076:2;73069:5;73065:14;73058:67;73149:3;73203;73199:2;73195:12;73189:19;73183:3;73176:5;73172:15;73165:44;73233:3;73222:14;;73273:40;73308:3;73304:2;73300:12;73273:40;:::i;:::-;73256:15;;;73249:65;73338:3;73378:40;73405:12;;;73378:40;:::i;:::-;73361:15;;;73354:65;73454:11;;;73448:18;;73482:16;;;73479:109;;;73540:1;73529:12;;73570:3;73565;73558:16;73479:109;73625:60;73681:3;73676:2;73665:8;73661:2;73657:17;73653:26;73625:60;:::i;:::-;73608:15;;;73601:85;-1:-1:-1;73699:18:66;;-1:-1:-1;;;73737:12:66;;;;72373;;72340:1419;;73794:1156;73902:6;73955:2;73943:9;73934:7;73930:23;73926:32;73923:52;;;73971:1;73968;73961:12;73923:52;74004:9;73998:16;-1:-1:-1;;;;;74074:2:66;74066:6;74063:14;74060:34;;;74090:1;74087;74080:12;74060:34;74113:22;;;;74169:4;74151:16;;;74147:27;74144:47;;;74187:1;74184;74177:12;74144:47;74220:2;74214:9;74232:33;74258:6;74232:33;:::i;:::-;74289;74319:2;74289:33;:::i;:::-;74281:6;74274:49;74362:2;74358;74354:11;74348:18;74391:2;74381:8;74378:16;74375:36;;;74407:1;74404;74397:12;74375:36;74444:78;74514:7;74503:8;74499:2;74495:17;74444:78;:::i;:::-;74439:2;74431:6;74427:15;74420:103;;74562:2;74558;74554:11;74548:18;74591:2;74581:8;74578:16;74575:36;;;74607:1;74604;74597:12;74575:36;74644:79;74715:7;74704:8;74700:2;74696:17;74644:79;:::i;:::-;74639:2;74631:6;74627:15;74620:104;;74763:2;74759;74755:11;74749:18;74792:2;74782:8;74779:16;74776:36;;;74808:1;74805;74798:12;74776:36;74845:73;74910:7;74899:8;74895:2;74891:17;74845:73;:::i;:::-;74840:2;74828:15;;74821:98;-1:-1:-1;74832:6:66;73794:1156;-1:-1:-1;;;;;73794:1156:66:o;74955:207::-;75101:2;75086:18;;75113:43;75090:9;75138:6;75113:43;:::i;75576:401::-;75778:2;75760:21;;;75817:2;75797:18;;;75790:30;75856:34;75851:2;75836:18;;75829:62;-1:-1:-1;;;75922:2:66;75907:18;;75900:35;75967:3;75952:19;;75576:401::o;75982:406::-;76184:2;76166:21;;;76223:2;76203:18;;;76196:30;76262:34;76257:2;76242:18;;76235:62;-1:-1:-1;;;76328:2:66;76313:18;;76306:40;76378:3;76363:19;;75982:406::o;76393:125::-;76458:9;;;76479:10;;;76476:36;;;76492:18;;:::i;76523:465::-;76780:2;76769:9;76762:21;76743:4;76806:56;76858:2;76847:9;76843:18;76835:6;76806:56;:::i;:::-;76910:9;76902:6;76898:22;76893:2;76882:9;76878:18;76871:50;76938:44;76975:6;76967;76938:44;:::i;76993:545::-;77095:2;77090:3;77087:11;77084:448;;;77131:1;77156:5;77152:2;77145:17;77201:4;77197:2;77187:19;77271:2;77259:10;77255:19;77252:1;77248:27;77242:4;77238:38;77307:4;77295:10;77292:20;77289:47;;;-1:-1:-1;77330:4:66;77289:47;77385:2;77380:3;77376:12;77373:1;77369:20;77363:4;77359:31;77349:41;;77440:82;77458:2;77451:5;77448:13;77440:82;;;77503:17;;;77484:1;77473:13;77440:82;;77714:1355;77840:3;77834:10;-1:-1:-1;;;;;77859:6:66;77856:30;77853:56;;;77889:18;;:::i;:::-;77918:97;78008:6;77968:38;78000:4;77994:11;77968:38;:::i;:::-;77962:4;77918:97;:::i;:::-;78070:4;;78134:2;78123:14;;78151:1;78146:666;;;;78856:1;78873:6;78870:89;;;-1:-1:-1;78925:19:66;;;78919:26;78870:89;-1:-1:-1;;77671:1:66;77667:11;;;77663:24;77659:29;77649:40;77695:1;77691:11;;;77646:57;78972:81;;78116:947;;78146:666;53028:1;53021:14;;;53065:4;53052:18;;-1:-1:-1;;78182:20:66;;;78303:236;78317:7;78314:1;78311:14;78303:236;;;78406:19;;;78400:26;78385:42;;78498:27;;;;78466:1;78454:14;;;;78333:19;;78303:236;;;78307:3;78567:6;78558:7;78555:19;78552:201;;;78628:19;;;78622:26;-1:-1:-1;;78711:1:66;78707:14;;;78723:3;78703:24;78699:37;78695:42;78680:58;78665:74;;78552:201;-1:-1:-1;;;;;78799:1:66;78783:14;;;78779:22;78766:36;;-1:-1:-1;77714:1355:66:o;79074:827::-;-1:-1:-1;;;;;79471:15:66;;;79453:34;;79523:15;;79518:2;79503:18;;79496:43;79433:3;79570:2;79555:18;;79548:31;;;79396:4;;79602:57;;79639:19;;79631:6;79602:57;:::i;:::-;79707:9;79699:6;79695:22;79690:2;79679:9;79675:18;79668:50;79741:44;79778:6;79770;79741:44;:::i;:::-;79727:58;;79834:9;79826:6;79822:22;79816:3;79805:9;79801:19;79794:51;79862:33;79888:6;79880;79862:33;:::i;:::-;79854:41;79074:827;-1:-1:-1;;;;;;;;79074:827:66:o;79906:249::-;79975:6;80028:2;80016:9;80007:7;80003:23;79999:32;79996:52;;;80044:1;80041;80034:12;79996:52;80076:9;80070:16;80095:30;80119:5;80095:30;:::i;80160:179::-;80195:3;80237:1;80219:16;80216:23;80213:120;;;80283:1;80280;80277;80262:23;-1:-1:-1;80320:1:66;80314:8;80309:3;80305:18;80160:179;:::o;80344:671::-;80383:3;80425:4;80407:16;80404:26;80401:39;;;80344:671;:::o;80401:39::-;80467:2;80461:9;-1:-1:-1;;80532:16:66;80528:25;;80525:1;80461:9;80504:50;80583:4;80577:11;80607:16;-1:-1:-1;;;;;80713:2:66;80706:4;80698:6;80694:17;80691:25;80686:2;80678:6;80675:14;80672:45;80669:58;;;80720:5;;;;;80344:671;:::o;80669:58::-;80757:6;80751:4;80747:17;80736:28;;80793:3;80787:10;80820:2;80812:6;80809:14;80806:27;;;80826:5;;;;;;80344:671;:::o;80806:27::-;80910:2;80891:16;80885:4;80881:27;80877:36;80870:4;80861:6;80856:3;80852:16;80848:27;80845:69;80842:82;;;80917:5;;;;;;80344:671;:::o;80842:82::-;80933:57;80984:4;80975:6;80967;80963:19;80959:30;80953:4;80933:57;:::i;:::-;-1:-1:-1;81006:3:66;;80344:671;-1:-1:-1;;;;;80344:671:66:o;81441:404::-;81643:2;81625:21;;;81682:2;81662:18;;;81655:30;81721:34;81716:2;81701:18;;81694:62;-1:-1:-1;;;81787:2:66;81772:18;;81765:38;81835:3;81820:19;;81441:404::o;81850:812::-;82261:25;82256:3;82249:38;82231:3;82316:6;82310:13;82332:75;82400:6;82395:2;82390:3;82386:12;82379:4;82371:6;82367:17;82332:75;:::i;:::-;-1:-1:-1;;;82466:2:66;82426:16;;;82458:11;;;82451:40;82516:13;;82538:76;82516:13;82600:2;82592:11;;82585:4;82573:17;;82538:76;:::i;:::-;82634:17;82653:2;82630:26;;81850:812;-1:-1:-1;;;;81850:812:66:o;84025:561::-;-1:-1:-1;;;;;84322:15:66;;;84304:34;;84374:15;;84369:2;84354:18;;84347:43;84421:2;84406:18;;84399:34;;;84464:2;84449:18;;84442:34;;;84284:3;84507;84492:19;;84485:32;;;84247:4;;84534:46;;84560:19;;84552:6;84534:46;:::i;:::-;84526:54;84025:561;-1:-1:-1;;;;;;;84025:561:66:o;84591:168::-;84664:9;;;84695;;84712:15;;;84706:22;;84692:37;84682:71;;84733:18;;:::i;84764:136::-;84803:3;84831:5;84821:39;;84840:18;;:::i;:::-;-1:-1:-1;;;84876:18:66;;84764:136::o",
    "linkReferences": {},
    "immutableReferences": {
      "34920": [
        {
          "start": 3174,
          "length": 32
        },
        {
          "start": 7176,
          "length": 32
        }
      ],
      "34929": [
        {
          "start": 4798,
          "length": 32
        },
        {
          "start": 5246,
          "length": 32
        },
        {
          "start": 9119,
          "length": 32
        },
        {
          "start": 9259,
          "length": 32
        },
        {
          "start": 9781,
          "length": 32
        }
      ],
      "34932": [
        {
          "start": 9873,
          "length": 32
        }
      ],
      "34934": [
        {
          "start": 1519,
          "length": 32
        },
        {
          "start": 5567,
          "length": 32
        }
      ],
      "34936": [
        {
          "start": 1364,
          "length": 32
        },
        {
          "start": 5600,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ADDRESSES_PROVIDER_V2()": "46916301",
    "APP_ID()": "c187bbc1",
    "CONFIG_REGISTRANT_ROLE()": "5a328596",
    "DEFAULT_ADMIN_ROLE()": "a217fddf",
    "DEFAULT_ZK_BADGE_CONFIG_OWNER()": "3eca9983",
    "EVENT_TRIGGERER_ROLE()": "44112ed8",
    "IMPLEMENTATION_VERSION()": "754b377c",
    "IS_IMPERSONATION_MODE()": "a183dc27",
    "SISMO_CONNECT_LIB_VERSION()": "c9512d99",
    "balanceOf(address,uint256)": "00fdd58e",
    "balanceOfBatch(address[],uint256[])": "4e1273f4",
    "balanceOfVaultId(uint256,uint256)": "6bd14dfa",
    "buildSignature(bool)": "49161195",
    "buildSignature(bool,bytes)": "cea8eb4e",
    "buildSignature(bytes,bool,bytes)": "e0689703",
    "buildSignature(bytes,bytes)": "6e01370e",
    "claimWithSismoConnect(bytes,address,uint256)": "01d682dd",
    "config()": "79502c55",
    "getAttestationsRegistry()": "730cb7d5",
    "getAttributeValueForBadge(uint256,uint8)": "aed8c6bc",
    "getAttributesNamesAndValuesForBadge(uint256)": "e37ffe7c",
    "getBadgeExtraData(address,uint256)": "3e1f3c27",
    "getBadgeIssuer(address,uint256)": "0e064366",
    "getBadgeTimestamp(address,uint256)": "ff4468c4",
    "getRoleAdmin(bytes32)": "248a9ca3",
    "getZKBadgeConfig(uint256)": "ac6c3e69",
    "grantRole(bytes32,address)": "2f2ff15d",
    "hasRole(bytes32,address)": "91d14854",
    "initialize(string,address)": "7ab4339d",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isVaultIdUsedForTokenId(uint256,uint256)": "dc0ec5e8",
    "registerZKBadgeConfig(bytes16,bool,string,(uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],address,uint256)": "869f023e",
    "renewWithSismoConnect(bytes,uint256)": "96d75b93",
    "renounceRole(bytes32,address)": "36568abe",
    "revokeRole(bytes32,address)": "d547741f",
    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
    "safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setAttestationsRegistry(address)": "b3c1cb21",
    "setLegacyUri(string)": "cdb7e664",
    "setUri(string)": "9b642de1",
    "supportsInterface(bytes4)": "01ffc9a7",
    "triggerTransferEvent(address,address,address,uint256,uint256)": "710b3096",
    "updateZKBadgeConfig(bytes16,bool,string,(uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],address,uint256)": "a75400b3",
    "uri(uint256)": "0e89341c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"legacyUri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum AuthType\",\"name\":\"authType\",\"type\":\"uint8\"}],\"name\":\"AuthTypeNotFoundInVerifiedResult\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BadgesNonTransferrable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes16\",\"name\":\"appId\",\"type\":\"bytes16\"},{\"internalType\":\"address\",\"name\":\"configOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attacker\",\"type\":\"address\"}],\"name\":\"NotZKBadgeConfigOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"TokenIdAlreadyUsedFromLegacy\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"VaultIdNotUsedForTokenId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultIdWithZKBadge\",\"type\":\"uint256\"}],\"name\":\"ZKBadgeAlreadyMintedWithAnotherVaultId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"ZKBadgeAlreadyMintedWithVaultId\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ZKBadgeConfigAlreadyRegistered\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"appId\",\"type\":\"bytes16\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isImpersonationMode\",\"type\":\"bool\"}],\"internalType\":\"struct VaultConfig\",\"name\":\"vault\",\"type\":\"tuple\"}],\"internalType\":\"struct SismoConnectConfig\",\"name\":\"config\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"enum AuthType\",\"name\":\"authType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAnon\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isOptional\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct AuthRequest[]\",\"name\":\"authRequests\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ClaimType\",\"name\":\"claimType\",\"type\":\"uint8\"},{\"internalType\":\"bytes16\",\"name\":\"groupId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"groupTimestamp\",\"type\":\"bytes16\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOptional\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct ClaimRequest[]\",\"name\":\"claimRequests\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IZKBadgeMinter.ZKBadgeConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"ZKBadgeConfigRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"appId\",\"type\":\"bytes16\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isImpersonationMode\",\"type\":\"bool\"}],\"internalType\":\"struct VaultConfig\",\"name\":\"vault\",\"type\":\"tuple\"}],\"internalType\":\"struct SismoConnectConfig\",\"name\":\"config\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"enum AuthType\",\"name\":\"authType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAnon\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isOptional\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct AuthRequest[]\",\"name\":\"authRequests\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ClaimType\",\"name\":\"claimType\",\"type\":\"uint8\"},{\"internalType\":\"bytes16\",\"name\":\"groupId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"groupTimestamp\",\"type\":\"bytes16\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOptional\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct ClaimRequest[]\",\"name\":\"claimRequests\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct IZKBadgeMinter.ZKBadgeConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"ZKBadgeConfigUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IZKBadgeMinter.ZKBadgeData\",\"name\":\"zkBadgeData\",\"type\":\"tuple\"}],\"name\":\"ZKBadgeMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"timestamp\",\"type\":\"uint32\"}],\"indexed\":false,\"internalType\":\"struct IZKBadgeMinter.ZKBadgeData\",\"name\":\"zkBadgeData\",\"type\":\"tuple\"}],\"name\":\"ZKBadgeRenewed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER_V2\",\"outputs\":[{\"internalType\":\"contract IAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"APP_ID\",\"outputs\":[{\"internalType\":\"bytes16\",\"name\":\"\",\"type\":\"bytes16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONFIG_REGISTRANT_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ZK_BADGE_CONFIG_OWNER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EVENT_TRIGGERER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IMPLEMENTATION_VERSION\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_IMPERSONATION_MODE\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SISMO_CONNECT_LIB_VERSION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"balanceOfVaultId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"}],\"name\":\"buildSignature\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct SignatureRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"buildSignature\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct SignatureRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"buildSignature\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct SignatureRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"buildSignature\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct SignatureRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"responseBytes\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"claimWithSismoConnect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"config\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"appId\",\"type\":\"bytes16\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isImpersonationMode\",\"type\":\"bool\"}],\"internalType\":\"struct VaultConfig\",\"name\":\"vault\",\"type\":\"tuple\"}],\"internalType\":\"struct SismoConnectConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAttestationsRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"getAttributeValueForBadge\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getAttributesNamesAndValuesForBadge\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint8[]\",\"name\":\"\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getBadgeExtraData\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getBadgeIssuer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getBadgeTimestamp\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getZKBadgeConfig\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"bytes16\",\"name\":\"appId\",\"type\":\"bytes16\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"isImpersonationMode\",\"type\":\"bool\"}],\"internalType\":\"struct VaultConfig\",\"name\":\"vault\",\"type\":\"tuple\"}],\"internalType\":\"struct SismoConnectConfig\",\"name\":\"config\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"enum AuthType\",\"name\":\"authType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAnon\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isOptional\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct AuthRequest[]\",\"name\":\"authRequests\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ClaimType\",\"name\":\"claimType\",\"type\":\"uint8\"},{\"internalType\":\"bytes16\",\"name\":\"groupId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"groupTimestamp\",\"type\":\"bytes16\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOptional\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct ClaimRequest[]\",\"name\":\"claimRequests\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct IZKBadgeMinter.ZKBadgeConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"}],\"name\":\"isVaultIdUsedForTokenId\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes16\",\"name\":\"appId\",\"type\":\"bytes16\"},{\"internalType\":\"bool\",\"name\":\"isImpersonationMode\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"enum AuthType\",\"name\":\"authType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAnon\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isOptional\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct AuthRequest[]\",\"name\":\"authRequests\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ClaimType\",\"name\":\"claimType\",\"type\":\"uint8\"},{\"internalType\":\"bytes16\",\"name\":\"groupId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"groupTimestamp\",\"type\":\"bytes16\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOptional\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct ClaimRequest[]\",\"name\":\"claimRequests\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"registerZKBadgeConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"responseBytes\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"renewWithSismoConnect\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"attestationsRegistry\",\"type\":\"address\"}],\"name\":\"setAttestationsRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"legacyUri\",\"type\":\"string\"}],\"name\":\"setLegacyUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newUri\",\"type\":\"string\"}],\"name\":\"setUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"triggerTransferEvent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes16\",\"name\":\"appId\",\"type\":\"bytes16\"},{\"internalType\":\"bool\",\"name\":\"isImpersonationMode\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"enum AuthType\",\"name\":\"authType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAnon\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isOptional\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct AuthRequest[]\",\"name\":\"authRequests\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"enum ClaimType\",\"name\":\"claimType\",\"type\":\"uint8\"},{\"internalType\":\"bytes16\",\"name\":\"groupId\",\"type\":\"bytes16\"},{\"internalType\":\"bytes16\",\"name\":\"groupTimestamp\",\"type\":\"bytes16\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isOptional\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSelectableByUser\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"internalType\":\"struct ClaimRequest[]\",\"name\":\"claimRequests\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"updateZKBadgeConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Sismo\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"params\":{\"account\":\"Address to check badge balance (= value of attestation)\",\"tokenId\":\"Badge Id to check (= attestationCollectionId)\"}},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"claimWithSismoConnect(bytes,address,uint256)\":{\"details\":\"Mints a ZK Badge based on a Sismo Connect response Each appId is mapped to a ZK Badge configuration. the vaultId provided in the response must not have minted a ZK Badge for this appId yet. The vaultId is used to prevent double spending of a ZK Badge for a specific appId.\",\"params\":{\"responseBytes\":\"Response from Sismo Connect in a bytes format\",\"to\":\"Address of the receiver of the ZK Badge\",\"tokenId\":\"TokenId of the ZK Badge to mint\"}},\"constructor\":{\"details\":\"Constructor\",\"params\":{\"legacyUri\":\"Legacy uri for the metadata of badges\",\"owner\":\"Owner of the contract, super admin, can setup roles and update the attestation registry\"}},\"getAttestationsRegistry()\":{\"details\":\"Getter of the attestations registry\"},\"getAttributeValueForBadge(uint256,uint8)\":{\"details\":\"Getter of the value of a specific badge attribute\",\"params\":{\"id\":\"Badge Id to check (= attestationCollectionId)\",\"index\":\"Index of the attribute\"}},\"getAttributesNamesAndValuesForBadge(uint256)\":{\"details\":\"Getter of all badge attributes and their values for a specific badge\",\"params\":{\"id\":\"Badge Id to check (= attestationCollectionId)\"}},\"getBadgeExtraData(address,uint256)\":{\"details\":\"Getter of the badge extra data (it can store nullifier and burnCount)\",\"params\":{\"account\":\"Address that holds the badge\",\"id\":\"Badge Id to check (= attestationCollectionId)\"}},\"getBadgeIssuer(address,uint256)\":{\"details\":\"Getter of the badge issuer\",\"params\":{\"account\":\"Address that holds the badge\",\"id\":\"Badge Id to check (= attestationCollectionId)\"}},\"getBadgeTimestamp(address,uint256)\":{\"details\":\"Getter of the badge timestamp\",\"params\":{\"account\":\"Address that holds the badge\",\"id\":\"Badge Id to check (= attestationCollectionId)\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getZKBadgeConfig(uint256)\":{\"details\":\"Returns the ZK Badge configuration based on its appId\",\"params\":{\"tokenId\":\"tokenId of the ZK Badge\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(string,address)\":{\"details\":\"Initializes the contract, to be called by the proxy delegating calls to this implementation\",\"params\":{\"owner\":\"Owner of the contract, super admin, can setup roles and update the attestation registry\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Reverts, this is a non transferable ERC115 contract\"},\"isVaultIdUsedForTokenId(uint256,uint256)\":{\"details\":\"Returns if weither or not a vaultId has minted a specific ZK Badge\",\"params\":{\"tokenId\":\"tokenId of the ZK Badge\",\"vaultId\":\"anonymous identifier of a user's vault for a specific app\"}},\"registerZKBadgeConfig(bytes16,bool,string,(uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],address,uint256)\":{\"details\":\"Registers a ZK Badge configuration The function can only be called by the super admin. The config can be registered one time only. It is then possible to update the config if you are the owner for this config. This config allows to setup: - the uri of the ZK Badge - the Sismo Connect configuration - the auths and claims required to mint the ZK Badge - the owner of the ZK Badge configuration - the tokenId of the ZK Badge\",\"params\":{\"appId\":\"id of the Sismo Connect App from which the proofs are required\",\"authRequests\":\"list of dataSource ownerships required to mint the ZK Badge\",\"claimRequests\":\"list of group memberships required to mint the ZK Badge\",\"isImpersonationMode\":\"if True, the ZK Badge can be minted thanks to impersonated proofs\",\"owner\":\"owner of the ZK Badge configuration\",\"tokenId\":\"tokenId of the ZK Badge\",\"tokenURI\":\"uri of the ZK Badge metadata\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Reverts, this is a non transferable ERC115 contract\"},\"setAttestationsRegistry(address)\":{\"details\":\"Set the attestations registry address. Can only be called by owner (default admin)\",\"params\":{\"attestationsRegistry\":\"new attestations registry address\"}},\"setLegacyUri(string)\":{\"details\":\"Set the URI for legacy ZK Badges. Can only be called by owner (default admin)\",\"params\":{\"legacyUri\":\"new legacy URI\"}},\"setUri(string)\":{\"details\":\"Set the URI for Sismo Connect ZK Badges. Can only be called by owner (default admin)\",\"params\":{\"newUri\":\"new Sismo Connect URI\"}},\"supportsInterface(bytes4)\":{\"details\":\"ERC165\"},\"triggerTransferEvent(address,address,address,uint256,uint256)\":{\"details\":\"Emits a TransferSingle event, so subgraphs and other off-chain apps relying on events can see badge minting/burning can only be called by address having the EVENT_TRIGGERER_ROLE (attestations registry address)\",\"params\":{\"from\":\"address(0) if minting, address of the badge holder if burning\",\"id\":\"badgeId for which to trigger the event\",\"operator\":\"who is calling the TransferEvent\",\"to\":\"address of the badge holder is minting, address(0) if burning\",\"value\":\"minted/burned balance\"}},\"updateZKBadgeConfig(bytes16,bool,string,(uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],address,uint256)\":{\"details\":\"Updates a ZK Badge configuration The function can only be called by the owner of the ZK Badge configuration. This config allows to setup:\",\"params\":{\"appId\":\"id of the Sismo Connect App from which the proofs are required\",\"authRequests\":\"list of dataSource ownerships required to mint the ZK Badge\",\"claimRequests\":\"list of group memberships required to mint the ZK Badge\",\"isImpersonationMode\":\"if True, the ZK Badge can be minted thanks to impersonated proofs\",\"owner\":\"owner of the ZK Badge configuration\",\"tokenId\":\"tokenId of the ZK Badge\",\"tokenURI\":\"uri of the ZK Badge metadata\"}},\"uri(uint256)\":{\"details\":\"Returns the uri of a ZK Badge based on its tokenId\",\"params\":{\"tokenId\":\"tokenId of the ZK Badge\"}}},\"title\":\"ZK Badge Minter contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"For all legacy tokenIds, the balance of a user is equal to the value of the underlying attestation (attestationCollectionId == badgeId) For ZK Badges V2 tokenIds, the balance is equal to the amount of token owned by a vaultId\"},\"initialize(string,address)\":{\"notice\":\"The reinitializer modifier is needed to configure modules that are added through upgrades and that require initialization.\"},\"updateZKBadgeConfig(bytes16,bool,string,(uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],address,uint256)\":{\"notice\":\"The tokenId of the ZK Badge cannot be updated\"}},\"notice\":\"This contract is an upgrade of the previous Badges contract. It allows to mint ERC1155 ZK Badges based on proofs made through Sismo Connect. The Legacy behavior of this contract is still functioning, but it is now only possible to mint ZK Badges based on Sismo Connect proofs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ZKBadgeMinter.sol\":\"ZKBadgeMinter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/openzeppelin-contracts/contracts/\",\":@sismo-core/hydra-s3/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/hydra-s3-zkps/package/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":hydra-s3-zkps/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/hydra-s3-zkps/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":sismo-connect-onchain-verifier/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/\",\":sismo-connect-packages/=lib/sismo-connect-packages/packages/sismo-connect-solidity/src/\",\":sismo-connect-solidity/=lib/sismo-connect-packages/packages/sismo-connect-solidity/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b488da93995672b613897afa8ed85bb10442351ed54124001832bf2944108601\",\"dweb:/ipfs/QmP2fX6BzbgZyskxXqckeMzC1C3g7wKEbdtZfMegHoGW3j\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf\",\"dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/interfaces/ISismoConnectVerifier.sol\":{\"keccak256\":\"0x5d75914f12cf3f8d0cf67bca21aaf9d54fb9906e445fc1f2faf61110e1f17a2b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1910f1912cf2e967620a6863972f14a4d6b46e1896645691dd0a3d94ba080bd\",\"dweb:/ipfs/QmcBbYEz7T74rWCRKA4bTXWWuXCVSFfMRujjCj1DWjbqyz\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/sismo-connect/SismoConnectLib.sol\":{\"keccak256\":\"0x33aa00d8e5e494f53d8d094210ec314fd8d84becb9d2070ee0f23760d0c96d5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aeb0e6b4386ff99259e27fd774f755f535644d4231a883d5586d3cb7252fa7d3\",\"dweb:/ipfs/QmQt7ueMtQvQLbWrRULJC5AgP47TG6ANTsSnQ2gDUK7BkT\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/AuthRequestBuilder.sol\":{\"keccak256\":\"0xbdda4b5b5409ac0c27f2400f51862a9571522c5d7e208026a18999485c5f014b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://187d17390b234da4204b007ef4a55e66a6c924ee86fc84172e4b6933b97f239b\",\"dweb:/ipfs/QmPgfmeZYdS2fvVFn24QCLaKJGsVqR3BceHsigGhDfKY3J\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/ClaimRequestBuilder.sol\":{\"keccak256\":\"0x7b4109877f1339b0d98201b4c850a25d78ffe238e255eaec1b07a1064c8d8742\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58584f1e68aeb2e1ebb8fa05c0a756ec082afff05ef21b5f373f199d9e83bb2a\",\"dweb:/ipfs/QmUvT1HHThpEf8zRJYkhsVjVX4w3nZZoG718n2Cad2z6wH\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/RequestBuilder.sol\":{\"keccak256\":\"0x19fc14558d3512750b4d4d92238df61f66ab0687bef02468565c3e98fe969ac4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bfea028b27cc576b4cb219fb6c5283b108ccb3e876bccfc4321c7b86360c7807\",\"dweb:/ipfs/QmWrXZXhBHVjgpSNnP45iNqihjGwKyszsSsbbDgTu1yfpy\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/SignatureBuilder.sol\":{\"keccak256\":\"0x5d071367c63510c3e38d4fe73b81ec2b7eda1c442fe3e8c75fcbab0d929524dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e6ca7efdab0b903c060b743cf88c1f33db62e23a53786be56f91eddc6ccaeac\",\"dweb:/ipfs/QmSRmRKouzYAqeEArZDrquG5i1hJHnNE18qegMhKaQYVEk\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/SismoConnectHelper.sol\":{\"keccak256\":\"0xa3affedc6093d4b9a5796ee1ac1a6bc552991f19ca319a76ef5f8f522f730346\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b6bb082dd92cae11ab6a470a0cd5522e9f79664fe4b8967b8fad6420bed3c9a\",\"dweb:/ipfs/QmQEg2YE76ZPAfRaVUJSURT7BFPV7D4XqXYoztHYzNpNnf\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/Structs.sol\":{\"keccak256\":\"0x978c56d685ed88ce85590f7f7acec107e34f5ef6b4cf9f4dcfc2be5b5d3e97d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6373516cad9fa0e4fbc344b3ce7155a4eca356403f748209cd13d86f8b24dee4\",\"dweb:/ipfs/QmRDHCyetFYKL36GdM3hibo4hFHEWEZ9xPKrrvw9fBnLQn\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/periphery/interfaces/IAddressesProvider.sol\":{\"keccak256\":\"0x7088a8721bb95c4d2ae77db038542e3afccfdb5772a9f6af500098f34514369e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80cbf6bd03d96a9ef936b00d3cc7041e74e88ae6aa3bd6d8ab5a87a3c1eb7092\",\"dweb:/ipfs/QmTxXhUhPC9siLtnudFpqtcV1JsJyDULmTV17F1NQdKFy7\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/verifiers/IHydraS3Verifier.sol\":{\"keccak256\":\"0x2c826b5e1ecfa9744fac3e13e9d19bc3eee097c5327844239c2d39ff37393825\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd09478db59c454a03532b66024bd544cb537c7a3f6d9b5f7cdf5afae5e0e1ad\",\"dweb:/ipfs/QmTf64dzbbCfFbssr8b8QG7K1AYDV5MThJ55Gyzi8DrwKv\"]},\"lib/sismo-connect-packages/packages/sismo-connect-solidity/src/SismoLib.sol\":{\"keccak256\":\"0xcacd8c83ca5df7d2562f05aaf299a65bdc2af393065b67cff0dc5f31ea6589b0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c3e7736338bab098b47788ac36d001c15d4441e344f0a52e012089417c4b134\",\"dweb:/ipfs/QmfJjb7LQ31o7XdFsE917sZKXYVJTry8npdhSmKo9KywNu\"]},\"src/ZKBadgeMinter.sol\":{\"keccak256\":\"0x8680e9e65f5bc5f666cbd445376b9aeb1c7454672526bd33f0b3b00f691ce102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90becb0329bff4d0b5076fedb49fae2cbfcc1a06e8306c085ef127ddd11c518e\",\"dweb:/ipfs/QmQ73k46TkTvL8abcDzQ3Dfs1kR2p3QWtzZ4d3QbuBVx4a\"]},\"src/interfaces/IAttestationsRegistry.sol\":{\"keccak256\":\"0x27c19cdaba9a72d3baeb872383c69359f236119454023b8958d822cea052d9b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c594f3c426b7e72b97963606e51629f04b9de072d9e30a335c538ff9d4b60605\",\"dweb:/ipfs/QmXfTVbCNegWxShJJjYnqKNFHAaPHxBY3JEXTmwxhjmiin\"]},\"src/interfaces/IAttestationsRegistryConfigLogic.sol\":{\"keccak256\":\"0x89472c733f563767c380752e88dc07f2ffc560b6e167fc9e7ad81392c3b0e0f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://799f6ad38485a7915f1d021ed9c7f47cacb341b62d631ee8e966468dc02fc8bb\",\"dweb:/ipfs/QmWJ9zydL1JGiXnjuf9jesSfMF6D2mzLbqwzcWdS8PhuNF\"]},\"src/interfaces/IZKBadgeMinter.sol\":{\"keccak256\":\"0x534acd1b1e6fd0147ac2116404c74998247a453818fa5e432e8c92e400484445\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7caf67d3990ac3dca1a9a10a500f16f7295c0e19f8f8bde43bcc3588261712bc\",\"dweb:/ipfs/QmZ1nEhHTXxta89ZHFyMFF9bhFaJVaaU1A1SYpoyXkAmeq\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "legacyUri",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "enum AuthType",
              "name": "authType",
              "type": "uint8"
            }
          ],
          "type": "error",
          "name": "AuthTypeNotFoundInVerifiedResult"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BadgesNonTransferrable"
        },
        {
          "inputs": [
            {
              "internalType": "bytes16",
              "name": "appId",
              "type": "bytes16"
            },
            {
              "internalType": "address",
              "name": "configOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "attacker",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "NotZKBadgeConfigOwner"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "TokenIdAlreadyUsedFromLegacy"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "VaultIdNotUsedForTokenId"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultIdWithZKBadge",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ZKBadgeAlreadyMintedWithAnotherVaultId"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ZKBadgeAlreadyMintedWithVaultId"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ZKBadgeConfigAlreadyRegistered"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "previousAdminRole",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "newAdminRole",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleAdminChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleGranted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RoleRevoked",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "values",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferBatch",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferSingle",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "URI",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IZKBadgeMinter.ZKBadgeConfig",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SismoConnectConfig",
                  "name": "config",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bytes16",
                      "name": "appId",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "struct VaultConfig",
                      "name": "vault",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "isImpersonationMode",
                          "type": "bool"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "struct AuthRequest[]",
                  "name": "authRequests",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "enum AuthType",
                      "name": "authType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "userId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isAnon",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isOptional",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSelectableByUser",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct ClaimRequest[]",
                  "name": "claimRequests",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "enum ClaimType",
                      "name": "claimType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes16",
                      "name": "groupId",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "bytes16",
                      "name": "groupTimestamp",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isOptional",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSelectableByUser",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ZKBadgeConfigRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IZKBadgeMinter.ZKBadgeConfig",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SismoConnectConfig",
                  "name": "config",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bytes16",
                      "name": "appId",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "struct VaultConfig",
                      "name": "vault",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "isImpersonationMode",
                          "type": "bool"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "struct AuthRequest[]",
                  "name": "authRequests",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "enum AuthType",
                      "name": "authType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "userId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isAnon",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isOptional",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSelectableByUser",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct ClaimRequest[]",
                  "name": "claimRequests",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "enum ClaimType",
                      "name": "claimType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes16",
                      "name": "groupId",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "bytes16",
                      "name": "groupTimestamp",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isOptional",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSelectableByUser",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ZKBadgeConfigUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IZKBadgeMinter.ZKBadgeData",
              "name": "zkBadgeData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "timestamp",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ZKBadgeMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "struct IZKBadgeMinter.ZKBadgeData",
              "name": "zkBadgeData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint32",
                  "name": "timestamp",
                  "type": "uint32"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ZKBadgeRenewed",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADDRESSES_PROVIDER_V2",
          "outputs": [
            {
              "internalType": "contract IAddressesProvider",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "APP_ID",
          "outputs": [
            {
              "internalType": "bytes16",
              "name": "",
              "type": "bytes16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONFIG_REGISTRANT_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ADMIN_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEFAULT_ZK_BADGE_CONFIG_OWNER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EVENT_TRIGGERER_ROLE",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IMPLEMENTATION_VERSION",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_IMPERSONATION_MODE",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SISMO_CONNECT_LIB_VERSION",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "accounts",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfBatch",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOfVaultId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isSelectableByUser",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "buildSignature",
          "outputs": [
            {
              "internalType": "struct SignatureRequest",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "message",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "isSelectableByUser",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "buildSignature",
          "outputs": [
            {
              "internalType": "struct SignatureRequest",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "message",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "isSelectableByUser",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "isSelectableByUser",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "buildSignature",
          "outputs": [
            {
              "internalType": "struct SignatureRequest",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "message",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "isSelectableByUser",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "isSelectableByUser",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "buildSignature",
          "outputs": [
            {
              "internalType": "struct SignatureRequest",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes",
                  "name": "message",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "isSelectableByUser",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "responseBytes",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimWithSismoConnect"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "config",
          "outputs": [
            {
              "internalType": "struct SismoConnectConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes16",
                  "name": "appId",
                  "type": "bytes16"
                },
                {
                  "internalType": "struct VaultConfig",
                  "name": "vault",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bool",
                      "name": "isImpersonationMode",
                      "type": "bool"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAttestationsRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAttributeValueForBadge",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAttributesNamesAndValuesForBadge",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint8[]",
              "name": "",
              "type": "uint8[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBadgeExtraData",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBadgeIssuer",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getBadgeTimestamp",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRoleAdmin",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getZKBadgeConfig",
          "outputs": [
            {
              "internalType": "struct IZKBadgeMinter.ZKBadgeConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct SismoConnectConfig",
                  "name": "config",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "bytes16",
                      "name": "appId",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "struct VaultConfig",
                      "name": "vault",
                      "type": "tuple",
                      "components": [
                        {
                          "internalType": "bool",
                          "name": "isImpersonationMode",
                          "type": "bool"
                        }
                      ]
                    }
                  ]
                },
                {
                  "internalType": "string",
                  "name": "uri",
                  "type": "string"
                },
                {
                  "internalType": "struct AuthRequest[]",
                  "name": "authRequests",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "enum AuthType",
                      "name": "authType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "userId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isAnon",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isOptional",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSelectableByUser",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "struct ClaimRequest[]",
                  "name": "claimRequests",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "enum ClaimType",
                      "name": "claimType",
                      "type": "uint8"
                    },
                    {
                      "internalType": "bytes16",
                      "name": "groupId",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "bytes16",
                      "name": "groupTimestamp",
                      "type": "bytes16"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isOptional",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isSelectableByUser",
                      "type": "bool"
                    },
                    {
                      "internalType": "bytes",
                      "name": "extraData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "hasRole",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "newUri",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "vaultId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isVaultIdUsedForTokenId",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes16",
              "name": "appId",
              "type": "bytes16"
            },
            {
              "internalType": "bool",
              "name": "isImpersonationMode",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "tokenURI",
              "type": "string"
            },
            {
              "internalType": "struct AuthRequest[]",
              "name": "authRequests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum AuthType",
                  "name": "authType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "userId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isAnon",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isOptional",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isSelectableByUser",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct ClaimRequest[]",
              "name": "claimRequests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum ClaimType",
                  "name": "claimType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes16",
                  "name": "groupId",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes16",
                  "name": "groupTimestamp",
                  "type": "bytes16"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isOptional",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isSelectableByUser",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerZKBadgeConfig"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "responseBytes",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renewWithSismoConnect"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceRole"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "role",
              "type": "bytes32"
            },
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "revokeRole"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "ids",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeBatchTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "attestationsRegistry",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAttestationsRegistry"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "legacyUri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setLegacyUri"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "newUri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUri"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "triggerTransferEvent"
        },
        {
          "inputs": [
            {
              "internalType": "bytes16",
              "name": "appId",
              "type": "bytes16"
            },
            {
              "internalType": "bool",
              "name": "isImpersonationMode",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "tokenURI",
              "type": "string"
            },
            {
              "internalType": "struct AuthRequest[]",
              "name": "authRequests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum AuthType",
                  "name": "authType",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "userId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isAnon",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isOptional",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isSelectableByUser",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "struct ClaimRequest[]",
              "name": "claimRequests",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "enum ClaimType",
                  "name": "claimType",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes16",
                  "name": "groupId",
                  "type": "bytes16"
                },
                {
                  "internalType": "bytes16",
                  "name": "groupTimestamp",
                  "type": "bytes16"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "isOptional",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "isSelectableByUser",
                  "type": "bool"
                },
                {
                  "internalType": "bytes",
                  "name": "extraData",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateZKBadgeConfig"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "balanceOf(address,uint256)": {
            "params": {
              "account": "Address to check badge balance (= value of attestation)",
              "tokenId": "Badge Id to check (= attestationCollectionId)"
            }
          },
          "balanceOfBatch(address[],uint256[])": {
            "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
          },
          "claimWithSismoConnect(bytes,address,uint256)": {
            "details": "Mints a ZK Badge based on a Sismo Connect response Each appId is mapped to a ZK Badge configuration. the vaultId provided in the response must not have minted a ZK Badge for this appId yet. The vaultId is used to prevent double spending of a ZK Badge for a specific appId.",
            "params": {
              "responseBytes": "Response from Sismo Connect in a bytes format",
              "to": "Address of the receiver of the ZK Badge",
              "tokenId": "TokenId of the ZK Badge to mint"
            }
          },
          "constructor": {
            "details": "Constructor",
            "params": {
              "legacyUri": "Legacy uri for the metadata of badges",
              "owner": "Owner of the contract, super admin, can setup roles and update the attestation registry"
            }
          },
          "getAttestationsRegistry()": {
            "details": "Getter of the attestations registry"
          },
          "getAttributeValueForBadge(uint256,uint8)": {
            "details": "Getter of the value of a specific badge attribute",
            "params": {
              "id": "Badge Id to check (= attestationCollectionId)",
              "index": "Index of the attribute"
            }
          },
          "getAttributesNamesAndValuesForBadge(uint256)": {
            "details": "Getter of all badge attributes and their values for a specific badge",
            "params": {
              "id": "Badge Id to check (= attestationCollectionId)"
            }
          },
          "getBadgeExtraData(address,uint256)": {
            "details": "Getter of the badge extra data (it can store nullifier and burnCount)",
            "params": {
              "account": "Address that holds the badge",
              "id": "Badge Id to check (= attestationCollectionId)"
            }
          },
          "getBadgeIssuer(address,uint256)": {
            "details": "Getter of the badge issuer",
            "params": {
              "account": "Address that holds the badge",
              "id": "Badge Id to check (= attestationCollectionId)"
            }
          },
          "getBadgeTimestamp(address,uint256)": {
            "details": "Getter of the badge timestamp",
            "params": {
              "account": "Address that holds the badge",
              "id": "Badge Id to check (= attestationCollectionId)"
            }
          },
          "getRoleAdmin(bytes32)": {
            "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
          },
          "getZKBadgeConfig(uint256)": {
            "details": "Returns the ZK Badge configuration based on its appId",
            "params": {
              "tokenId": "tokenId of the ZK Badge"
            }
          },
          "grantRole(bytes32,address)": {
            "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
          },
          "hasRole(bytes32,address)": {
            "details": "Returns `true` if `account` has been granted `role`."
          },
          "initialize(string,address)": {
            "details": "Initializes the contract, to be called by the proxy delegating calls to this implementation",
            "params": {
              "owner": "Owner of the contract, super admin, can setup roles and update the attestation registry"
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "Reverts, this is a non transferable ERC115 contract"
          },
          "isVaultIdUsedForTokenId(uint256,uint256)": {
            "details": "Returns if weither or not a vaultId has minted a specific ZK Badge",
            "params": {
              "tokenId": "tokenId of the ZK Badge",
              "vaultId": "anonymous identifier of a user's vault for a specific app"
            }
          },
          "registerZKBadgeConfig(bytes16,bool,string,(uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],address,uint256)": {
            "details": "Registers a ZK Badge configuration The function can only be called by the super admin. The config can be registered one time only. It is then possible to update the config if you are the owner for this config. This config allows to setup: - the uri of the ZK Badge - the Sismo Connect configuration - the auths and claims required to mint the ZK Badge - the owner of the ZK Badge configuration - the tokenId of the ZK Badge",
            "params": {
              "appId": "id of the Sismo Connect App from which the proofs are required",
              "authRequests": "list of dataSource ownerships required to mint the ZK Badge",
              "claimRequests": "list of group memberships required to mint the ZK Badge",
              "isImpersonationMode": "if True, the ZK Badge can be minted thanks to impersonated proofs",
              "owner": "owner of the ZK Badge configuration",
              "tokenId": "tokenId of the ZK Badge",
              "tokenURI": "uri of the ZK Badge metadata"
            }
          },
          "renounceRole(bytes32,address)": {
            "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
          },
          "revokeRole(bytes32,address)": {
            "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
          },
          "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
            "details": "See {IERC1155-safeBatchTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,uint256,bytes)": {
            "details": "See {IERC1155-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "Reverts, this is a non transferable ERC115 contract"
          },
          "setAttestationsRegistry(address)": {
            "details": "Set the attestations registry address. Can only be called by owner (default admin)",
            "params": {
              "attestationsRegistry": "new attestations registry address"
            }
          },
          "setLegacyUri(string)": {
            "details": "Set the URI for legacy ZK Badges. Can only be called by owner (default admin)",
            "params": {
              "legacyUri": "new legacy URI"
            }
          },
          "setUri(string)": {
            "details": "Set the URI for Sismo Connect ZK Badges. Can only be called by owner (default admin)",
            "params": {
              "newUri": "new Sismo Connect URI"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "ERC165"
          },
          "triggerTransferEvent(address,address,address,uint256,uint256)": {
            "details": "Emits a TransferSingle event, so subgraphs and other off-chain apps relying on events can see badge minting/burning can only be called by address having the EVENT_TRIGGERER_ROLE (attestations registry address)",
            "params": {
              "from": "address(0) if minting, address of the badge holder if burning",
              "id": "badgeId for which to trigger the event",
              "operator": "who is calling the TransferEvent",
              "to": "address of the badge holder is minting, address(0) if burning",
              "value": "minted/burned balance"
            }
          },
          "updateZKBadgeConfig(bytes16,bool,string,(uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],address,uint256)": {
            "details": "Updates a ZK Badge configuration The function can only be called by the owner of the ZK Badge configuration. This config allows to setup:",
            "params": {
              "appId": "id of the Sismo Connect App from which the proofs are required",
              "authRequests": "list of dataSource ownerships required to mint the ZK Badge",
              "claimRequests": "list of group memberships required to mint the ZK Badge",
              "isImpersonationMode": "if True, the ZK Badge can be minted thanks to impersonated proofs",
              "owner": "owner of the ZK Badge configuration",
              "tokenId": "tokenId of the ZK Badge",
              "tokenURI": "uri of the ZK Badge metadata"
            }
          },
          "uri(uint256)": {
            "details": "Returns the uri of a ZK Badge based on its tokenId",
            "params": {
              "tokenId": "tokenId of the ZK Badge"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "balanceOf(address,uint256)": {
            "notice": "For all legacy tokenIds, the balance of a user is equal to the value of the underlying attestation (attestationCollectionId == badgeId) For ZK Badges V2 tokenIds, the balance is equal to the amount of token owned by a vaultId"
          },
          "initialize(string,address)": {
            "notice": "The reinitializer modifier is needed to configure modules that are added through upgrades and that require initialization."
          },
          "updateZKBadgeConfig(bytes16,bool,string,(uint8,uint256,bool,bool,bool,bytes)[],(uint8,bytes16,bytes16,uint256,bool,bool,bytes)[],address,uint256)": {
            "notice": "The tokenId of the ZK Badge cannot be updated"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/contracts/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/openzeppelin-contracts/contracts/",
        ":@sismo-core/hydra-s3/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/hydra-s3-zkps/package/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":hydra-s3-zkps/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/lib/hydra-s3-zkps/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":sismo-connect-onchain-verifier/=lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/",
        ":sismo-connect-packages/=lib/sismo-connect-packages/packages/sismo-connect-solidity/src/",
        ":sismo-connect-solidity/=lib/sismo-connect-packages/packages/sismo-connect-solidity/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/ZKBadgeMinter.sol": "ZKBadgeMinter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f",
        "urls": [
          "bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb",
          "dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol": {
        "keccak256": "0x81149353c99ccf8ff18af7701bc3f38665c7a97e344cdc0d27f927f03d22af0e",
        "urls": [
          "bzz-raw://b488da93995672b613897afa8ed85bb10442351ed54124001832bf2944108601",
          "dweb:/ipfs/QmP2fX6BzbgZyskxXqckeMzC1C3g7wKEbdtZfMegHoGW3j"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0xcab667ddad478ff0d39c2053ca77fac778af8483c18ab07d810277b4216fd582",
        "urls": [
          "bzz-raw://919c7ea27c77275c3c341da0c4a26a66a20ed27605fbe8becf11f58ec3bc65bf",
          "dweb:/ipfs/QmRLKyVE2n7e2Jo4bLNn8eLgqqhNGYnVQyjJPWdr8poskf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol": {
        "keccak256": "0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574",
        "urls": [
          "bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797",
          "dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/interfaces/ISismoConnectVerifier.sol": {
        "keccak256": "0x5d75914f12cf3f8d0cf67bca21aaf9d54fb9906e445fc1f2faf61110e1f17a2b",
        "urls": [
          "bzz-raw://b1910f1912cf2e967620a6863972f14a4d6b46e1896645691dd0a3d94ba080bd",
          "dweb:/ipfs/QmcBbYEz7T74rWCRKA4bTXWWuXCVSFfMRujjCj1DWjbqyz"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/sismo-connect/SismoConnectLib.sol": {
        "keccak256": "0x33aa00d8e5e494f53d8d094210ec314fd8d84becb9d2070ee0f23760d0c96d5c",
        "urls": [
          "bzz-raw://aeb0e6b4386ff99259e27fd774f755f535644d4231a883d5586d3cb7252fa7d3",
          "dweb:/ipfs/QmQt7ueMtQvQLbWrRULJC5AgP47TG6ANTsSnQ2gDUK7BkT"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/AuthRequestBuilder.sol": {
        "keccak256": "0xbdda4b5b5409ac0c27f2400f51862a9571522c5d7e208026a18999485c5f014b",
        "urls": [
          "bzz-raw://187d17390b234da4204b007ef4a55e66a6c924ee86fc84172e4b6933b97f239b",
          "dweb:/ipfs/QmPgfmeZYdS2fvVFn24QCLaKJGsVqR3BceHsigGhDfKY3J"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/ClaimRequestBuilder.sol": {
        "keccak256": "0x7b4109877f1339b0d98201b4c850a25d78ffe238e255eaec1b07a1064c8d8742",
        "urls": [
          "bzz-raw://58584f1e68aeb2e1ebb8fa05c0a756ec082afff05ef21b5f373f199d9e83bb2a",
          "dweb:/ipfs/QmUvT1HHThpEf8zRJYkhsVjVX4w3nZZoG718n2Cad2z6wH"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/RequestBuilder.sol": {
        "keccak256": "0x19fc14558d3512750b4d4d92238df61f66ab0687bef02468565c3e98fe969ac4",
        "urls": [
          "bzz-raw://bfea028b27cc576b4cb219fb6c5283b108ccb3e876bccfc4321c7b86360c7807",
          "dweb:/ipfs/QmWrXZXhBHVjgpSNnP45iNqihjGwKyszsSsbbDgTu1yfpy"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/SignatureBuilder.sol": {
        "keccak256": "0x5d071367c63510c3e38d4fe73b81ec2b7eda1c442fe3e8c75fcbab0d929524dc",
        "urls": [
          "bzz-raw://4e6ca7efdab0b903c060b743cf88c1f33db62e23a53786be56f91eddc6ccaeac",
          "dweb:/ipfs/QmSRmRKouzYAqeEArZDrquG5i1hJHnNE18qegMhKaQYVEk"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/SismoConnectHelper.sol": {
        "keccak256": "0xa3affedc6093d4b9a5796ee1ac1a6bc552991f19ca319a76ef5f8f522f730346",
        "urls": [
          "bzz-raw://6b6bb082dd92cae11ab6a470a0cd5522e9f79664fe4b8967b8fad6420bed3c9a",
          "dweb:/ipfs/QmQEg2YE76ZPAfRaVUJSURT7BFPV7D4XqXYoztHYzNpNnf"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/libs/utils/Structs.sol": {
        "keccak256": "0x978c56d685ed88ce85590f7f7acec107e34f5ef6b4cf9f4dcfc2be5b5d3e97d8",
        "urls": [
          "bzz-raw://6373516cad9fa0e4fbc344b3ce7155a4eca356403f748209cd13d86f8b24dee4",
          "dweb:/ipfs/QmRDHCyetFYKL36GdM3hibo4hFHEWEZ9xPKrrvw9fBnLQn"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/periphery/interfaces/IAddressesProvider.sol": {
        "keccak256": "0x7088a8721bb95c4d2ae77db038542e3afccfdb5772a9f6af500098f34514369e",
        "urls": [
          "bzz-raw://80cbf6bd03d96a9ef936b00d3cc7041e74e88ae6aa3bd6d8ab5a87a3c1eb7092",
          "dweb:/ipfs/QmTxXhUhPC9siLtnudFpqtcV1JsJyDULmTV17F1NQdKFy7"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/lib/sismo-connect-onchain-verifier/src/verifiers/IHydraS3Verifier.sol": {
        "keccak256": "0x2c826b5e1ecfa9744fac3e13e9d19bc3eee097c5327844239c2d39ff37393825",
        "urls": [
          "bzz-raw://dd09478db59c454a03532b66024bd544cb537c7a3f6d9b5f7cdf5afae5e0e1ad",
          "dweb:/ipfs/QmTf64dzbbCfFbssr8b8QG7K1AYDV5MThJ55Gyzi8DrwKv"
        ],
        "license": "MIT"
      },
      "lib/sismo-connect-packages/packages/sismo-connect-solidity/src/SismoLib.sol": {
        "keccak256": "0xcacd8c83ca5df7d2562f05aaf299a65bdc2af393065b67cff0dc5f31ea6589b0",
        "urls": [
          "bzz-raw://1c3e7736338bab098b47788ac36d001c15d4441e344f0a52e012089417c4b134",
          "dweb:/ipfs/QmfJjb7LQ31o7XdFsE917sZKXYVJTry8npdhSmKo9KywNu"
        ],
        "license": "MIT"
      },
      "src/ZKBadgeMinter.sol": {
        "keccak256": "0x8680e9e65f5bc5f666cbd445376b9aeb1c7454672526bd33f0b3b00f691ce102",
        "urls": [
          "bzz-raw://90becb0329bff4d0b5076fedb49fae2cbfcc1a06e8306c085ef127ddd11c518e",
          "dweb:/ipfs/QmQ73k46TkTvL8abcDzQ3Dfs1kR2p3QWtzZ4d3QbuBVx4a"
        ],
        "license": "MIT"
      },
      "src/interfaces/IAttestationsRegistry.sol": {
        "keccak256": "0x27c19cdaba9a72d3baeb872383c69359f236119454023b8958d822cea052d9b9",
        "urls": [
          "bzz-raw://c594f3c426b7e72b97963606e51629f04b9de072d9e30a335c538ff9d4b60605",
          "dweb:/ipfs/QmXfTVbCNegWxShJJjYnqKNFHAaPHxBY3JEXTmwxhjmiin"
        ],
        "license": "MIT"
      },
      "src/interfaces/IAttestationsRegistryConfigLogic.sol": {
        "keccak256": "0x89472c733f563767c380752e88dc07f2ffc560b6e167fc9e7ad81392c3b0e0f8",
        "urls": [
          "bzz-raw://799f6ad38485a7915f1d021ed9c7f47cacb341b62d631ee8e966468dc02fc8bb",
          "dweb:/ipfs/QmWJ9zydL1JGiXnjuf9jesSfMF6D2mzLbqwzcWdS8PhuNF"
        ],
        "license": "MIT"
      },
      "src/interfaces/IZKBadgeMinter.sol": {
        "keccak256": "0x534acd1b1e6fd0147ac2116404c74998247a453818fa5e432e8c92e400484445",
        "urls": [
          "bzz-raw://7caf67d3990ac3dca1a9a10a500f16f7295c0e19f8f8bde43bcc3588261712bc",
          "dweb:/ipfs/QmZ1nEhHTXxta89ZHFyMFF9bhFaJVaaU1A1SYpoyXkAmeq"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ZKBadgeMinter.sol",
    "id": 42953,
    "exportedSymbols": {
      "AccessControl": [
        29682
      ],
      "Auth": [
        40037
      ],
      "AuthRequest": [
        39989
      ],
      "AuthRequestBuilder": [
        38016
      ],
      "AuthType": [
        40019
      ],
      "Claim": [
        40051
      ],
      "ClaimRequest": [
        40005
      ],
      "ClaimRequestBuilder": [
        38663
      ],
      "ClaimType": [
        40025
      ],
      "ERC1155": [
        31904
      ],
      "IAddressesProvider": [
        40199
      ],
      "IAttestationsRegistry": [
        43027
      ],
      "IHydraS3Verifier": [
        40280
      ],
      "ISismoConnectVerifier": [
        34874
      ],
      "IZKBadgeMinter": [
        43269
      ],
      "Initializable": [
        30681
      ],
      "RequestBuilder": [
        39697
      ],
      "Signature": [
        40056
      ],
      "SignatureBuilder": [
        39823
      ],
      "SignatureRequest": [
        40012
      ],
      "SismoConnect": [
        37558
      ],
      "SismoConnectConfig": [
        39972
      ],
      "SismoConnectHelper": [
        39950
      ],
      "SismoConnectRequest": [
        39966
      ],
      "SismoConnectResponse": [
        40069
      ],
      "SismoConnectVerifiedResult": [
        40101
      ],
      "VaultConfig": [
        39975
      ],
      "VerifiedAuth": [
        40113
      ],
      "VerifiedClaim": [
        40129
      ],
      "ZKBadgeMinter": [
        42952
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:21192:58",
    "nodes": [
      {
        "id": 41808,
        "nodeType": "PragmaDirective",
        "src": "32:24:58",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 41810,
        "nodeType": "ImportDirective",
        "src": "58:63:58",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC1155/ERC1155.sol",
        "file": "openzeppelin/token/ERC1155/ERC1155.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42953,
        "sourceUnit": 31905,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41809,
              "name": "ERC1155",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31904,
              "src": "66:7:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41812,
        "nodeType": "ImportDirective",
        "src": "122:68:58",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "file": "openzeppelin/access/AccessControl.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42953,
        "sourceUnit": 29683,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41811,
              "name": "AccessControl",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29682,
              "src": "130:13:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41814,
        "nodeType": "ImportDirective",
        "src": "191:73:58",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "file": "openzeppelin/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42953,
        "sourceUnit": 30682,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41813,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30681,
              "src": "199:13:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41816,
        "nodeType": "ImportDirective",
        "src": "265:77:58",
        "nodes": [],
        "absolutePath": "src/interfaces/IAttestationsRegistry.sol",
        "file": "./interfaces/IAttestationsRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42953,
        "sourceUnit": 43028,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41815,
              "name": "IAttestationsRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43027,
              "src": "273:21:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41818,
        "nodeType": "ImportDirective",
        "src": "343:63:58",
        "nodes": [],
        "absolutePath": "src/interfaces/IZKBadgeMinter.sol",
        "file": "./interfaces/IZKBadgeMinter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42953,
        "sourceUnit": 43270,
        "symbolAliases": [
          {
            "foreign": {
              "id": 41817,
              "name": "IZKBadgeMinter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43269,
              "src": "351:14:58",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 41819,
        "nodeType": "ImportDirective",
        "src": "407:45:58",
        "nodes": [],
        "absolutePath": "lib/sismo-connect-packages/packages/sismo-connect-solidity/src/SismoLib.sol",
        "file": "sismo-connect-solidity/SismoLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42953,
        "sourceUnit": 40284,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42952,
        "nodeType": "ContractDefinition",
        "src": "808:20415:58",
        "nodes": [
          {
            "id": 41834,
            "nodeType": "UsingForDirective",
            "src": "906:56:58",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 41831,
              "name": "SismoConnectHelper",
              "nameLocations": [
                "912:18:58"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 39950,
              "src": "912:18:58"
            },
            "typeName": {
              "id": 41833,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41832,
                "name": "SismoConnectVerifiedResult",
                "nameLocations": [
                  "935:26:58"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40101,
                "src": "935:26:58"
              },
              "referencedDeclaration": 40101,
              "src": "935:26:58",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_SismoConnectVerifiedResult_$40101_storage_ptr",
                "typeString": "struct SismoConnectVerifiedResult"
              }
            }
          },
          {
            "id": 41837,
            "nodeType": "VariableDeclaration",
            "src": "965:48:58",
            "nodes": [],
            "constant": true,
            "functionSelector": "754b377c",
            "mutability": "constant",
            "name": "IMPLEMENTATION_VERSION",
            "nameLocation": "987:22:58",
            "scope": 42952,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 41835,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "965:5:58",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "34",
              "id": 41836,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1012:1:58",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_4_by_1",
                "typeString": "int_const 4"
              },
              "value": "4"
            },
            "visibility": "public"
          },
          {
            "id": 41840,
            "nodeType": "VariableDeclaration",
            "src": "1018:52:58",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_attestationsRegistry",
            "nameLocation": "1049:21:58",
            "scope": 42952,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IAttestationsRegistry_$43027",
              "typeString": "contract IAttestationsRegistry"
            },
            "typeName": {
              "id": 41839,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 41838,
                "name": "IAttestationsRegistry",
                "nameLocations": [
                  "1018:21:58"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 43027,
                "src": "1018:21:58"
              },
              "referencedDeclaration": 43027,
              "src": "1018:21:58",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IAttestationsRegistry_$43027",
                "typeString": "contract IAttestationsRegistry"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 41845,
            "nodeType": "VariableDeclaration",
            "src": "1075:80:58",
            "nodes": [],
            "constant": true,
            "functionSelector": "44112ed8",
            "mutability": "constant",
            "name": "EVENT_TRIGGERER_ROLE",
            "nameLocation": "1099:20:58",
            "scope": 42952,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 41841,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1075:7:58",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4556454e545f5452494747455245525f524f4c45",
                  "id": 41843,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1132:22:58",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_e6cd5415a09470f57cb652d653ef635ecd9a997fef2537decaf18eb7545b7fa4",
                    "typeString": "literal_string \"EVENT_TRIGGERER_ROLE\""
                  },
                  "value": "EVENT_TRIGGERER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_e6cd5415a09470f57cb652d653ef635ecd9a997fef2537decaf18eb7545b7fa4",
                    "typeString": "literal_string \"EVENT_TRIGGERER_ROLE\""
                  }
                ],
                "id": 41842,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1122:9:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 41844,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1122:33:58",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 41850,
            "nodeType": "VariableDeclaration",
            "src": "1159:84:58",
            "nodes": [],
            "constant": true,
            "functionSelector": "5a328596",
            "mutability": "constant",
            "name": "CONFIG_REGISTRANT_ROLE",
            "nameLocation": "1183:22:58",
            "scope": 42952,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 41846,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1159:7:58",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "434f4e4649475f52454749535452414e545f524f4c45",
                  "id": 41848,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1218:24:58",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_401f66d300c59cfc80f7c726a9eb9d21ee04bdd3629511a0cfec7a609c003285",
                    "typeString": "literal_string \"CONFIG_REGISTRANT_ROLE\""
                  },
                  "value": "CONFIG_REGISTRANT_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_401f66d300c59cfc80f7c726a9eb9d21ee04bdd3629511a0cfec7a609c003285",
                    "typeString": "literal_string \"CONFIG_REGISTRANT_ROLE\""
                  }
                ],
                "id": 41847,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1208:9:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 41849,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1208:35:58",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 41853,
            "nodeType": "VariableDeclaration",
            "src": "1303:102:58",
            "nodes": [],
            "constant": true,
            "functionSelector": "3eca9983",
            "mutability": "constant",
            "name": "DEFAULT_ZK_BADGE_CONFIG_OWNER",
            "nameLocation": "1327:29:58",
            "scope": 42952,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 41851,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1303:7:58",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307830306339323036354637353963336431633934643038433237613241623937613163383734436263",
              "id": 41852,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1363:42:58",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x00c92065F759c3d1c94d08C27a2Ab97a1c874Cbc"
            },
            "visibility": "public"
          },
          {
            "id": 41855,
            "nodeType": "VariableDeclaration",
            "src": "1410:30:58",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_sismoConnectZKBadgeURI",
            "nameLocation": "1417:23:58",
            "scope": 42952,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 41854,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1410:6:58",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 41860,
            "nodeType": "VariableDeclaration",
            "src": "1874:79:58",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_zkBadgeConfigs",
            "nameLocation": "1938:15:58",
            "scope": 42952,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
              "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig)"
            },
            "typeName": {
              "id": 41859,
              "keyName": "tokenId",
              "keyNameLocation": "1890:7:58",
              "keyType": {
                "id": 41856,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1882:7:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1874:55:58",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig)"
              },
              "valueName": "zkBadgeConfig",
              "valueNameLocation": "1915:13:58",
              "valueType": {
                "id": 41858,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 41857,
                  "name": "ZKBadgeConfig",
                  "nameLocations": [
                    "1901:13:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43089,
                  "src": "1901:13:58"
                },
                "referencedDeclaration": 43089,
                "src": "1901:13:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage_ptr",
                  "typeString": "struct IZKBadgeMinter.ZKBadgeConfig"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 41867,
            "nodeType": "VariableDeclaration",
            "src": "2338:105:58",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_zkBadgesData",
            "nameLocation": "2430:13:58",
            "scope": 42952,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$_$",
              "typeString": "mapping(uint256 => mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData))"
            },
            "typeName": {
              "id": 41866,
              "keyName": "tokenId",
              "keyNameLocation": "2354:7:58",
              "keyType": {
                "id": 41861,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2346:7:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2338:79:58",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$_$",
                "typeString": "mapping(uint256 => mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 41865,
                "keyName": "vaultId",
                "keyNameLocation": "2381:7:58",
                "keyType": {
                  "id": 41862,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2373:7:58",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "2365:51:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$",
                  "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData)"
                },
                "valueName": "zkBadgeData",
                "valueNameLocation": "2404:11:58",
                "valueType": {
                  "id": 41864,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 41863,
                    "name": "ZKBadgeData",
                    "nameLocations": [
                      "2392:11:58"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 43096,
                    "src": "2392:11:58"
                  },
                  "referencedDeclaration": 43096,
                  "src": "2392:11:58",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ZKBadgeData_$43096_storage_ptr",
                    "typeString": "struct IZKBadgeMinter.ZKBadgeData"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 41873,
            "nodeType": "VariableDeclaration",
            "src": "2518:88:58",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_vaultIds",
            "nameLocation": "2597:9:58",
            "scope": 42952,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(uint256 => mapping(address => uint256))"
            },
            "typeName": {
              "id": 41872,
              "keyName": "tokenId",
              "keyNameLocation": "2534:7:58",
              "keyType": {
                "id": 41868,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2526:7:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2518:70:58",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(uint256 => mapping(address => uint256))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 41871,
                "keyName": "holder",
                "keyNameLocation": "2561:6:58",
                "keyType": {
                  "id": 41869,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2553:7:58",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2545:42:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueName": "vaultId",
                "valueNameLocation": "2579:7:58",
                "valueType": {
                  "id": 41870,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2571:7:58",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 41899,
            "nodeType": "FunctionDefinition",
            "src": "2865:202:58",
            "nodes": [],
            "body": {
              "id": 41898,
              "nodeType": "Block",
              "src": "3028:39:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41894,
                        "name": "legacyUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41876,
                        "src": "3045:9:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 41895,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41878,
                        "src": "3056:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41893,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41941,
                      "src": "3034:10:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address)"
                      }
                    },
                    "id": 41896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3034:28:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41897,
                  "nodeType": "ExpressionStatement",
                  "src": "3034:28:58"
                }
              ]
            },
            "documentation": {
              "id": 41874,
              "nodeType": "StructuredDocumentation",
              "src": "2665:197:58",
              "text": " @dev Constructor\n @param legacyUri Legacy uri for the metadata of badges\n @param owner Owner of the contract, super admin, can setup roles and update the attestation registry"
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 41881,
                    "name": "legacyUri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41876,
                    "src": "2972:9:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 41882,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 41880,
                  "name": "ERC1155",
                  "nameLocations": [
                    "2964:7:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31904,
                  "src": "2964:7:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "2964:18:58"
              },
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 41887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3016:1:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 41886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3008:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes16_$",
                            "typeString": "type(bytes16)"
                          },
                          "typeName": {
                            "id": 41885,
                            "name": "bytes16",
                            "nodeType": "ElementaryTypeName",
                            "src": "3008:7:58",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3008:10:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 41889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3020:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 41884,
                      "name": "buildConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        35041,
                        35059
                      ],
                      "referencedDeclaration": 35059,
                      "src": "2996:11:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes16_$_t_bool_$returns$_t_struct$_SismoConnectConfig_$39972_memory_ptr_$",
                        "typeString": "function (bytes16,bool) pure returns (struct SismoConnectConfig memory)"
                      }
                    },
                    "id": 41890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2996:30:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SismoConnectConfig_$39972_memory_ptr",
                      "typeString": "struct SismoConnectConfig memory"
                    }
                  }
                ],
                "id": 41891,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 41883,
                  "name": "SismoConnect",
                  "nameLocations": [
                    "2983:12:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 37558,
                  "src": "2983:12:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "2983:44:58"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 41879,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41876,
                  "mutability": "mutable",
                  "name": "legacyUri",
                  "nameLocation": "2896:9:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 41899,
                  "src": "2882:23:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41875,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2882:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41878,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2919:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 41899,
                  "src": "2911:13:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41877,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2911:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2876:87:58"
            },
            "returnParameters": {
              "id": 41892,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3028:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 41941,
            "nodeType": "FunctionDefinition",
            "src": "3427:357:58",
            "nodes": [],
            "body": {
              "id": 41940,
              "nodeType": "Block",
              "src": "3541:243:58",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 41928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 41919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 41914,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3654:1:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "expression": {
                                  "id": 41912,
                                  "name": "ERC1155",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 31904,
                                  "src": "3642:7:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ERC1155_$31904_$",
                                    "typeString": "type(contract ERC1155)"
                                  }
                                },
                                "id": 41913,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3650:3:58",
                                "memberName": "uri",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 30769,
                                "src": "3642:11:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) view returns (string memory)"
                                }
                              },
                              "id": 41915,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3642:14:58",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 41911,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3636:5:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 41910,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3636:5:58",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3636:21:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 41917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3658:6:58",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3636:28:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 41918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3668:1:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3636:33:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 41927,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 41922,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3681:4:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ZKBadgeMinter_$42952",
                                  "typeString": "contract ZKBadgeMinter"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ZKBadgeMinter_$42952",
                                  "typeString": "contract ZKBadgeMinter"
                                }
                              ],
                              "id": 41921,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3673:7:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 41920,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3673:7:58",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 41923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3673:13:58",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 41924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3687:4:58",
                          "memberName": "code",
                          "nodeType": "MemberAccess",
                          "src": "3673:18:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 41925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3692:6:58",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "3673:25:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 41926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3702:1:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3673:30:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3636:67:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41939,
                  "nodeType": "IfStatement",
                  "src": "3632:148:58",
                  "trueBody": {
                    "id": 41938,
                    "nodeType": "Block",
                    "src": "3705:75:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 41930,
                              "name": "newUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41902,
                              "src": "3721:6:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 41929,
                            "name": "_setURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31237,
                            "src": "3713:7:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory)"
                            }
                          },
                          "id": 41931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3713:15:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41932,
                        "nodeType": "ExpressionStatement",
                        "src": "3713:15:58"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 41934,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29394,
                              "src": "3747:18:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 41935,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41904,
                              "src": "3767:5:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 41933,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29650,
                            "src": "3736:10:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 41936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3736:37:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41937,
                        "nodeType": "ExpressionStatement",
                        "src": "3736:37:58"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              43174
            ],
            "documentation": {
              "id": 41900,
              "nodeType": "StructuredDocumentation",
              "src": "3071:353:58",
              "text": " @dev Initializes the contract, to be called by the proxy delegating calls to this implementation\n @param owner Owner of the contract, super admin, can setup roles and update the attestation registry\n @notice The reinitializer modifier is needed to configure modules that are added through upgrades and that require initialization."
            },
            "functionSelector": "7ab4339d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 41907,
                    "name": "IMPLEMENTATION_VERSION",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41837,
                    "src": "3517:22:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 41908,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41906,
                  "name": "reinitializer",
                  "nameLocations": [
                    "3503:13:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30616,
                  "src": "3503:13:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "3503:37:58"
              }
            ],
            "name": "initialize",
            "nameLocation": "3436:10:58",
            "parameters": {
              "id": 41905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41902,
                  "mutability": "mutable",
                  "name": "newUri",
                  "nameLocation": "3466:6:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 41941,
                  "src": "3452:20:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 41901,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3452:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41904,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "3486:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 41941,
                  "src": "3478:13:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3478:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3446:49:58"
            },
            "returnParameters": {
              "id": 41909,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3541:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42106,
            "nodeType": "FunctionDefinition",
            "src": "4277:1700:58",
            "nodes": [],
            "body": {
              "id": 42105,
              "nodeType": "Block",
              "src": "4374:1603:58",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41952
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41952,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4388:6:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42105,
                      "src": "4380:14:58",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41951,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4380:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41954,
                  "initialValue": {
                    "hexValue": "31",
                    "id": 41953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4397:1:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4380:18:58"
                },
                {
                  "assignments": [
                    41957
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41957,
                      "mutability": "mutable",
                      "name": "response",
                      "nameLocation": "4433:8:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42105,
                      "src": "4405:36:58",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SismoConnectResponse_$40069_memory_ptr",
                        "typeString": "struct SismoConnectResponse"
                      },
                      "typeName": {
                        "id": 41956,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41955,
                          "name": "SismoConnectResponse",
                          "nameLocations": [
                            "4405:20:58"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40069,
                          "src": "4405:20:58"
                        },
                        "referencedDeclaration": 40069,
                        "src": "4405:20:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SismoConnectResponse_$40069_storage_ptr",
                          "typeString": "struct SismoConnectResponse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41964,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41960,
                        "name": "responseBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41944,
                        "src": "4455:13:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 41961,
                            "name": "SismoConnectResponse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40069,
                            "src": "4471:20:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SismoConnectResponse_$40069_storage_ptr_$",
                              "typeString": "type(struct SismoConnectResponse storage pointer)"
                            }
                          }
                        ],
                        "id": 41962,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "4470:22:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SismoConnectResponse_$40069_storage_ptr_$",
                          "typeString": "type(struct SismoConnectResponse storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_SismoConnectResponse_$40069_storage_ptr_$",
                          "typeString": "type(struct SismoConnectResponse storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 41958,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4444:3:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 41959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "4448:6:58",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "4444:10:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 41963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4444:49:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SismoConnectResponse_$40069_memory_ptr",
                      "typeString": "struct SismoConnectResponse memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4405:88:58"
                },
                {
                  "assignments": [
                    41967
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41967,
                      "mutability": "mutable",
                      "name": "zkBadgeConfig",
                      "nameLocation": "4521:13:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42105,
                      "src": "4500:34:58",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_memory_ptr",
                        "typeString": "struct IZKBadgeMinter.ZKBadgeConfig"
                      },
                      "typeName": {
                        "id": 41966,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41965,
                          "name": "ZKBadgeConfig",
                          "nameLocations": [
                            "4500:13:58"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43089,
                          "src": "4500:13:58"
                        },
                        "referencedDeclaration": 43089,
                        "src": "4500:13:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage_ptr",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41971,
                  "initialValue": {
                    "baseExpression": {
                      "id": 41968,
                      "name": "_zkBadgeConfigs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41860,
                      "src": "4537:15:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                        "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                      }
                    },
                    "id": 41970,
                    "indexExpression": {
                      "id": 41969,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41948,
                      "src": "4553:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4537:24:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                      "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4500:61:58"
                },
                {
                  "assignments": [
                    41976
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41976,
                      "mutability": "mutable",
                      "name": "_authRequests",
                      "nameLocation": "4588:13:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42105,
                      "src": "4567:34:58",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AuthRequest[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 41974,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 41973,
                            "name": "AuthRequest",
                            "nameLocations": [
                              "4567:11:58"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39989,
                            "src": "4567:11:58"
                          },
                          "referencedDeclaration": 39989,
                          "src": "4567:11:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AuthRequest_$39989_storage_ptr",
                            "typeString": "struct AuthRequest"
                          }
                        },
                        "id": 41975,
                        "nodeType": "ArrayTypeName",
                        "src": "4567:13:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_storage_$dyn_storage_ptr",
                          "typeString": "struct AuthRequest[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41979,
                  "initialValue": {
                    "expression": {
                      "id": 41977,
                      "name": "zkBadgeConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41967,
                      "src": "4604:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_memory_ptr",
                        "typeString": "struct IZKBadgeMinter.ZKBadgeConfig memory"
                      }
                    },
                    "id": 41978,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4618:12:58",
                    "memberName": "authRequests",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43080,
                    "src": "4604:26:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AuthRequest memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4567:63:58"
                },
                {
                  "assignments": [
                    41984
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41984,
                      "mutability": "mutable",
                      "name": "_claimRequests",
                      "nameLocation": "4658:14:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42105,
                      "src": "4636:36:58",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ClaimRequest[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 41982,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 41981,
                            "name": "ClaimRequest",
                            "nameLocations": [
                              "4636:12:58"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40005,
                            "src": "4636:12:58"
                          },
                          "referencedDeclaration": 40005,
                          "src": "4636:12:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimRequest_$40005_storage_ptr",
                            "typeString": "struct ClaimRequest"
                          }
                        },
                        "id": 41983,
                        "nodeType": "ArrayTypeName",
                        "src": "4636:14:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_storage_$dyn_storage_ptr",
                          "typeString": "struct ClaimRequest[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41987,
                  "initialValue": {
                    "expression": {
                      "id": 41985,
                      "name": "zkBadgeConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41967,
                      "src": "4675:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_memory_ptr",
                        "typeString": "struct IZKBadgeMinter.ZKBadgeConfig memory"
                      }
                    },
                    "id": 41986,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4689:13:58",
                    "memberName": "claimRequests",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43084,
                    "src": "4675:27:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ClaimRequest memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4636:66:58"
                },
                {
                  "assignments": [
                    41990
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41990,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "4736:7:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42105,
                      "src": "4709:34:58",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SismoConnectRequest_$39966_memory_ptr",
                        "typeString": "struct SismoConnectRequest"
                      },
                      "typeName": {
                        "id": 41989,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41988,
                          "name": "SismoConnectRequest",
                          "nameLocations": [
                            "4709:19:58"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39966,
                          "src": "4709:19:58"
                        },
                        "referencedDeclaration": 39966,
                        "src": "4709:19:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SismoConnectRequest_$39966_storage_ptr",
                          "typeString": "struct SismoConnectRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42002,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41992,
                        "name": "_authRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41976,
                        "src": "4774:13:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AuthRequest memory[] memory"
                        }
                      },
                      {
                        "id": 41993,
                        "name": "_claimRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41984,
                        "src": "4803:14:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ClaimRequest memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 41997,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41946,
                                "src": "4872:2:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 41998,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41948,
                                "src": "4876:7:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 41995,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "4861:3:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 41996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "4865:6:58",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "4861:10:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 41999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4861:23:58",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 41994,
                          "name": "buildSignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            36945,
                            36962
                          ],
                          "referencedDeclaration": 36945,
                          "src": "4836:14:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_struct$_SignatureRequest_$40012_memory_ptr_$",
                            "typeString": "function (bytes memory) view returns (struct SignatureRequest memory)"
                          }
                        },
                        "id": 42000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "4852:7:58"
                        ],
                        "names": [
                          "message"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "4836:50:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureRequest_$40012_memory_ptr",
                          "typeString": "struct SignatureRequest memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AuthRequest memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ClaimRequest memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureRequest_$40012_memory_ptr",
                          "typeString": "struct SignatureRequest memory"
                        }
                      ],
                      "id": 41991,
                      "name": "buildRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37053,
                        37074,
                        37093,
                        37112,
                        37129,
                        37146,
                        37172,
                        37196,
                        37218,
                        37240,
                        37260,
                        37280,
                        37305,
                        37328,
                        37348,
                        37368,
                        37386,
                        37404,
                        37432,
                        37458,
                        37481,
                        37504,
                        37525,
                        37546
                      ],
                      "referencedDeclaration": 37305,
                      "src": "4746:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr_$_t_struct$_SignatureRequest_$40012_memory_ptr_$returns$_t_struct$_SismoConnectRequest_$39966_memory_ptr_$",
                        "typeString": "function (struct AuthRequest memory[] memory,struct ClaimRequest memory[] memory,struct SignatureRequest memory) view returns (struct SismoConnectRequest memory)"
                      }
                    },
                    "id": 42001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "4767:5:58",
                      "4795:6:58",
                      "4825:9:58"
                    ],
                    "names": [
                      "auths",
                      "claims",
                      "signature"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4746:147:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SismoConnectRequest_$39966_memory_ptr",
                      "typeString": "struct SismoConnectRequest memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4709:184:58"
                },
                {
                  "assignments": [
                    42005
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42005,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "4934:6:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42105,
                      "src": "4900:40:58",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SismoConnectVerifiedResult_$40101_memory_ptr",
                        "typeString": "struct SismoConnectVerifiedResult"
                      },
                      "typeName": {
                        "id": 42004,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42003,
                          "name": "SismoConnectVerifiedResult",
                          "nameLocations": [
                            "4900:26:58"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40101,
                          "src": "4900:26:58"
                        },
                        "referencedDeclaration": 40101,
                        "src": "4900:26:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SismoConnectVerifiedResult_$40101_storage_ptr",
                          "typeString": "struct SismoConnectVerifiedResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42015,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42008,
                        "name": "response",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41957,
                        "src": "4990:8:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SismoConnectResponse_$40069_memory_ptr",
                          "typeString": "struct SismoConnectResponse memory"
                        }
                      },
                      {
                        "id": 42009,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41990,
                        "src": "5015:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SismoConnectRequest_$39966_memory_ptr",
                          "typeString": "struct SismoConnectRequest memory"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 42010,
                            "name": "_zkBadgeConfigs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41860,
                            "src": "5038:15:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                              "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                            }
                          },
                          "id": 42012,
                          "indexExpression": {
                            "id": 42011,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41948,
                            "src": "5054:7:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5038:24:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                            "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                          }
                        },
                        "id": 42013,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5063:6:58",
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43074,
                        "src": "5038:31:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SismoConnectConfig_$39972_storage",
                          "typeString": "struct SismoConnectConfig storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SismoConnectResponse_$40069_memory_ptr",
                          "typeString": "struct SismoConnectResponse memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SismoConnectRequest_$39966_memory_ptr",
                          "typeString": "struct SismoConnectRequest memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SismoConnectConfig_$39972_storage",
                          "typeString": "struct SismoConnectConfig storage ref"
                        }
                      ],
                      "expression": {
                        "id": 42006,
                        "name": "_sismoConnectVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34920,
                        "src": "4943:21:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISismoConnectVerifier_$34874",
                          "typeString": "contract ISismoConnectVerifier"
                        }
                      },
                      "id": 42007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4965:6:58",
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34868,
                      "src": "4943:28:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_SismoConnectResponse_$40069_memory_ptr_$_t_struct$_SismoConnectRequest_$39966_memory_ptr_$_t_struct$_SismoConnectConfig_$39972_memory_ptr_$returns$_t_struct$_SismoConnectVerifiedResult_$40101_memory_ptr_$",
                        "typeString": "function (struct SismoConnectResponse memory,struct SismoConnectRequest memory,struct SismoConnectConfig memory) external returns (struct SismoConnectVerifiedResult memory)"
                      }
                    },
                    "id": 42014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "4980:8:58",
                      "5006:7:58",
                      "5030:6:58"
                    ],
                    "names": [
                      "response",
                      "request",
                      "config"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4943:133:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SismoConnectVerifiedResult_$40101_memory_ptr",
                      "typeString": "struct SismoConnectVerifiedResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4900:176:58"
                },
                {
                  "assignments": [
                    42017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42017,
                      "mutability": "mutable",
                      "name": "vaultId",
                      "nameLocation": "5148:7:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42105,
                      "src": "5140:15:58",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42016,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5140:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42023,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 42020,
                          "name": "AuthType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40019,
                          "src": "5175:8:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_AuthType_$40019_$",
                            "typeString": "type(enum AuthType)"
                          }
                        },
                        "id": 42021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "5184:5:58",
                        "memberName": "VAULT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40013,
                        "src": "5175:14:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AuthType_$40019",
                          "typeString": "enum AuthType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_AuthType_$40019",
                          "typeString": "enum AuthType"
                        }
                      ],
                      "expression": {
                        "id": 42018,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42005,
                        "src": "5158:6:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SismoConnectVerifiedResult_$40101_memory_ptr",
                          "typeString": "struct SismoConnectVerifiedResult memory"
                        }
                      },
                      "id": 42019,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5165:9:58",
                      "memberName": "getUserId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39876,
                      "src": "5158:16:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_SismoConnectVerifiedResult_$40101_memory_ptr_$_t_enum$_AuthType_$40019_$returns$_t_uint256_$attached_to$_t_struct$_SismoConnectVerifiedResult_$40101_memory_ptr_$",
                        "typeString": "function (struct SismoConnectVerifiedResult memory,enum AuthType) pure returns (uint256)"
                      }
                    },
                    "id": 42022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5158:32:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5140:50:58"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 42031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 42024,
                            "name": "_zkBadgesData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41867,
                            "src": "5200:13:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref))"
                            }
                          },
                          "id": 42026,
                          "indexExpression": {
                            "id": 42025,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41948,
                            "src": "5214:7:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5200:22:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$",
                            "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref)"
                          }
                        },
                        "id": 42028,
                        "indexExpression": {
                          "id": 42027,
                          "name": "vaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42017,
                          "src": "5223:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5200:31:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZKBadgeData_$43096_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeData storage ref"
                        }
                      },
                      "id": 42029,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5232:9:58",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43095,
                      "src": "5200:41:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 42030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5245:1:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5200:46:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42038,
                  "nodeType": "IfStatement",
                  "src": "5196:123:58",
                  "trueBody": {
                    "id": 42037,
                    "nodeType": "Block",
                    "src": "5248:71:58",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 42033,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41948,
                              "src": "5295:7:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 42034,
                              "name": "vaultId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42017,
                              "src": "5304:7:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 42032,
                            "name": "ZKBadgeAlreadyMintedWithVaultId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43116,
                            "src": "5263:31:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) pure"
                            }
                          },
                          "id": 42035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5263:49:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42036,
                        "nodeType": "RevertStatement",
                        "src": "5256:56:58"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 42040,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41946,
                          "src": "5420:2:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 42041,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41948,
                          "src": "5424:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 42039,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          42741
                        ],
                        "referencedDeclaration": 42741,
                        "src": "5410:9:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,uint256) view returns (uint256)"
                        }
                      },
                      "id": 42042,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5410:22:58",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 42043,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5436:1:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5410:27:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42056,
                  "nodeType": "IfStatement",
                  "src": "5406:135:58",
                  "trueBody": {
                    "id": 42055,
                    "nodeType": "Block",
                    "src": "5439:102:58",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 42046,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41948,
                              "src": "5493:7:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 42047,
                              "name": "vaultId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42017,
                              "src": "5502:7:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 42048,
                                  "name": "_vaultIds",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41873,
                                  "src": "5511:9:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(uint256 => mapping(address => uint256))"
                                  }
                                },
                                "id": 42050,
                                "indexExpression": {
                                  "id": 42049,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41948,
                                  "src": "5521:7:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5511:18:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 42052,
                              "indexExpression": {
                                "id": 42051,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41946,
                                "src": "5530:2:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5511:22:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 42045,
                            "name": "ZKBadgeAlreadyMintedWithAnotherVaultId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43124,
                            "src": "5454:38:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256) pure"
                            }
                          },
                          "id": 42053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5454:80:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42054,
                        "nodeType": "RevertStatement",
                        "src": "5447:87:58"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 42071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 42057,
                          "name": "_zkBadgesData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41867,
                          "src": "5613:13:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref))"
                          }
                        },
                        "id": 42060,
                        "indexExpression": {
                          "id": 42058,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41948,
                          "src": "5627:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5613:22:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$",
                          "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref)"
                        }
                      },
                      "id": 42061,
                      "indexExpression": {
                        "id": 42059,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42017,
                        "src": "5636:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5613:31:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZKBadgeData_$43096_storage",
                        "typeString": "struct IZKBadgeMinter.ZKBadgeData storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 42065,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5685:5:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 42066,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5691:9:58",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5685:15:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 42064,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5678:6:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 42063,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5678:6:58",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 42067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5678:23:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        {
                          "id": 42068,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41952,
                          "src": "5718:6:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 42069,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41946,
                          "src": "5739:2:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 42062,
                        "name": "ZKBadgeData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43096,
                        "src": "5647:11:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ZKBadgeData_$43096_storage_ptr_$",
                          "typeString": "type(struct IZKBadgeMinter.ZKBadgeData storage pointer)"
                        }
                      },
                      "id": 42070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "5667:9:58",
                        "5709:7:58",
                        "5732:5:58"
                      ],
                      "names": [
                        "timestamp",
                        "balance",
                        "owner"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5647:101:58",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZKBadgeData_$43096_memory_ptr",
                        "typeString": "struct IZKBadgeMinter.ZKBadgeData memory"
                      }
                    },
                    "src": "5613:135:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZKBadgeData_$43096_storage",
                      "typeString": "struct IZKBadgeMinter.ZKBadgeData storage ref"
                    }
                  },
                  "id": 42072,
                  "nodeType": "ExpressionStatement",
                  "src": "5613:135:58"
                },
                {
                  "expression": {
                    "id": 42079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 42073,
                          "name": "_vaultIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41873,
                          "src": "5754:9:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(uint256 => mapping(address => uint256))"
                          }
                        },
                        "id": 42076,
                        "indexExpression": {
                          "id": 42074,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41948,
                          "src": "5764:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5754:18:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 42077,
                      "indexExpression": {
                        "id": 42075,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41946,
                        "src": "5773:2:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5754:22:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42078,
                      "name": "vaultId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42017,
                      "src": "5779:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5754:32:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42080,
                  "nodeType": "ExpressionStatement",
                  "src": "5754:32:58"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 42082,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41948,
                        "src": "5812:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42083,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42017,
                        "src": "5821:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 42084,
                            "name": "_zkBadgesData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41867,
                            "src": "5830:13:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref))"
                            }
                          },
                          "id": 42086,
                          "indexExpression": {
                            "id": 42085,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41948,
                            "src": "5844:7:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5830:22:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$",
                            "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref)"
                          }
                        },
                        "id": 42088,
                        "indexExpression": {
                          "id": 42087,
                          "name": "vaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42017,
                          "src": "5853:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5830:31:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZKBadgeData_$43096_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeData storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ZKBadgeData_$43096_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeData storage ref"
                        }
                      ],
                      "id": 42081,
                      "name": "ZKBadgeMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43157,
                      "src": "5798:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_ZKBadgeData_$43096_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,struct IZKBadgeMinter.ZKBadgeData memory)"
                      }
                    },
                    "id": 42089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5798:64:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42090,
                  "nodeType": "EmitStatement",
                  "src": "5793:69:58"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 42094,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5933:4:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ZKBadgeMinter_$42952",
                              "typeString": "contract ZKBadgeMinter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ZKBadgeMinter_$42952",
                              "typeString": "contract ZKBadgeMinter"
                            }
                          ],
                          "id": 42093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5925:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42092,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5925:7:58",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5925:13:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 42098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5948:1:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 42097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5940:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 42096,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5940:7:58",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 42099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5940:10:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42100,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41946,
                        "src": "5952:2:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42101,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41948,
                        "src": "5956:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42102,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41952,
                        "src": "5965:6:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42091,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31923,
                      "src": "5910:14:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 42103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5910:62:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42104,
                  "nodeType": "EmitStatement",
                  "src": "5905:67:58"
                }
              ]
            },
            "documentation": {
              "id": 41942,
              "nodeType": "StructuredDocumentation",
              "src": "3788:486:58",
              "text": " @dev Mints a ZK Badge based on a Sismo Connect response\n Each appId is mapped to a ZK Badge configuration.\n the vaultId provided in the response must not have minted a ZK Badge for this appId yet.\n The vaultId is used to prevent double spending of a ZK Badge for a specific appId.\n @param responseBytes Response from Sismo Connect in a bytes format\n @param to Address of the receiver of the ZK Badge\n @param tokenId TokenId of the ZK Badge to mint"
            },
            "functionSelector": "01d682dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimWithSismoConnect",
            "nameLocation": "4286:21:58",
            "parameters": {
              "id": 41949,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41944,
                  "mutability": "mutable",
                  "name": "responseBytes",
                  "nameLocation": "4321:13:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42106,
                  "src": "4308:26:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 41943,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4308:5:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41946,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4344:2:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42106,
                  "src": "4336:10:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4336:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41948,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4356:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42106,
                  "src": "4348:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41947,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4348:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4307:57:58"
            },
            "returnParameters": {
              "id": 41950,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4374:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42220,
            "nodeType": "FunctionDefinition",
            "src": "5981:1273:58",
            "nodes": [],
            "body": {
              "id": 42219,
              "nodeType": "Block",
              "src": "6066:1188:58",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    42115
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42115,
                      "mutability": "mutable",
                      "name": "response",
                      "nameLocation": "6100:8:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42219,
                      "src": "6072:36:58",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SismoConnectResponse_$40069_memory_ptr",
                        "typeString": "struct SismoConnectResponse"
                      },
                      "typeName": {
                        "id": 42114,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42113,
                          "name": "SismoConnectResponse",
                          "nameLocations": [
                            "6072:20:58"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40069,
                          "src": "6072:20:58"
                        },
                        "referencedDeclaration": 40069,
                        "src": "6072:20:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SismoConnectResponse_$40069_storage_ptr",
                          "typeString": "struct SismoConnectResponse"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42122,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42118,
                        "name": "responseBytes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42108,
                        "src": "6122:13:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 42119,
                            "name": "SismoConnectResponse",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40069,
                            "src": "6138:20:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SismoConnectResponse_$40069_storage_ptr_$",
                              "typeString": "type(struct SismoConnectResponse storage pointer)"
                            }
                          }
                        ],
                        "id": 42120,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "6137:22:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_SismoConnectResponse_$40069_storage_ptr_$",
                          "typeString": "type(struct SismoConnectResponse storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_SismoConnectResponse_$40069_storage_ptr_$",
                          "typeString": "type(struct SismoConnectResponse storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 42116,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "6111:3:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 42117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6115:6:58",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "6111:10:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 42121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6111:49:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SismoConnectResponse_$40069_memory_ptr",
                      "typeString": "struct SismoConnectResponse memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6072:88:58"
                },
                {
                  "assignments": [
                    42125
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42125,
                      "mutability": "mutable",
                      "name": "zkBadgeConfig",
                      "nameLocation": "6188:13:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42219,
                      "src": "6167:34:58",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_memory_ptr",
                        "typeString": "struct IZKBadgeMinter.ZKBadgeConfig"
                      },
                      "typeName": {
                        "id": 42124,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42123,
                          "name": "ZKBadgeConfig",
                          "nameLocations": [
                            "6167:13:58"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43089,
                          "src": "6167:13:58"
                        },
                        "referencedDeclaration": 43089,
                        "src": "6167:13:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage_ptr",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeConfig"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42129,
                  "initialValue": {
                    "baseExpression": {
                      "id": 42126,
                      "name": "_zkBadgeConfigs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41860,
                      "src": "6204:15:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                        "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                      }
                    },
                    "id": 42128,
                    "indexExpression": {
                      "id": 42127,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42110,
                      "src": "6220:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6204:24:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                      "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6167:61:58"
                },
                {
                  "assignments": [
                    42134
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42134,
                      "mutability": "mutable",
                      "name": "_authRequests",
                      "nameLocation": "6255:13:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42219,
                      "src": "6234:34:58",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AuthRequest[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 42132,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 42131,
                            "name": "AuthRequest",
                            "nameLocations": [
                              "6234:11:58"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39989,
                            "src": "6234:11:58"
                          },
                          "referencedDeclaration": 39989,
                          "src": "6234:11:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AuthRequest_$39989_storage_ptr",
                            "typeString": "struct AuthRequest"
                          }
                        },
                        "id": 42133,
                        "nodeType": "ArrayTypeName",
                        "src": "6234:13:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_storage_$dyn_storage_ptr",
                          "typeString": "struct AuthRequest[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42137,
                  "initialValue": {
                    "expression": {
                      "id": 42135,
                      "name": "zkBadgeConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42125,
                      "src": "6271:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_memory_ptr",
                        "typeString": "struct IZKBadgeMinter.ZKBadgeConfig memory"
                      }
                    },
                    "id": 42136,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6285:12:58",
                    "memberName": "authRequests",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43080,
                    "src": "6271:26:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AuthRequest memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6234:63:58"
                },
                {
                  "assignments": [
                    42142
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42142,
                      "mutability": "mutable",
                      "name": "_claimRequests",
                      "nameLocation": "6325:14:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42219,
                      "src": "6303:36:58",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct ClaimRequest[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 42140,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 42139,
                            "name": "ClaimRequest",
                            "nameLocations": [
                              "6303:12:58"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40005,
                            "src": "6303:12:58"
                          },
                          "referencedDeclaration": 40005,
                          "src": "6303:12:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimRequest_$40005_storage_ptr",
                            "typeString": "struct ClaimRequest"
                          }
                        },
                        "id": 42141,
                        "nodeType": "ArrayTypeName",
                        "src": "6303:14:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_storage_$dyn_storage_ptr",
                          "typeString": "struct ClaimRequest[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42145,
                  "initialValue": {
                    "expression": {
                      "id": 42143,
                      "name": "zkBadgeConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42125,
                      "src": "6342:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_memory_ptr",
                        "typeString": "struct IZKBadgeMinter.ZKBadgeConfig memory"
                      }
                    },
                    "id": 42144,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "6356:13:58",
                    "memberName": "claimRequests",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43084,
                    "src": "6342:27:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct ClaimRequest memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6303:66:58"
                },
                {
                  "assignments": [
                    42148
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42148,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "6403:7:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42219,
                      "src": "6376:34:58",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SismoConnectRequest_$39966_memory_ptr",
                        "typeString": "struct SismoConnectRequest"
                      },
                      "typeName": {
                        "id": 42147,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42146,
                          "name": "SismoConnectRequest",
                          "nameLocations": [
                            "6376:19:58"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 39966,
                          "src": "6376:19:58"
                        },
                        "referencedDeclaration": 39966,
                        "src": "6376:19:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SismoConnectRequest_$39966_storage_ptr",
                          "typeString": "struct SismoConnectRequest"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42159,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42150,
                        "name": "_authRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42134,
                        "src": "6441:13:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AuthRequest memory[] memory"
                        }
                      },
                      {
                        "id": 42151,
                        "name": "_claimRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42142,
                        "src": "6470:14:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ClaimRequest memory[] memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 42155,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42110,
                                "src": "6539:7:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 42153,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "6528:3:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 42154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6532:6:58",
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "6528:10:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 42156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6528:19:58",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 42152,
                          "name": "buildSignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            36945,
                            36962
                          ],
                          "referencedDeclaration": 36945,
                          "src": "6503:14:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_struct$_SignatureRequest_$40012_memory_ptr_$",
                            "typeString": "function (bytes memory) view returns (struct SignatureRequest memory)"
                          }
                        },
                        "id": 42157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [
                          "6519:7:58"
                        ],
                        "names": [
                          "message"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "6503:46:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureRequest_$40012_memory_ptr",
                          "typeString": "struct SignatureRequest memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AuthRequest memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ClaimRequest memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SignatureRequest_$40012_memory_ptr",
                          "typeString": "struct SignatureRequest memory"
                        }
                      ],
                      "id": 42149,
                      "name": "buildRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        37053,
                        37074,
                        37093,
                        37112,
                        37129,
                        37146,
                        37172,
                        37196,
                        37218,
                        37240,
                        37260,
                        37280,
                        37305,
                        37328,
                        37348,
                        37368,
                        37386,
                        37404,
                        37432,
                        37458,
                        37481,
                        37504,
                        37525,
                        37546
                      ],
                      "referencedDeclaration": 37305,
                      "src": "6413:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr_$_t_struct$_SignatureRequest_$40012_memory_ptr_$returns$_t_struct$_SismoConnectRequest_$39966_memory_ptr_$",
                        "typeString": "function (struct AuthRequest memory[] memory,struct ClaimRequest memory[] memory,struct SignatureRequest memory) view returns (struct SismoConnectRequest memory)"
                      }
                    },
                    "id": 42158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "6434:5:58",
                      "6462:6:58",
                      "6492:9:58"
                    ],
                    "names": [
                      "auths",
                      "claims",
                      "signature"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6413:143:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SismoConnectRequest_$39966_memory_ptr",
                      "typeString": "struct SismoConnectRequest memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6376:180:58"
                },
                {
                  "assignments": [
                    42162
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42162,
                      "mutability": "mutable",
                      "name": "result",
                      "nameLocation": "6597:6:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42219,
                      "src": "6563:40:58",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SismoConnectVerifiedResult_$40101_memory_ptr",
                        "typeString": "struct SismoConnectVerifiedResult"
                      },
                      "typeName": {
                        "id": 42161,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 42160,
                          "name": "SismoConnectVerifiedResult",
                          "nameLocations": [
                            "6563:26:58"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40101,
                          "src": "6563:26:58"
                        },
                        "referencedDeclaration": 40101,
                        "src": "6563:26:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SismoConnectVerifiedResult_$40101_storage_ptr",
                          "typeString": "struct SismoConnectVerifiedResult"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42172,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42165,
                        "name": "response",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42115,
                        "src": "6653:8:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SismoConnectResponse_$40069_memory_ptr",
                          "typeString": "struct SismoConnectResponse memory"
                        }
                      },
                      {
                        "id": 42166,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42148,
                        "src": "6678:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SismoConnectRequest_$39966_memory_ptr",
                          "typeString": "struct SismoConnectRequest memory"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 42167,
                            "name": "_zkBadgeConfigs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41860,
                            "src": "6701:15:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                              "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                            }
                          },
                          "id": 42169,
                          "indexExpression": {
                            "id": 42168,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42110,
                            "src": "6717:7:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6701:24:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                            "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                          }
                        },
                        "id": 42170,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6726:6:58",
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43074,
                        "src": "6701:31:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SismoConnectConfig_$39972_storage",
                          "typeString": "struct SismoConnectConfig storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SismoConnectResponse_$40069_memory_ptr",
                          "typeString": "struct SismoConnectResponse memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SismoConnectRequest_$39966_memory_ptr",
                          "typeString": "struct SismoConnectRequest memory"
                        },
                        {
                          "typeIdentifier": "t_struct$_SismoConnectConfig_$39972_storage",
                          "typeString": "struct SismoConnectConfig storage ref"
                        }
                      ],
                      "expression": {
                        "id": 42163,
                        "name": "_sismoConnectVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34920,
                        "src": "6606:21:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISismoConnectVerifier_$34874",
                          "typeString": "contract ISismoConnectVerifier"
                        }
                      },
                      "id": 42164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6628:6:58",
                      "memberName": "verify",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34868,
                      "src": "6606:28:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_SismoConnectResponse_$40069_memory_ptr_$_t_struct$_SismoConnectRequest_$39966_memory_ptr_$_t_struct$_SismoConnectConfig_$39972_memory_ptr_$returns$_t_struct$_SismoConnectVerifiedResult_$40101_memory_ptr_$",
                        "typeString": "function (struct SismoConnectResponse memory,struct SismoConnectRequest memory,struct SismoConnectConfig memory) external returns (struct SismoConnectVerifiedResult memory)"
                      }
                    },
                    "id": 42171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "6643:8:58",
                      "6669:7:58",
                      "6693:6:58"
                    ],
                    "names": [
                      "response",
                      "request",
                      "config"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "6606:133:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SismoConnectVerifiedResult_$40101_memory_ptr",
                      "typeString": "struct SismoConnectVerifiedResult memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6563:176:58"
                },
                {
                  "assignments": [
                    42174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42174,
                      "mutability": "mutable",
                      "name": "vaultId",
                      "nameLocation": "6754:7:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42219,
                      "src": "6746:15:58",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42173,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6746:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42180,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 42177,
                          "name": "AuthType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40019,
                          "src": "6781:8:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_AuthType_$40019_$",
                            "typeString": "type(enum AuthType)"
                          }
                        },
                        "id": 42178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "6790:5:58",
                        "memberName": "VAULT",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40013,
                        "src": "6781:14:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AuthType_$40019",
                          "typeString": "enum AuthType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_AuthType_$40019",
                          "typeString": "enum AuthType"
                        }
                      ],
                      "expression": {
                        "id": 42175,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42162,
                        "src": "6764:6:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SismoConnectVerifiedResult_$40101_memory_ptr",
                          "typeString": "struct SismoConnectVerifiedResult memory"
                        }
                      },
                      "id": 42176,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6771:9:58",
                      "memberName": "getUserId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39876,
                      "src": "6764:16:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_SismoConnectVerifiedResult_$40101_memory_ptr_$_t_enum$_AuthType_$40019_$returns$_t_uint256_$attached_to$_t_struct$_SismoConnectVerifiedResult_$40101_memory_ptr_$",
                        "typeString": "function (struct SismoConnectVerifiedResult memory,enum AuthType) pure returns (uint256)"
                      }
                    },
                    "id": 42179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6764:32:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6746:50:58"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 42188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 42181,
                            "name": "_zkBadgesData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41867,
                            "src": "6921:13:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref))"
                            }
                          },
                          "id": 42183,
                          "indexExpression": {
                            "id": 42182,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42110,
                            "src": "6935:7:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6921:22:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$",
                            "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref)"
                          }
                        },
                        "id": 42185,
                        "indexExpression": {
                          "id": 42184,
                          "name": "vaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42174,
                          "src": "6944:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6921:31:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZKBadgeData_$43096_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeData storage ref"
                        }
                      },
                      "id": 42186,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6953:9:58",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43095,
                      "src": "6921:41:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 42187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6966:1:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6921:46:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42195,
                  "nodeType": "IfStatement",
                  "src": "6917:116:58",
                  "trueBody": {
                    "id": 42194,
                    "nodeType": "Block",
                    "src": "6969:64:58",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 42190,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42110,
                              "src": "7009:7:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 42191,
                              "name": "vaultId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42174,
                              "src": "7018:7:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 42189,
                            "name": "VaultIdNotUsedForTokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43130,
                            "src": "6984:24:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256) pure"
                            }
                          },
                          "id": 42192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6984:42:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42193,
                        "nodeType": "RevertStatement",
                        "src": "6977:49:58"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 42207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 42196,
                            "name": "_zkBadgesData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41867,
                            "src": "7105:13:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref))"
                            }
                          },
                          "id": 42199,
                          "indexExpression": {
                            "id": 42197,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42110,
                            "src": "7119:7:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7105:22:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$",
                            "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref)"
                          }
                        },
                        "id": 42200,
                        "indexExpression": {
                          "id": 42198,
                          "name": "vaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42174,
                          "src": "7128:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7105:31:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZKBadgeData_$43096_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeData storage ref"
                        }
                      },
                      "id": 42201,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "7137:9:58",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43095,
                      "src": "7105:41:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 42204,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7156:5:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 42205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7162:9:58",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7156:15:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 42203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7149:6:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 42202,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7149:6:58",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 42206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7149:23:58",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "7105:67:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 42208,
                  "nodeType": "ExpressionStatement",
                  "src": "7105:67:58"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 42210,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42110,
                        "src": "7199:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42211,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42174,
                        "src": "7208:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 42212,
                            "name": "_zkBadgesData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41867,
                            "src": "7217:13:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref))"
                            }
                          },
                          "id": 42214,
                          "indexExpression": {
                            "id": 42213,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42110,
                            "src": "7231:7:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7217:22:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$",
                            "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref)"
                          }
                        },
                        "id": 42216,
                        "indexExpression": {
                          "id": 42215,
                          "name": "vaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42174,
                          "src": "7240:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7217:31:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZKBadgeData_$43096_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeData storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ZKBadgeData_$43096_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeData storage ref"
                        }
                      ],
                      "id": 42209,
                      "name": "ZKBadgeRenewed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43166,
                      "src": "7184:14:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_struct$_ZKBadgeData_$43096_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,struct IZKBadgeMinter.ZKBadgeData memory)"
                      }
                    },
                    "id": 42217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7184:65:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42218,
                  "nodeType": "EmitStatement",
                  "src": "7179:70:58"
                }
              ]
            },
            "functionSelector": "96d75b93",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "renewWithSismoConnect",
            "nameLocation": "5990:21:58",
            "parameters": {
              "id": 42111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42108,
                  "mutability": "mutable",
                  "name": "responseBytes",
                  "nameLocation": "6025:13:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42220,
                  "src": "6012:26:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42107,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6012:5:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42110,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6048:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42220,
                  "src": "6040:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42109,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6040:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6011:45:58"
            },
            "returnParameters": {
              "id": 42112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6066:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42271,
            "nodeType": "FunctionDefinition",
            "src": "8243:546:58",
            "nodes": [],
            "body": {
              "id": 42270,
              "nodeType": "Block",
              "src": "8517:272:58",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 42253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 42245,
                          "name": "_zkBadgeConfigs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41860,
                          "src": "8527:15:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                            "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                          }
                        },
                        "id": 42247,
                        "indexExpression": {
                          "id": 42246,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42239,
                          "src": "8543:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8527:24:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                        }
                      },
                      "id": 42248,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8552:5:58",
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43086,
                      "src": "8527:30:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 42251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8569:1:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 42250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8561:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 42249,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8561:7:58",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 42252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8561:10:58",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8527:44:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42259,
                  "nodeType": "IfStatement",
                  "src": "8523:111:58",
                  "trueBody": {
                    "id": 42258,
                    "nodeType": "Block",
                    "src": "8573:61:58",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 42255,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42239,
                              "src": "8619:7:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 42254,
                            "name": "ZKBadgeConfigAlreadyRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43102,
                            "src": "8588:30:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 42256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8588:39:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42257,
                        "nodeType": "RevertStatement",
                        "src": "8581:46:58"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42261,
                        "name": "appId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42223,
                        "src": "8661:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "id": 42262,
                        "name": "isImpersonationMode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42225,
                        "src": "8674:19:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 42263,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42227,
                        "src": "8701:8:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 42264,
                        "name": "authRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42231,
                        "src": "8717:12:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AuthRequest memory[] memory"
                        }
                      },
                      {
                        "id": 42265,
                        "name": "claimRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42235,
                        "src": "8737:13:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ClaimRequest memory[] memory"
                        }
                      },
                      {
                        "id": 42266,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42237,
                        "src": "8758:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42267,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42239,
                        "src": "8771:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AuthRequest memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ClaimRequest memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42260,
                      "name": "_createZKBadge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42499,
                      "src": "8639:14:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes16_$_t_bool_$_t_string_memory_ptr_$_t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes16,bool,string memory,struct AuthRequest memory[] memory,struct ClaimRequest memory[] memory,address,uint256)"
                      }
                    },
                    "id": 42268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8639:145:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42269,
                  "nodeType": "ExpressionStatement",
                  "src": "8639:145:58"
                }
              ]
            },
            "documentation": {
              "id": 42221,
              "nodeType": "StructuredDocumentation",
              "src": "7258:982:58",
              "text": " @dev Registers a ZK Badge configuration\n The function can only be called by the super admin.\n The config can be registered one time only.\n It is then possible to update the config if you are the owner for this config.\n This config allows to setup:\n - the uri of the ZK Badge\n - the Sismo Connect configuration\n - the auths and claims required to mint the ZK Badge\n - the owner of the ZK Badge configuration\n - the tokenId of the ZK Badge\n @param appId id of the Sismo Connect App from which the proofs are required\n @param isImpersonationMode if True, the ZK Badge can be minted thanks to impersonated proofs\n @param tokenURI uri of the ZK Badge metadata\n @param authRequests list of dataSource ownerships required to mint the ZK Badge\n @param claimRequests list of group memberships required to mint the ZK Badge\n @param owner owner of the ZK Badge configuration\n @param tokenId tokenId of the ZK Badge"
            },
            "functionSelector": "869f023e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 42242,
                    "name": "CONFIG_REGISTRANT_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41850,
                    "src": "8493:22:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 42243,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 42241,
                  "name": "onlyRole",
                  "nameLocations": [
                    "8484:8:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29405,
                  "src": "8484:8:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "8484:32:58"
              }
            ],
            "name": "registerZKBadgeConfig",
            "nameLocation": "8252:21:58",
            "parameters": {
              "id": 42240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42223,
                  "mutability": "mutable",
                  "name": "appId",
                  "nameLocation": "8287:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42271,
                  "src": "8279:13:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 42222,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "8279:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42225,
                  "mutability": "mutable",
                  "name": "isImpersonationMode",
                  "nameLocation": "8303:19:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42271,
                  "src": "8298:24:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42224,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8298:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42227,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nameLocation": "8342:8:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42271,
                  "src": "8328:22:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42226,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8328:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42231,
                  "mutability": "mutable",
                  "name": "authRequests",
                  "nameLocation": "8377:12:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42271,
                  "src": "8356:33:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AuthRequest[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42229,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42228,
                        "name": "AuthRequest",
                        "nameLocations": [
                          "8356:11:58"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 39989,
                        "src": "8356:11:58"
                      },
                      "referencedDeclaration": 39989,
                      "src": "8356:11:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AuthRequest_$39989_storage_ptr",
                        "typeString": "struct AuthRequest"
                      }
                    },
                    "id": 42230,
                    "nodeType": "ArrayTypeName",
                    "src": "8356:13:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_storage_$dyn_storage_ptr",
                      "typeString": "struct AuthRequest[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42235,
                  "mutability": "mutable",
                  "name": "claimRequests",
                  "nameLocation": "8417:13:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42271,
                  "src": "8395:35:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ClaimRequest[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42233,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42232,
                        "name": "ClaimRequest",
                        "nameLocations": [
                          "8395:12:58"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40005,
                        "src": "8395:12:58"
                      },
                      "referencedDeclaration": 40005,
                      "src": "8395:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClaimRequest_$40005_storage_ptr",
                        "typeString": "struct ClaimRequest"
                      }
                    },
                    "id": 42234,
                    "nodeType": "ArrayTypeName",
                    "src": "8395:14:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_storage_$dyn_storage_ptr",
                      "typeString": "struct ClaimRequest[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42237,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "8444:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42271,
                  "src": "8436:13:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42236,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8436:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42239,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8463:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42271,
                  "src": "8455:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8455:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8273:201:58"
            },
            "returnParameters": {
              "id": 42244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8517:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42331,
            "nodeType": "FunctionDefinition",
            "src": "9516:580:58",
            "nodes": [],
            "body": {
              "id": 42330,
              "nodeType": "Block",
              "src": "9755:341:58",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    42294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42294,
                      "mutability": "mutable",
                      "name": "configOwner",
                      "nameLocation": "9769:11:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42330,
                      "src": "9761:19:58",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 42293,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9761:7:58",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42299,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 42295,
                        "name": "_zkBadgeConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41860,
                        "src": "9783:15:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                          "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                        }
                      },
                      "id": 42297,
                      "indexExpression": {
                        "id": 42296,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42290,
                        "src": "9799:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "9783:24:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                        "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                      }
                    },
                    "id": 42298,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9808:5:58",
                    "memberName": "owner",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43086,
                    "src": "9783:30:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9761:52:58"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 42303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42300,
                      "name": "configOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42294,
                      "src": "9823:11:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 42301,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "9838:3:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 42302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9842:6:58",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9838:10:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9823:25:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42312,
                  "nodeType": "IfStatement",
                  "src": "9819:106:58",
                  "trueBody": {
                    "id": 42311,
                    "nodeType": "Block",
                    "src": "9850:75:58",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 42305,
                              "name": "appId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42274,
                              "src": "9887:5:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              }
                            },
                            {
                              "id": 42306,
                              "name": "configOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42294,
                              "src": "9894:11:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 42307,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9907:3:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 42308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9911:6:58",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9907:10:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes16",
                                "typeString": "bytes16"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 42304,
                            "name": "NotZKBadgeConfigOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43110,
                            "src": "9865:21:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_bytes16_$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (bytes16,address,address) pure"
                            }
                          },
                          "id": 42309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9865:53:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42310,
                        "nodeType": "RevertStatement",
                        "src": "9858:60:58"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42314,
                        "name": "appId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42274,
                        "src": "9942:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "id": 42315,
                        "name": "isImpersonationMode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42276,
                        "src": "9949:19:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 42316,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42278,
                        "src": "9970:8:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 42317,
                        "name": "authRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42282,
                        "src": "9980:12:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AuthRequest memory[] memory"
                        }
                      },
                      {
                        "id": 42318,
                        "name": "claimRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42286,
                        "src": "9994:13:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ClaimRequest memory[] memory"
                        }
                      },
                      {
                        "id": 42319,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42288,
                        "src": "10009:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42320,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42290,
                        "src": "10016:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AuthRequest memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ClaimRequest memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42313,
                      "name": "_setZKBadge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42571,
                      "src": "9930:11:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes16_$_t_bool_$_t_string_memory_ptr_$_t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes16,bool,string memory,struct AuthRequest memory[] memory,struct ClaimRequest memory[] memory,address,uint256)"
                      }
                    },
                    "id": 42321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9930:94:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42322,
                  "nodeType": "ExpressionStatement",
                  "src": "9930:94:58"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 42324,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42290,
                        "src": "10057:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 42325,
                          "name": "_zkBadgeConfigs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41860,
                          "src": "10066:15:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                            "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                          }
                        },
                        "id": 42327,
                        "indexExpression": {
                          "id": 42326,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42290,
                          "src": "10082:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10066:24:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                        }
                      ],
                      "id": 42323,
                      "name": "ZKBadgeConfigUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43148,
                      "src": "10036:20:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,struct IZKBadgeMinter.ZKBadgeConfig memory)"
                      }
                    },
                    "id": 42328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10036:55:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42329,
                  "nodeType": "EmitStatement",
                  "src": "10031:60:58"
                }
              ]
            },
            "documentation": {
              "id": 42272,
              "nodeType": "StructuredDocumentation",
              "src": "8793:720:58",
              "text": " @dev Updates a ZK Badge configuration\n The function can only be called by the owner of the ZK Badge configuration.\n This config allows to setup:\n @param appId id of the Sismo Connect App from which the proofs are required\n @param isImpersonationMode if True, the ZK Badge can be minted thanks to impersonated proofs\n @param tokenURI uri of the ZK Badge metadata\n @param authRequests list of dataSource ownerships required to mint the ZK Badge\n @param claimRequests list of group memberships required to mint the ZK Badge\n @param owner owner of the ZK Badge configuration\n @param tokenId tokenId of the ZK Badge\n @notice The tokenId of the ZK Badge cannot be updated"
            },
            "functionSelector": "a75400b3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateZKBadgeConfig",
            "nameLocation": "9525:19:58",
            "parameters": {
              "id": 42291,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42274,
                  "mutability": "mutable",
                  "name": "appId",
                  "nameLocation": "9558:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42331,
                  "src": "9550:13:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 42273,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "9550:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42276,
                  "mutability": "mutable",
                  "name": "isImpersonationMode",
                  "nameLocation": "9574:19:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42331,
                  "src": "9569:24:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42275,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9569:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42278,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nameLocation": "9613:8:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42331,
                  "src": "9599:22:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42277,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9599:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42282,
                  "mutability": "mutable",
                  "name": "authRequests",
                  "nameLocation": "9648:12:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42331,
                  "src": "9627:33:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AuthRequest[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42280,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42279,
                        "name": "AuthRequest",
                        "nameLocations": [
                          "9627:11:58"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 39989,
                        "src": "9627:11:58"
                      },
                      "referencedDeclaration": 39989,
                      "src": "9627:11:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AuthRequest_$39989_storage_ptr",
                        "typeString": "struct AuthRequest"
                      }
                    },
                    "id": 42281,
                    "nodeType": "ArrayTypeName",
                    "src": "9627:13:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_storage_$dyn_storage_ptr",
                      "typeString": "struct AuthRequest[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42286,
                  "mutability": "mutable",
                  "name": "claimRequests",
                  "nameLocation": "9688:13:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42331,
                  "src": "9666:35:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ClaimRequest[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42284,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42283,
                        "name": "ClaimRequest",
                        "nameLocations": [
                          "9666:12:58"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40005,
                        "src": "9666:12:58"
                      },
                      "referencedDeclaration": 40005,
                      "src": "9666:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClaimRequest_$40005_storage_ptr",
                        "typeString": "struct ClaimRequest"
                      }
                    },
                    "id": 42285,
                    "nodeType": "ArrayTypeName",
                    "src": "9666:14:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_storage_$dyn_storage_ptr",
                      "typeString": "struct ClaimRequest[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42288,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "9715:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42331,
                  "src": "9707:13:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9707:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42290,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9734:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42331,
                  "src": "9726:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42289,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9726:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9544:201:58"
            },
            "returnParameters": {
              "id": 42292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9755:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42346,
            "nodeType": "FunctionDefinition",
            "src": "10248:130:58",
            "nodes": [],
            "body": {
              "id": 42345,
              "nodeType": "Block",
              "src": "10333:45:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42342,
                        "name": "newUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42334,
                        "src": "10366:6:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 42341,
                      "name": "_setSismoConnectZKBadgeURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42701,
                      "src": "10339:26:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 42343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10339:34:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42344,
                  "nodeType": "ExpressionStatement",
                  "src": "10339:34:58"
                }
              ]
            },
            "baseFunctions": [
              43210
            ],
            "documentation": {
              "id": 42332,
              "nodeType": "StructuredDocumentation",
              "src": "10100:145:58",
              "text": " @dev Set the URI for Sismo Connect ZK Badges. Can only be called by owner (default admin)\n @param newUri new Sismo Connect URI"
            },
            "functionSelector": "9b642de1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 42338,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29394,
                    "src": "10313:18:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 42339,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 42337,
                  "name": "onlyRole",
                  "nameLocations": [
                    "10304:8:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29405,
                  "src": "10304:8:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "10304:28:58"
              }
            ],
            "name": "setUri",
            "nameLocation": "10257:6:58",
            "overrides": {
              "id": 42336,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10295:8:58"
            },
            "parameters": {
              "id": 42335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42334,
                  "mutability": "mutable",
                  "name": "newUri",
                  "nameLocation": "10278:6:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42346,
                  "src": "10264:20:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42333,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10264:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10263:22:58"
            },
            "returnParameters": {
              "id": 42340,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10333:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42360,
            "nodeType": "FunctionDefinition",
            "src": "10519:114:58",
            "nodes": [],
            "body": {
              "id": 42359,
              "nodeType": "Block",
              "src": "10604:29:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42356,
                        "name": "legacyUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42349,
                        "src": "10618:9:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 42355,
                      "name": "_setURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31237,
                      "src": "10610:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 42357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10610:18:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42358,
                  "nodeType": "ExpressionStatement",
                  "src": "10610:18:58"
                }
              ]
            },
            "documentation": {
              "id": 42347,
              "nodeType": "StructuredDocumentation",
              "src": "10382:134:58",
              "text": " @dev Set the URI for legacy ZK Badges. Can only be called by owner (default admin)\n @param legacyUri new legacy URI"
            },
            "functionSelector": "cdb7e664",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 42352,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29394,
                    "src": "10584:18:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 42353,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 42351,
                  "name": "onlyRole",
                  "nameLocations": [
                    "10575:8:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29405,
                  "src": "10575:8:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "10575:28:58"
              }
            ],
            "name": "setLegacyUri",
            "nameLocation": "10528:12:58",
            "parameters": {
              "id": 42350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42349,
                  "mutability": "mutable",
                  "name": "legacyUri",
                  "nameLocation": "10555:9:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42360,
                  "src": "10541:23:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42348,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10541:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10540:25:58"
            },
            "returnParameters": {
              "id": 42354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10604:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42377,
            "nodeType": "FunctionDefinition",
            "src": "10637:149:58",
            "nodes": [],
            "body": {
              "id": 42376,
              "nodeType": "Block",
              "src": "10729:57:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 42369,
                          "name": "_zkBadgesData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41867,
                          "src": "10742:13:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref))"
                          }
                        },
                        "id": 42371,
                        "indexExpression": {
                          "id": 42370,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42362,
                          "src": "10756:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10742:22:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$",
                          "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref)"
                        }
                      },
                      "id": 42373,
                      "indexExpression": {
                        "id": 42372,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42364,
                        "src": "10765:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10742:31:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZKBadgeData_$43096_storage",
                        "typeString": "struct IZKBadgeMinter.ZKBadgeData storage ref"
                      }
                    },
                    "id": 42374,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "10774:7:58",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43091,
                    "src": "10742:39:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 42368,
                  "id": 42375,
                  "nodeType": "Return",
                  "src": "10735:46:58"
                }
              ]
            },
            "functionSelector": "6bd14dfa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOfVaultId",
            "nameLocation": "10646:16:58",
            "parameters": {
              "id": 42365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42362,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10671:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42377,
                  "src": "10663:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42361,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10663:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42364,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "10688:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42377,
                  "src": "10680:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10680:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10662:34:58"
            },
            "returnParameters": {
              "id": 42368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42367,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42377,
                  "src": "10720:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42366,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10720:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10719:9:58"
            },
            "scope": 42952,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42421,
            "nodeType": "FunctionDefinition",
            "src": "10907:333:58",
            "nodes": [],
            "body": {
              "id": 42420,
              "nodeType": "Block",
              "src": "10991:249:58",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 42388,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42380,
                        "src": "11022:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42387,
                      "name": "_isTokenIdFromLegacy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42691,
                      "src": "11001:20:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) pure returns (bool)"
                      }
                    },
                    "id": 42389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11001:29:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42396,
                  "nodeType": "IfStatement",
                  "src": "10997:77:58",
                  "trueBody": {
                    "id": 42395,
                    "nodeType": "Block",
                    "src": "11032:42:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 42392,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42380,
                              "src": "11059:7:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 42390,
                              "name": "ERC1155",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 31904,
                              "src": "11047:7:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC1155_$31904_$",
                                "typeString": "type(contract ERC1155)"
                              }
                            },
                            "id": 42391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11055:3:58",
                            "memberName": "uri",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30769,
                            "src": "11047:11:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (uint256) view returns (string memory)"
                            }
                          },
                          "id": 42393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11047:20:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 42386,
                        "id": 42394,
                        "nodeType": "Return",
                        "src": "11040:27:58"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "id": 42412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "id": 42400,
                                    "name": "_zkBadgeConfigs",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41860,
                                    "src": "11108:15:58",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                                      "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                                    }
                                  },
                                  "id": 42402,
                                  "indexExpression": {
                                    "id": 42401,
                                    "name": "tokenId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42380,
                                    "src": "11124:7:58",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11108:24:58",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                                    "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                                  }
                                },
                                "id": 42403,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "11133:3:58",
                                "memberName": "uri",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 43076,
                                "src": "11108:28:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 42399,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11102:5:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 42398,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "11102:5:58",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 42404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11102:35:58",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          ],
                          "id": 42397,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "11092:9:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 42405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11092:46:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "",
                                "id": 42409,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11158:2:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                },
                                "value": ""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "id": 42408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11152:5:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 42407,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "11152:5:58",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 42410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11152:9:58",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 42406,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "11142:9:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 42411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11142:20:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "src": "11092:70:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 42414,
                          "name": "_zkBadgeConfigs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41860,
                          "src": "11207:15:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                            "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                          }
                        },
                        "id": 42416,
                        "indexExpression": {
                          "id": 42415,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42380,
                          "src": "11223:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11207:24:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                        }
                      },
                      "id": 42417,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11232:3:58",
                      "memberName": "uri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43076,
                      "src": "11207:28:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "id": 42418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "11092:143:58",
                    "trueExpression": {
                      "id": 42413,
                      "name": "_sismoConnectZKBadgeURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41855,
                      "src": "11173:23:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "functionReturnParameters": 42386,
                  "id": 42419,
                  "nodeType": "Return",
                  "src": "11079:156:58"
                }
              ]
            },
            "baseFunctions": [
              30769
            ],
            "documentation": {
              "id": 42378,
              "nodeType": "StructuredDocumentation",
              "src": "10790:114:58",
              "text": " @dev Returns the uri of a ZK Badge based on its tokenId\n @param tokenId tokenId of the ZK Badge"
            },
            "functionSelector": "0e89341c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "10916:3:58",
            "overrides": {
              "id": 42383,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 42382,
                  "name": "ERC1155",
                  "nameLocations": [
                    "10958:7:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31904,
                  "src": "10958:7:58"
                }
              ],
              "src": "10949:17:58"
            },
            "parameters": {
              "id": 42381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42380,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10928:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42421,
                  "src": "10920:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42379,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10920:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10919:17:58"
            },
            "returnParameters": {
              "id": 42386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42385,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42421,
                  "src": "10976:13:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42384,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10976:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10975:15:58"
            },
            "scope": 42952,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42435,
            "nodeType": "FunctionDefinition",
            "src": "11364:130:58",
            "nodes": [],
            "body": {
              "id": 42434,
              "nodeType": "Block",
              "src": "11452:42:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 42430,
                      "name": "_zkBadgeConfigs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41860,
                      "src": "11465:15:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                        "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                      }
                    },
                    "id": 42432,
                    "indexExpression": {
                      "id": 42431,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42424,
                      "src": "11481:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11465:24:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                      "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                    }
                  },
                  "functionReturnParameters": 42429,
                  "id": 42433,
                  "nodeType": "Return",
                  "src": "11458:31:58"
                }
              ]
            },
            "documentation": {
              "id": 42422,
              "nodeType": "StructuredDocumentation",
              "src": "11244:117:58",
              "text": " @dev Returns the ZK Badge configuration based on its appId\n @param tokenId tokenId of the ZK Badge"
            },
            "functionSelector": "ac6c3e69",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getZKBadgeConfig",
            "nameLocation": "11373:16:58",
            "parameters": {
              "id": 42425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42424,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11398:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42435,
                  "src": "11390:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42423,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11390:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11389:17:58"
            },
            "returnParameters": {
              "id": 42429,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42428,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42435,
                  "src": "11430:20:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_memory_ptr",
                    "typeString": "struct IZKBadgeMinter.ZKBadgeConfig"
                  },
                  "typeName": {
                    "id": 42427,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42426,
                      "name": "ZKBadgeConfig",
                      "nameLocations": [
                        "11430:13:58"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43089,
                      "src": "11430:13:58"
                    },
                    "referencedDeclaration": 43089,
                    "src": "11430:13:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage_ptr",
                      "typeString": "struct IZKBadgeMinter.ZKBadgeConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11429:22:58"
            },
            "scope": 42952,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42455,
            "nodeType": "FunctionDefinition",
            "src": "11709:160:58",
            "nodes": [],
            "body": {
              "id": 42454,
              "nodeType": "Block",
              "src": "11805:64:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 42452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 42445,
                            "name": "_zkBadgesData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41867,
                            "src": "11818:13:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$_$",
                              "typeString": "mapping(uint256 => mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref))"
                            }
                          },
                          "id": 42447,
                          "indexExpression": {
                            "id": 42446,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42438,
                            "src": "11832:7:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11818:22:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$",
                            "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref)"
                          }
                        },
                        "id": 42449,
                        "indexExpression": {
                          "id": 42448,
                          "name": "vaultId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42440,
                          "src": "11841:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11818:31:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZKBadgeData_$43096_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeData storage ref"
                        }
                      },
                      "id": 42450,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11850:9:58",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43095,
                      "src": "11818:41:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 42451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11863:1:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11818:46:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 42444,
                  "id": 42453,
                  "nodeType": "Return",
                  "src": "11811:53:58"
                }
              ]
            },
            "documentation": {
              "id": 42436,
              "nodeType": "StructuredDocumentation",
              "src": "11498:208:58",
              "text": " @dev Returns if weither or not a vaultId has minted a specific ZK Badge\n @param tokenId tokenId of the ZK Badge\n @param vaultId anonymous identifier of a user's vault for a specific app"
            },
            "functionSelector": "dc0ec5e8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isVaultIdUsedForTokenId",
            "nameLocation": "11718:23:58",
            "parameters": {
              "id": 42441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42438,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11750:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42455,
                  "src": "11742:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11742:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42440,
                  "mutability": "mutable",
                  "name": "vaultId",
                  "nameLocation": "11767:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42455,
                  "src": "11759:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42439,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11759:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11741:34:58"
            },
            "returnParameters": {
              "id": 42444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42443,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42455,
                  "src": "11799:4:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42442,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11799:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11798:6:58"
            },
            "scope": 42952,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42499,
            "nodeType": "FunctionDefinition",
            "src": "12481:435:58",
            "nodes": [],
            "body": {
              "id": 42498,
              "nodeType": "Block",
              "src": "12715:201:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42478,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42474,
                        "src": "12733:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42477,
                      "name": "_setTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42678,
                      "src": "12721:11:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 42479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12721:20:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42480,
                  "nodeType": "ExpressionStatement",
                  "src": "12721:20:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42482,
                        "name": "appId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42458,
                        "src": "12759:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        }
                      },
                      {
                        "id": 42483,
                        "name": "isImpersonationMode",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42460,
                        "src": "12766:19:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 42484,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42462,
                        "src": "12787:8:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 42485,
                        "name": "authRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42466,
                        "src": "12797:12:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AuthRequest memory[] memory"
                        }
                      },
                      {
                        "id": 42486,
                        "name": "claimRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42470,
                        "src": "12811:13:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ClaimRequest memory[] memory"
                        }
                      },
                      {
                        "id": 42487,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42472,
                        "src": "12826:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42488,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42474,
                        "src": "12833:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes16",
                          "typeString": "bytes16"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AuthRequest memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ClaimRequest memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42481,
                      "name": "_setZKBadge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42571,
                      "src": "12747:11:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes16_$_t_bool_$_t_string_memory_ptr_$_t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr_$_t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes16,bool,string memory,struct AuthRequest memory[] memory,struct ClaimRequest memory[] memory,address,uint256)"
                      }
                    },
                    "id": 42489,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12747:94:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42490,
                  "nodeType": "ExpressionStatement",
                  "src": "12747:94:58"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 42492,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42474,
                        "src": "12877:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 42493,
                          "name": "_zkBadgeConfigs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41860,
                          "src": "12886:15:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                            "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                          }
                        },
                        "id": 42495,
                        "indexExpression": {
                          "id": 42494,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42474,
                          "src": "12902:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "12886:24:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                        }
                      ],
                      "id": 42491,
                      "name": "ZKBadgeConfigRegistered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43141,
                      "src": "12853:23:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,struct IZKBadgeMinter.ZKBadgeConfig memory)"
                      }
                    },
                    "id": 42496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12853:58:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42497,
                  "nodeType": "EmitStatement",
                  "src": "12848:63:58"
                }
              ]
            },
            "documentation": {
              "id": 42456,
              "nodeType": "StructuredDocumentation",
              "src": "11873:605:58",
              "text": " @dev Creates a ZK Badge configuration\n @param appId id of the Sismo Connect App from which the proofs are required\n @param isImpersonationMode if True, the ZK Badge can be minted thanks to impersonated proofs\n @param tokenURI uri of the ZK Badge metadata\n @param authRequests list of dataSource ownerships required to mint the ZK Badge\n @param claimRequests list of group memberships required to mint the ZK Badge\n @param owner owner of the ZK Badge configuration\n @param tokenId tokenId of the ZK Badge\n @notice The tokenId of the ZK Badge cannot be updated"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createZKBadge",
            "nameLocation": "12490:14:58",
            "parameters": {
              "id": 42475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42458,
                  "mutability": "mutable",
                  "name": "appId",
                  "nameLocation": "12518:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42499,
                  "src": "12510:13:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 42457,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "12510:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42460,
                  "mutability": "mutable",
                  "name": "isImpersonationMode",
                  "nameLocation": "12534:19:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42499,
                  "src": "12529:24:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42459,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "12529:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42462,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nameLocation": "12573:8:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42499,
                  "src": "12559:22:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42461,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "12559:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42466,
                  "mutability": "mutable",
                  "name": "authRequests",
                  "nameLocation": "12608:12:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42499,
                  "src": "12587:33:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AuthRequest[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42464,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42463,
                        "name": "AuthRequest",
                        "nameLocations": [
                          "12587:11:58"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 39989,
                        "src": "12587:11:58"
                      },
                      "referencedDeclaration": 39989,
                      "src": "12587:11:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AuthRequest_$39989_storage_ptr",
                        "typeString": "struct AuthRequest"
                      }
                    },
                    "id": 42465,
                    "nodeType": "ArrayTypeName",
                    "src": "12587:13:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_storage_$dyn_storage_ptr",
                      "typeString": "struct AuthRequest[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42470,
                  "mutability": "mutable",
                  "name": "claimRequests",
                  "nameLocation": "12648:13:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42499,
                  "src": "12626:35:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ClaimRequest[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42468,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42467,
                        "name": "ClaimRequest",
                        "nameLocations": [
                          "12626:12:58"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40005,
                        "src": "12626:12:58"
                      },
                      "referencedDeclaration": 40005,
                      "src": "12626:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClaimRequest_$40005_storage_ptr",
                        "typeString": "struct ClaimRequest"
                      }
                    },
                    "id": 42469,
                    "nodeType": "ArrayTypeName",
                    "src": "12626:14:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_storage_$dyn_storage_ptr",
                      "typeString": "struct ClaimRequest[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42472,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "12675:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42499,
                  "src": "12667:13:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12667:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42474,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12694:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42499,
                  "src": "12686:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12686:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12504:201:58"
            },
            "returnParameters": {
              "id": 42476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12715:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 42571,
            "nodeType": "FunctionDefinition",
            "src": "13484:593:58",
            "nodes": [],
            "body": {
              "id": 42570,
              "nodeType": "Block",
              "src": "13715:362:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 42527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 42521,
                            "name": "_zkBadgeConfigs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41860,
                            "src": "13721:15:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                              "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                            }
                          },
                          "id": 42523,
                          "indexExpression": {
                            "id": 42522,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42518,
                            "src": "13737:7:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13721:24:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                            "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                          }
                        },
                        "id": 42524,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13746:6:58",
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43074,
                        "src": "13721:31:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SismoConnectConfig_$39972_storage",
                          "typeString": "struct SismoConnectConfig storage ref"
                        }
                      },
                      "id": 42525,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13753:5:58",
                      "memberName": "appId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39968,
                      "src": "13721:37:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42526,
                      "name": "appId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42502,
                      "src": "13761:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes16",
                        "typeString": "bytes16"
                      }
                    },
                    "src": "13721:45:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "id": 42528,
                  "nodeType": "ExpressionStatement",
                  "src": "13721:45:58"
                },
                {
                  "expression": {
                    "id": 42536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 42529,
                              "name": "_zkBadgeConfigs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41860,
                              "src": "13772:15:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                                "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                              }
                            },
                            "id": 42531,
                            "indexExpression": {
                              "id": 42530,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42518,
                              "src": "13788:7:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13772:24:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                              "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                            }
                          },
                          "id": 42532,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13797:6:58",
                          "memberName": "config",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43074,
                          "src": "13772:31:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SismoConnectConfig_$39972_storage",
                            "typeString": "struct SismoConnectConfig storage ref"
                          }
                        },
                        "id": 42533,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13804:5:58",
                        "memberName": "vault",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39971,
                        "src": "13772:37:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_VaultConfig_$39975_storage",
                          "typeString": "struct VaultConfig storage ref"
                        }
                      },
                      "id": 42534,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13810:19:58",
                      "memberName": "isImpersonationMode",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39974,
                      "src": "13772:57:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42535,
                      "name": "isImpersonationMode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42504,
                      "src": "13832:19:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13772:79:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42537,
                  "nodeType": "ExpressionStatement",
                  "src": "13772:79:58"
                },
                {
                  "expression": {
                    "id": 42543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 42538,
                          "name": "_zkBadgeConfigs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41860,
                          "src": "13857:15:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                            "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                          }
                        },
                        "id": 42540,
                        "indexExpression": {
                          "id": 42539,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42518,
                          "src": "13873:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13857:24:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                        }
                      },
                      "id": 42541,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13882:3:58",
                      "memberName": "uri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43076,
                      "src": "13857:28:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42542,
                      "name": "tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42506,
                      "src": "13888:8:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "13857:39:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 42544,
                  "nodeType": "ExpressionStatement",
                  "src": "13857:39:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42546,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42518,
                        "src": "13912:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42547,
                        "name": "authRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42510,
                        "src": "13921:12:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AuthRequest memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AuthRequest memory[] memory"
                        }
                      ],
                      "id": 42545,
                      "name": "_setAuths",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42613,
                      "src": "13902:9:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,struct AuthRequest memory[] memory)"
                      }
                    },
                    "id": 42548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13902:32:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42549,
                  "nodeType": "ExpressionStatement",
                  "src": "13902:32:58"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42551,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42518,
                        "src": "13951:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42552,
                        "name": "claimRequests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42514,
                        "src": "13960:13:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ClaimRequest memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ClaimRequest memory[] memory"
                        }
                      ],
                      "id": 42550,
                      "name": "_setClaims",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42655,
                      "src": "13940:10:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,struct ClaimRequest memory[] memory)"
                      }
                    },
                    "id": 42553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13940:34:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42554,
                  "nodeType": "ExpressionStatement",
                  "src": "13940:34:58"
                },
                {
                  "expression": {
                    "id": 42568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 42555,
                          "name": "_zkBadgeConfigs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41860,
                          "src": "13980:15:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                            "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                          }
                        },
                        "id": 42557,
                        "indexExpression": {
                          "id": 42556,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42518,
                          "src": "13996:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13980:24:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                        }
                      },
                      "id": 42558,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "14005:5:58",
                      "memberName": "owner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43086,
                      "src": "13980:30:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 42564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42559,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42516,
                          "src": "14013:5:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 42562,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14030:1:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 42561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14022:7:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 42560,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14022:7:58",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 42563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14022:10:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14013:19:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "id": 42566,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42516,
                        "src": "14067:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 42567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "14013:59:58",
                      "trueExpression": {
                        "id": 42565,
                        "name": "DEFAULT_ZK_BADGE_CONFIG_OWNER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41853,
                        "src": "14035:29:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13980:92:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42569,
                  "nodeType": "ExpressionStatement",
                  "src": "13980:92:58"
                }
              ]
            },
            "documentation": {
              "id": 42500,
              "nodeType": "StructuredDocumentation",
              "src": "12920:561:58",
              "text": " @dev Updates a ZK Badge configuration\n @param appId id of the Sismo Connect App from which the proofs are required\n @param isImpersonationMode if True, the ZK Badge can be minted thanks to impersonated proofs\n @param tokenURI uri of the ZK Badge metadata\n @param authRequests list of dataSource ownerships required to mint the ZK Badge\n @param claimRequests list of group memberships required to mint the ZK Badge\n @param owner owner of the ZK Badge configuration\n @notice The tokenId of the ZK Badge cannot be updated"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setZKBadge",
            "nameLocation": "13493:11:58",
            "parameters": {
              "id": 42519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42502,
                  "mutability": "mutable",
                  "name": "appId",
                  "nameLocation": "13518:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42571,
                  "src": "13510:13:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes16",
                    "typeString": "bytes16"
                  },
                  "typeName": {
                    "id": 42501,
                    "name": "bytes16",
                    "nodeType": "ElementaryTypeName",
                    "src": "13510:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes16",
                      "typeString": "bytes16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42504,
                  "mutability": "mutable",
                  "name": "isImpersonationMode",
                  "nameLocation": "13534:19:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42571,
                  "src": "13529:24:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42503,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13529:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42506,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nameLocation": "13573:8:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42571,
                  "src": "13559:22:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42505,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13559:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42510,
                  "mutability": "mutable",
                  "name": "authRequests",
                  "nameLocation": "13608:12:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42571,
                  "src": "13587:33:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AuthRequest[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42508,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42507,
                        "name": "AuthRequest",
                        "nameLocations": [
                          "13587:11:58"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 39989,
                        "src": "13587:11:58"
                      },
                      "referencedDeclaration": 39989,
                      "src": "13587:11:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AuthRequest_$39989_storage_ptr",
                        "typeString": "struct AuthRequest"
                      }
                    },
                    "id": 42509,
                    "nodeType": "ArrayTypeName",
                    "src": "13587:13:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_storage_$dyn_storage_ptr",
                      "typeString": "struct AuthRequest[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42514,
                  "mutability": "mutable",
                  "name": "claimRequests",
                  "nameLocation": "13648:13:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42571,
                  "src": "13626:35:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ClaimRequest[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42512,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42511,
                        "name": "ClaimRequest",
                        "nameLocations": [
                          "13626:12:58"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40005,
                        "src": "13626:12:58"
                      },
                      "referencedDeclaration": 40005,
                      "src": "13626:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClaimRequest_$40005_storage_ptr",
                        "typeString": "struct ClaimRequest"
                      }
                    },
                    "id": 42513,
                    "nodeType": "ArrayTypeName",
                    "src": "13626:14:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_storage_$dyn_storage_ptr",
                      "typeString": "struct ClaimRequest[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42516,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "13675:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42571,
                  "src": "13667:13:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13667:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42518,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13694:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42571,
                  "src": "13686:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42517,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13686:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13504:201:58"
            },
            "returnParameters": {
              "id": 42520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13715:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 42613,
            "nodeType": "FunctionDefinition",
            "src": "14268:249:58",
            "nodes": [],
            "body": {
              "id": 42612,
              "nodeType": "Block",
              "src": "14340:177:58",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    42585
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42585,
                      "mutability": "mutable",
                      "name": "_authRequests",
                      "nameLocation": "14368:13:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42612,
                      "src": "14346:35:58",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_storage_$dyn_storage_ptr",
                        "typeString": "struct AuthRequest[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 42583,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 42582,
                            "name": "AuthRequest",
                            "nameLocations": [
                              "14346:11:58"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39989,
                            "src": "14346:11:58"
                          },
                          "referencedDeclaration": 39989,
                          "src": "14346:11:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AuthRequest_$39989_storage_ptr",
                            "typeString": "struct AuthRequest"
                          }
                        },
                        "id": 42584,
                        "nodeType": "ArrayTypeName",
                        "src": "14346:13:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_storage_$dyn_storage_ptr",
                          "typeString": "struct AuthRequest[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42590,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 42586,
                        "name": "_zkBadgeConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41860,
                        "src": "14384:15:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                          "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                        }
                      },
                      "id": 42588,
                      "indexExpression": {
                        "id": 42587,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42574,
                        "src": "14400:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14384:24:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                        "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                      }
                    },
                    "id": 42589,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14409:12:58",
                    "memberName": "authRequests",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43080,
                    "src": "14384:37:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_storage_$dyn_storage",
                      "typeString": "struct AuthRequest storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14346:75:58"
                },
                {
                  "body": {
                    "id": 42610,
                    "nodeType": "Block",
                    "src": "14470:43:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 42605,
                                "name": "auths",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42578,
                                "src": "14497:5:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct AuthRequest memory[] memory"
                                }
                              },
                              "id": 42607,
                              "indexExpression": {
                                "id": 42606,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42592,
                                "src": "14503:1:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14497:8:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AuthRequest_$39989_memory_ptr",
                                "typeString": "struct AuthRequest memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_AuthRequest_$39989_memory_ptr",
                                "typeString": "struct AuthRequest memory"
                              }
                            ],
                            "expression": {
                              "id": 42602,
                              "name": "_authRequests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42585,
                              "src": "14478:13:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_storage_$dyn_storage_ptr",
                                "typeString": "struct AuthRequest storage ref[] storage pointer"
                              }
                            },
                            "id": 42604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14492:4:58",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "14478:18:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_AuthRequest_$39989_storage_$dyn_storage_ptr_$_t_struct$_AuthRequest_$39989_storage_$returns$__$attached_to$_t_array$_t_struct$_AuthRequest_$39989_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct AuthRequest storage ref[] storage pointer,struct AuthRequest storage ref)"
                            }
                          },
                          "id": 42608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14478:28:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42609,
                        "nodeType": "ExpressionStatement",
                        "src": "14478:28:58"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42595,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42592,
                      "src": "14447:1:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 42596,
                        "name": "auths",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42578,
                        "src": "14451:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AuthRequest memory[] memory"
                        }
                      },
                      "id": 42597,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14457:6:58",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14451:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14447:16:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42611,
                  "initializationExpression": {
                    "assignments": [
                      42592
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 42592,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14440:1:58",
                        "nodeType": "VariableDeclaration",
                        "scope": 42611,
                        "src": "14432:9:58",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 42591,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14432:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 42594,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 42593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14444:1:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14432:13:58"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 42600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14465:3:58",
                      "subExpression": {
                        "id": 42599,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42592,
                        "src": "14465:1:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 42601,
                    "nodeType": "ExpressionStatement",
                    "src": "14465:3:58"
                  },
                  "nodeType": "ForStatement",
                  "src": "14427:86:58"
                }
              ]
            },
            "documentation": {
              "id": 42572,
              "nodeType": "StructuredDocumentation",
              "src": "14081:184:58",
              "text": " @dev Sets the auths of a ZK Badge configuration\n @param tokenId tokenId of the ZK Badge\n @param auths list of dataSource ownerships required to mint the ZK Badge"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setAuths",
            "nameLocation": "14277:9:58",
            "parameters": {
              "id": 42579,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42574,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14295:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42613,
                  "src": "14287:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42573,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14287:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42578,
                  "mutability": "mutable",
                  "name": "auths",
                  "nameLocation": "14325:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42613,
                  "src": "14304:26:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AuthRequest[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42576,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42575,
                        "name": "AuthRequest",
                        "nameLocations": [
                          "14304:11:58"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 39989,
                        "src": "14304:11:58"
                      },
                      "referencedDeclaration": 39989,
                      "src": "14304:11:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AuthRequest_$39989_storage_ptr",
                        "typeString": "struct AuthRequest"
                      }
                    },
                    "id": 42577,
                    "nodeType": "ArrayTypeName",
                    "src": "14304:13:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AuthRequest_$39989_storage_$dyn_storage_ptr",
                      "typeString": "struct AuthRequest[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14286:45:58"
            },
            "returnParameters": {
              "id": 42580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14340:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 42655,
            "nodeType": "FunctionDefinition",
            "src": "14706:258:58",
            "nodes": [],
            "body": {
              "id": 42654,
              "nodeType": "Block",
              "src": "14781:183:58",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    42627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42627,
                      "mutability": "mutable",
                      "name": "_claimRequests",
                      "nameLocation": "14810:14:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42654,
                      "src": "14787:37:58",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_storage_$dyn_storage_ptr",
                        "typeString": "struct ClaimRequest[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 42625,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 42624,
                            "name": "ClaimRequest",
                            "nameLocations": [
                              "14787:12:58"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 40005,
                            "src": "14787:12:58"
                          },
                          "referencedDeclaration": 40005,
                          "src": "14787:12:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ClaimRequest_$40005_storage_ptr",
                            "typeString": "struct ClaimRequest"
                          }
                        },
                        "id": 42626,
                        "nodeType": "ArrayTypeName",
                        "src": "14787:14:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_storage_$dyn_storage_ptr",
                          "typeString": "struct ClaimRequest[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42632,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 42628,
                        "name": "_zkBadgeConfigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41860,
                        "src": "14827:15:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                          "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                        }
                      },
                      "id": 42630,
                      "indexExpression": {
                        "id": 42629,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42616,
                        "src": "14843:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "14827:24:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                        "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                      }
                    },
                    "id": 42631,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "14852:13:58",
                    "memberName": "claimRequests",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43084,
                    "src": "14827:38:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_storage_$dyn_storage",
                      "typeString": "struct ClaimRequest storage ref[] storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14787:78:58"
                },
                {
                  "body": {
                    "id": 42652,
                    "nodeType": "Block",
                    "src": "14915:45:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 42647,
                                "name": "claims",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42620,
                                "src": "14943:6:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct ClaimRequest memory[] memory"
                                }
                              },
                              "id": 42649,
                              "indexExpression": {
                                "id": 42648,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42634,
                                "src": "14950:1:58",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "14943:9:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimRequest_$40005_memory_ptr",
                                "typeString": "struct ClaimRequest memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_ClaimRequest_$40005_memory_ptr",
                                "typeString": "struct ClaimRequest memory"
                              }
                            ],
                            "expression": {
                              "id": 42644,
                              "name": "_claimRequests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42627,
                              "src": "14923:14:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_storage_$dyn_storage_ptr",
                                "typeString": "struct ClaimRequest storage ref[] storage pointer"
                              }
                            },
                            "id": 42646,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "14938:4:58",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "14923:19:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_ClaimRequest_$40005_storage_$dyn_storage_ptr_$_t_struct$_ClaimRequest_$40005_storage_$returns$__$attached_to$_t_array$_t_struct$_ClaimRequest_$40005_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct ClaimRequest storage ref[] storage pointer,struct ClaimRequest storage ref)"
                            }
                          },
                          "id": 42650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14923:30:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42651,
                        "nodeType": "ExpressionStatement",
                        "src": "14923:30:58"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42637,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42634,
                      "src": "14891:1:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 42638,
                        "name": "claims",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42620,
                        "src": "14895:6:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct ClaimRequest memory[] memory"
                        }
                      },
                      "id": 42639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "14902:6:58",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "14895:13:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14891:17:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42653,
                  "initializationExpression": {
                    "assignments": [
                      42634
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 42634,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "14884:1:58",
                        "nodeType": "VariableDeclaration",
                        "scope": 42653,
                        "src": "14876:9:58",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 42633,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "14876:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 42636,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 42635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14888:1:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "14876:13:58"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 42642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "14910:3:58",
                      "subExpression": {
                        "id": 42641,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42634,
                        "src": "14910:1:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 42643,
                    "nodeType": "ExpressionStatement",
                    "src": "14910:3:58"
                  },
                  "nodeType": "ForStatement",
                  "src": "14871:89:58"
                }
              ]
            },
            "documentation": {
              "id": 42614,
              "nodeType": "StructuredDocumentation",
              "src": "14521:182:58",
              "text": " @dev Sets the claims of a ZK Badge configuration\n @param tokenId tokenId of the ZK Badge\n @param claims list of group memberships required to mint the ZK Badge"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setClaims",
            "nameLocation": "14715:10:58",
            "parameters": {
              "id": 42621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42616,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14734:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42655,
                  "src": "14726:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42615,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14726:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42620,
                  "mutability": "mutable",
                  "name": "claims",
                  "nameLocation": "14765:6:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42655,
                  "src": "14743:28:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct ClaimRequest[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42618,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42617,
                        "name": "ClaimRequest",
                        "nameLocations": [
                          "14743:12:58"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40005,
                        "src": "14743:12:58"
                      },
                      "referencedDeclaration": 40005,
                      "src": "14743:12:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClaimRequest_$40005_storage_ptr",
                        "typeString": "struct ClaimRequest"
                      }
                    },
                    "id": 42619,
                    "nodeType": "ArrayTypeName",
                    "src": "14743:14:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_ClaimRequest_$40005_storage_$dyn_storage_ptr",
                      "typeString": "struct ClaimRequest[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14725:47:58"
            },
            "returnParameters": {
              "id": 42622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14781:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 42678,
            "nodeType": "FunctionDefinition",
            "src": "15143:199:58",
            "nodes": [],
            "body": {
              "id": 42677,
              "nodeType": "Block",
              "src": "15189:153:58",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 42662,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42658,
                        "src": "15220:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42661,
                      "name": "_isTokenIdFromLegacy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42691,
                      "src": "15199:20:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) pure returns (bool)"
                      }
                    },
                    "id": 42663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15199:29:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42669,
                  "nodeType": "IfStatement",
                  "src": "15195:94:58",
                  "trueBody": {
                    "id": 42668,
                    "nodeType": "Block",
                    "src": "15230:59:58",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 42665,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42658,
                              "src": "15274:7:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 42664,
                            "name": "TokenIdAlreadyUsedFromLegacy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43134,
                            "src": "15245:28:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) pure"
                            }
                          },
                          "id": 42666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15245:37:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42667,
                        "nodeType": "RevertStatement",
                        "src": "15238:44:58"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 42675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 42670,
                          "name": "_zkBadgeConfigs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41860,
                          "src": "15295:15:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeConfig_$43089_storage_$",
                            "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeConfig storage ref)"
                          }
                        },
                        "id": 42672,
                        "indexExpression": {
                          "id": 42671,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42658,
                          "src": "15311:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "15295:24:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ZKBadgeConfig_$43089_storage",
                          "typeString": "struct IZKBadgeMinter.ZKBadgeConfig storage ref"
                        }
                      },
                      "id": 42673,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "15320:7:58",
                      "memberName": "tokenId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43088,
                      "src": "15295:32:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42674,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42658,
                      "src": "15330:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15295:42:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42676,
                  "nodeType": "ExpressionStatement",
                  "src": "15295:42:58"
                }
              ]
            },
            "documentation": {
              "id": 42656,
              "nodeType": "StructuredDocumentation",
              "src": "14968:172:58",
              "text": " @dev Sets the tokenId of a ZK Badge configuration\n @param tokenId tokenId of the ZK Badge\n @notice The tokenId should not be used by another ZK Badge"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTokenId",
            "nameLocation": "15152:11:58",
            "parameters": {
              "id": 42659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42658,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15172:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42678,
                  "src": "15164:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42657,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15164:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15163:17:58"
            },
            "returnParameters": {
              "id": 42660,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15189:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 42691,
            "nodeType": "FunctionDefinition",
            "src": "15475:480:58",
            "nodes": [],
            "body": {
              "id": 42690,
              "nodeType": "Block",
              "src": "15550:405:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42686,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42681,
                      "src": "15930:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "34305f3030305f303030",
                      "id": 42687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15940:10:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_40000000_by_1",
                        "typeString": "int_const 40000000"
                      },
                      "value": "40_000_000"
                    },
                    "src": "15930:20:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 42685,
                  "id": 42689,
                  "nodeType": "Return",
                  "src": "15923:27:58"
                }
              ]
            },
            "documentation": {
              "id": 42679,
              "nodeType": "StructuredDocumentation",
              "src": "15346:126:58",
              "text": " @dev Returns if a tokenId is already reserved for a legacy ZK Badge\n @param tokenId tokenId of the ZK Badge"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isTokenIdFromLegacy",
            "nameLocation": "15484:20:58",
            "parameters": {
              "id": 42682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42681,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "15513:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42691,
                  "src": "15505:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15505:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15504:17:58"
            },
            "returnParameters": {
              "id": 42685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42684,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42691,
                  "src": "15544:4:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42683,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "15544:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15543:6:58"
            },
            "scope": 42952,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          },
          {
            "id": 42701,
            "nodeType": "FunctionDefinition",
            "src": "15959:110:58",
            "nodes": [],
            "body": {
              "id": 42700,
              "nodeType": "Block",
              "src": "16026:43:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 42698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42696,
                      "name": "_sismoConnectZKBadgeURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41855,
                      "src": "16032:23:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42697,
                      "name": "newURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42693,
                      "src": "16058:6:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "16032:32:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 42699,
                  "nodeType": "ExpressionStatement",
                  "src": "16032:32:58"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setSismoConnectZKBadgeURI",
            "nameLocation": "15968:26:58",
            "parameters": {
              "id": 42694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42693,
                  "mutability": "mutable",
                  "name": "newURI",
                  "nameLocation": "16009:6:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42701,
                  "src": "15995:20:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 42692,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "15995:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15994:22:58"
            },
            "returnParameters": {
              "id": 42695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16026:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 42741,
            "nodeType": "FunctionDefinition",
            "src": "16463:366:58",
            "nodes": [],
            "body": {
              "id": 42740,
              "nodeType": "Block",
              "src": "16600:229:58",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 42715,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42706,
                        "src": "16631:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42714,
                      "name": "_isTokenIdFromLegacy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42691,
                      "src": "16610:20:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) pure returns (bool)"
                      }
                    },
                    "id": 42716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16610:29:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42724,
                  "nodeType": "IfStatement",
                  "src": "16606:116:58",
                  "trueBody": {
                    "id": 42723,
                    "nodeType": "Block",
                    "src": "16641:81:58",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 42719,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42706,
                              "src": "16698:7:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 42720,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42704,
                              "src": "16707:7:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 42717,
                              "name": "_attestationsRegistry",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41840,
                              "src": "16656:21:58",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IAttestationsRegistry_$43027",
                                "typeString": "contract IAttestationsRegistry"
                              }
                            },
                            "id": 42718,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "16678:19:58",
                            "memberName": "getAttestationValue",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 42983,
                            "src": "16656:41:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (uint256,address) view external returns (uint256)"
                            }
                          },
                          "id": 42721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16656:59:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 42713,
                        "id": 42722,
                        "nodeType": "Return",
                        "src": "16649:66:58"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    42726
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42726,
                      "mutability": "mutable",
                      "name": "vaultId",
                      "nameLocation": "16735:7:58",
                      "nodeType": "VariableDeclaration",
                      "scope": 42740,
                      "src": "16727:15:58",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42725,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16727:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42732,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 42727,
                        "name": "_vaultIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41873,
                        "src": "16745:9:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(uint256 => mapping(address => uint256))"
                        }
                      },
                      "id": 42729,
                      "indexExpression": {
                        "id": 42728,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42706,
                        "src": "16755:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16745:18:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 42731,
                    "indexExpression": {
                      "id": 42730,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42704,
                      "src": "16764:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "16745:27:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16727:45:58"
                },
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 42733,
                          "name": "_zkBadgesData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41867,
                          "src": "16785:13:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$_$",
                            "typeString": "mapping(uint256 => mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref))"
                          }
                        },
                        "id": 42735,
                        "indexExpression": {
                          "id": 42734,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42706,
                          "src": "16799:7:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "16785:22:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ZKBadgeData_$43096_storage_$",
                          "typeString": "mapping(uint256 => struct IZKBadgeMinter.ZKBadgeData storage ref)"
                        }
                      },
                      "id": 42737,
                      "indexExpression": {
                        "id": 42736,
                        "name": "vaultId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42726,
                        "src": "16808:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "16785:31:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ZKBadgeData_$43096_storage",
                        "typeString": "struct IZKBadgeMinter.ZKBadgeData storage ref"
                      }
                    },
                    "id": 42738,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "16817:7:58",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43091,
                    "src": "16785:39:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 42713,
                  "id": 42739,
                  "nodeType": "Return",
                  "src": "16778:46:58"
                }
              ]
            },
            "baseFunctions": [
              30797,
              43184
            ],
            "documentation": {
              "id": 42702,
              "nodeType": "StructuredDocumentation",
              "src": "16073:387:58",
              "text": " For all legacy tokenIds, the balance of a user is equal to the value of the underlying attestation (attestationCollectionId == badgeId)\n For ZK Badges V2 tokenIds, the balance is equal to the amount of token owned by a vaultId\n @param account Address to check badge balance (= value of attestation)\n @param tokenId Badge Id to check (= attestationCollectionId)"
            },
            "functionSelector": "00fdd58e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "16472:9:58",
            "overrides": {
              "id": 42710,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 42708,
                  "name": "ERC1155",
                  "nameLocations": [
                    "16557:7:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31904,
                  "src": "16557:7:58"
                },
                {
                  "id": 42709,
                  "name": "IZKBadgeMinter",
                  "nameLocations": [
                    "16566:14:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43269,
                  "src": "16566:14:58"
                }
              ],
              "src": "16548:33:58"
            },
            "parameters": {
              "id": 42707,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42704,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "16495:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42741,
                  "src": "16487:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16487:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42706,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "16516:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42741,
                  "src": "16508:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42705,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16508:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16481:46:58"
            },
            "returnParameters": {
              "id": 42713,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42712,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42741,
                  "src": "16591:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42711,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16591:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16590:9:58"
            },
            "scope": 42952,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 42754,
            "nodeType": "FunctionDefinition",
            "src": "17203:144:58",
            "nodes": [],
            "body": {
              "id": 42753,
              "nodeType": "Block",
              "src": "17305:42:58",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 42750,
                      "name": "BadgesNonTransferrable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43098,
                      "src": "17318:22:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 42751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17318:24:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42752,
                  "nodeType": "RevertStatement",
                  "src": "17311:31:58"
                }
              ]
            },
            "baseFunctions": [
              30878
            ],
            "documentation": {
              "id": 42742,
              "nodeType": "StructuredDocumentation",
              "src": "17129:71:58",
              "text": " @dev Reverts, this is a non transferable ERC115 contract"
            },
            "functionSelector": "a22cb465",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "17212:17:58",
            "overrides": {
              "id": 42748,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "17296:8:58"
            },
            "parameters": {
              "id": 42747,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42744,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42754,
                  "src": "17235:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42743,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17235:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42746,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42754,
                  "src": "17260:4:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42745,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17260:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17229:51:58"
            },
            "returnParameters": {
              "id": 42749,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17305:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 42769,
            "nodeType": "FunctionDefinition",
            "src": "17425:165:58",
            "nodes": [],
            "body": {
              "id": 42768,
              "nodeType": "Block",
              "src": "17548:42:58",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 42765,
                      "name": "BadgesNonTransferrable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43098,
                      "src": "17561:22:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 42766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17561:24:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42767,
                  "nodeType": "RevertStatement",
                  "src": "17554:31:58"
                }
              ]
            },
            "baseFunctions": [
              30896
            ],
            "documentation": {
              "id": 42755,
              "nodeType": "StructuredDocumentation",
              "src": "17351:71:58",
              "text": " @dev Reverts, this is a non transferable ERC115 contract"
            },
            "functionSelector": "e985e9c5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "17434:16:58",
            "overrides": {
              "id": 42761,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "17524:8:58"
            },
            "parameters": {
              "id": 42760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42757,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42769,
                  "src": "17456:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17456:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42759,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42769,
                  "src": "17480:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42758,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17480:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17450:53:58"
            },
            "returnParameters": {
              "id": 42764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42763,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42769,
                  "src": "17542:4:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42762,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17542:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17541:6:58"
            },
            "scope": 42952,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 42795,
            "nodeType": "FunctionDefinition",
            "src": "18135:226:58",
            "nodes": [],
            "body": {
              "id": 42794,
              "nodeType": "Block",
              "src": "18300:61:58",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 42787,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42772,
                        "src": "18326:8:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42788,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42774,
                        "src": "18336:4:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42789,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42776,
                        "src": "18342:2:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42790,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42778,
                        "src": "18346:2:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42791,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42780,
                        "src": "18350:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42786,
                      "name": "TransferSingle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31923,
                      "src": "18311:14:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 42792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18311:45:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42793,
                  "nodeType": "EmitStatement",
                  "src": "18306:50:58"
                }
              ]
            },
            "baseFunctions": [
              43198
            ],
            "documentation": {
              "id": 42770,
              "nodeType": "StructuredDocumentation",
              "src": "17594:538:58",
              "text": " @dev Emits a TransferSingle event, so subgraphs and other off-chain apps relying on events can see badge minting/burning\n can only be called by address having the EVENT_TRIGGERER_ROLE (attestations registry address)\n @param operator who is calling the TransferEvent\n @param from address(0) if minting, address of the badge holder if burning\n @param to address of the badge holder is minting, address(0) if burning\n @param id badgeId for which to trigger the event\n @param value minted/burned balance"
            },
            "functionSelector": "710b3096",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 42783,
                    "name": "EVENT_TRIGGERER_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41845,
                    "src": "18278:20:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 42784,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 42782,
                  "name": "onlyRole",
                  "nameLocations": [
                    "18269:8:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29405,
                  "src": "18269:8:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "18269:30:58"
              }
            ],
            "name": "triggerTransferEvent",
            "nameLocation": "18144:20:58",
            "parameters": {
              "id": 42781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42772,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "18178:8:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42795,
                  "src": "18170:16:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42771,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18170:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42774,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "18200:4:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42795,
                  "src": "18192:12:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18192:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42776,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "18218:2:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42795,
                  "src": "18210:10:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42775,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18210:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42778,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "18234:2:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42795,
                  "src": "18226:10:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18226:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42780,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "18250:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42795,
                  "src": "18242:13:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18242:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18164:95:58"
            },
            "returnParameters": {
              "id": 42785,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18300:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42812,
            "nodeType": "FunctionDefinition",
            "src": "18537:196:58",
            "nodes": [],
            "body": {
              "id": 42811,
              "nodeType": "Block",
              "src": "18655:78:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 42809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42805,
                      "name": "_attestationsRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41840,
                      "src": "18661:21:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAttestationsRegistry_$43027",
                        "typeString": "contract IAttestationsRegistry"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 42807,
                          "name": "attestationsRegistry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42798,
                          "src": "18707:20:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 42806,
                        "name": "IAttestationsRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 43027,
                        "src": "18685:21:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IAttestationsRegistry_$43027_$",
                          "typeString": "type(contract IAttestationsRegistry)"
                        }
                      },
                      "id": 42808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18685:43:58",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IAttestationsRegistry_$43027",
                        "typeString": "contract IAttestationsRegistry"
                      }
                    },
                    "src": "18661:67:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IAttestationsRegistry_$43027",
                      "typeString": "contract IAttestationsRegistry"
                    }
                  },
                  "id": 42810,
                  "nodeType": "ExpressionStatement",
                  "src": "18661:67:58"
                }
              ]
            },
            "baseFunctions": [
              43204
            ],
            "documentation": {
              "id": 42796,
              "nodeType": "StructuredDocumentation",
              "src": "18365:169:58",
              "text": " @dev Set the attestations registry address. Can only be called by owner (default admin)\n @param attestationsRegistry new attestations registry address"
            },
            "functionSelector": "b3c1cb21",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 42802,
                    "name": "DEFAULT_ADMIN_ROLE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 29394,
                    "src": "18635:18:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 42803,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 42801,
                  "name": "onlyRole",
                  "nameLocations": [
                    "18626:8:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29405,
                  "src": "18626:8:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "18626:28:58"
              }
            ],
            "name": "setAttestationsRegistry",
            "nameLocation": "18546:23:58",
            "overrides": {
              "id": 42800,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18617:8:58"
            },
            "parameters": {
              "id": 42799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42798,
                  "mutability": "mutable",
                  "name": "attestationsRegistry",
                  "nameLocation": "18583:20:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42812,
                  "src": "18575:28:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42797,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18575:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18569:38:58"
            },
            "returnParameters": {
              "id": 42804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18655:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42825,
            "nodeType": "FunctionDefinition",
            "src": "18795:124:58",
            "nodes": [],
            "body": {
              "id": 42824,
              "nodeType": "Block",
              "src": "18871:48:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42821,
                        "name": "_attestationsRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41840,
                        "src": "18892:21:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAttestationsRegistry_$43027",
                          "typeString": "contract IAttestationsRegistry"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IAttestationsRegistry_$43027",
                          "typeString": "contract IAttestationsRegistry"
                        }
                      ],
                      "id": 42820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "18884:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 42819,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "18884:7:58",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 42822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18884:30:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 42818,
                  "id": 42823,
                  "nodeType": "Return",
                  "src": "18877:37:58"
                }
              ]
            },
            "baseFunctions": [
              43216
            ],
            "documentation": {
              "id": 42813,
              "nodeType": "StructuredDocumentation",
              "src": "18737:55:58",
              "text": " @dev Getter of the attestations registry"
            },
            "functionSelector": "730cb7d5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAttestationsRegistry",
            "nameLocation": "18804:23:58",
            "overrides": {
              "id": 42815,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "18844:8:58"
            },
            "parameters": {
              "id": 42814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18827:2:58"
            },
            "returnParameters": {
              "id": 42818,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42817,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42825,
                  "src": "18862:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42816,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18862:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18861:9:58"
            },
            "scope": 42952,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42842,
            "nodeType": "FunctionDefinition",
            "src": "19082:158:58",
            "nodes": [],
            "body": {
              "id": 42841,
              "nodeType": "Block",
              "src": "19167:73:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42837,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42830,
                        "src": "19223:2:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42838,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42828,
                        "src": "19227:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42835,
                        "name": "_attestationsRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41840,
                        "src": "19180:21:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAttestationsRegistry_$43027",
                          "typeString": "contract IAttestationsRegistry"
                        }
                      },
                      "id": 42836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19202:20:58",
                      "memberName": "getAttestationIssuer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43003,
                      "src": "19180:42:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_address_$",
                        "typeString": "function (uint256,address) view external returns (address)"
                      }
                    },
                    "id": 42839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19180:55:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 42834,
                  "id": 42840,
                  "nodeType": "Return",
                  "src": "19173:62:58"
                }
              ]
            },
            "baseFunctions": [
              43226
            ],
            "documentation": {
              "id": 42826,
              "nodeType": "StructuredDocumentation",
              "src": "18923:156:58",
              "text": " @dev Getter of the badge issuer\n @param account Address that holds the badge\n @param id Badge Id to check (= attestationCollectionId)"
            },
            "functionSelector": "0e064366",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBadgeIssuer",
            "nameLocation": "19091:14:58",
            "parameters": {
              "id": 42831,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42828,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "19114:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42842,
                  "src": "19106:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19106:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42830,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "19131:2:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42842,
                  "src": "19123:10:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42829,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19123:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19105:29:58"
            },
            "returnParameters": {
              "id": 42834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42833,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42842,
                  "src": "19158:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19158:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19157:9:58"
            },
            "scope": 42952,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42859,
            "nodeType": "FunctionDefinition",
            "src": "19406:163:58",
            "nodes": [],
            "body": {
              "id": 42858,
              "nodeType": "Block",
              "src": "19493:76:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42854,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42847,
                        "src": "19552:2:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42855,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42845,
                        "src": "19556:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42852,
                        "name": "_attestationsRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41840,
                        "src": "19506:21:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAttestationsRegistry_$43027",
                          "typeString": "contract IAttestationsRegistry"
                        }
                      },
                      "id": 42853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19528:23:58",
                      "memberName": "getAttestationTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43013,
                      "src": "19506:45:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint32_$",
                        "typeString": "function (uint256,address) view external returns (uint32)"
                      }
                    },
                    "id": 42856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19506:58:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "functionReturnParameters": 42851,
                  "id": 42857,
                  "nodeType": "Return",
                  "src": "19499:65:58"
                }
              ]
            },
            "baseFunctions": [
              43236
            ],
            "documentation": {
              "id": 42843,
              "nodeType": "StructuredDocumentation",
              "src": "19244:159:58",
              "text": " @dev Getter of the badge timestamp\n @param account Address that holds the badge\n @param id Badge Id to check (= attestationCollectionId)"
            },
            "functionSelector": "ff4468c4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBadgeTimestamp",
            "nameLocation": "19415:17:58",
            "parameters": {
              "id": 42848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42845,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "19441:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42859,
                  "src": "19433:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42844,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19433:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42847,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "19458:2:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42859,
                  "src": "19450:10:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19450:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19432:29:58"
            },
            "returnParameters": {
              "id": 42851,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42850,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42859,
                  "src": "19485:6:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 42849,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "19485:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19484:8:58"
            },
            "scope": 42952,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42876,
            "nodeType": "FunctionDefinition",
            "src": "19775:169:58",
            "nodes": [],
            "body": {
              "id": 42875,
              "nodeType": "Block",
              "src": "19868:76:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42871,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42864,
                        "src": "19927:2:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42872,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42862,
                        "src": "19931:7:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42869,
                        "name": "_attestationsRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41840,
                        "src": "19881:21:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAttestationsRegistry_$43027",
                          "typeString": "contract IAttestationsRegistry"
                        }
                      },
                      "id": 42870,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "19903:23:58",
                      "memberName": "getAttestationExtraData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42993,
                      "src": "19881:45:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256,address) view external returns (bytes memory)"
                      }
                    },
                    "id": 42873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19881:58:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 42868,
                  "id": 42874,
                  "nodeType": "Return",
                  "src": "19874:65:58"
                }
              ]
            },
            "baseFunctions": [
              43246
            ],
            "documentation": {
              "id": 42860,
              "nodeType": "StructuredDocumentation",
              "src": "19573:199:58",
              "text": " @dev Getter of the badge extra data (it can store nullifier and burnCount)\n @param account Address that holds the badge\n @param id Badge Id to check (= attestationCollectionId)"
            },
            "functionSelector": "3e1f3c27",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBadgeExtraData",
            "nameLocation": "19784:17:58",
            "parameters": {
              "id": 42865,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42862,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "19810:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42876,
                  "src": "19802:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19802:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42864,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "19827:2:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42876,
                  "src": "19819:10:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42863,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19819:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19801:29:58"
            },
            "returnParameters": {
              "id": 42868,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42867,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42876,
                  "src": "19854:12:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42866,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "19854:5:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19853:14:58"
            },
            "scope": 42952,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42893,
            "nodeType": "FunctionDefinition",
            "src": "20122:183:58",
            "nodes": [],
            "body": {
              "id": 42892,
              "nodeType": "Block",
              "src": "20212:93:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42888,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42879,
                        "src": "20290:2:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42889,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42881,
                        "src": "20294:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 42886,
                        "name": "_attestationsRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41840,
                        "src": "20225:21:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAttestationsRegistry_$43027",
                          "typeString": "contract IAttestationsRegistry"
                        }
                      },
                      "id": 42887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20247:42:58",
                      "memberName": "getAttributeValueForAttestationsCollection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43039,
                      "src": "20225:64:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$_t_uint8_$returns$_t_uint8_$",
                        "typeString": "function (uint256,uint8) view external returns (uint8)"
                      }
                    },
                    "id": 42890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20225:75:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 42885,
                  "id": 42891,
                  "nodeType": "Return",
                  "src": "20218:82:58"
                }
              ]
            },
            "baseFunctions": [
              43256
            ],
            "documentation": {
              "id": 42877,
              "nodeType": "StructuredDocumentation",
              "src": "19948:171:58",
              "text": " @dev Getter of the value of a specific badge attribute\n @param id Badge Id to check (= attestationCollectionId)\n @param index Index of the attribute"
            },
            "functionSelector": "aed8c6bc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAttributeValueForBadge",
            "nameLocation": "20131:25:58",
            "parameters": {
              "id": 42882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42879,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "20165:2:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42893,
                  "src": "20157:10:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42878,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20157:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42881,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "20175:5:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42893,
                  "src": "20169:11:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 42880,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "20169:5:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20156:25:58"
            },
            "returnParameters": {
              "id": 42885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42884,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42893,
                  "src": "20205:5:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 42883,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "20205:5:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20204:7:58"
            },
            "scope": 42952,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42911,
            "nodeType": "FunctionDefinition",
            "src": "20461:218:58",
            "nodes": [],
            "body": {
              "id": 42910,
              "nodeType": "Block",
              "src": "20583:96:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42907,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42896,
                        "src": "20671:2:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 42905,
                        "name": "_attestationsRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41840,
                        "src": "20596:21:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IAttestationsRegistry_$43027",
                          "typeString": "contract IAttestationsRegistry"
                        }
                      },
                      "id": 42906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20618:52:58",
                      "memberName": "getAttributesNamesAndValuesForAttestationsCollection",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43062,
                      "src": "20596:74:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (bytes32[] memory,uint8[] memory)"
                      }
                    },
                    "id": 42908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20596:78:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_uint8_$dyn_memory_ptr_$",
                      "typeString": "tuple(bytes32[] memory,uint8[] memory)"
                    }
                  },
                  "functionReturnParameters": 42904,
                  "id": 42909,
                  "nodeType": "Return",
                  "src": "20589:85:58"
                }
              ]
            },
            "baseFunctions": [
              43268
            ],
            "documentation": {
              "id": 42894,
              "nodeType": "StructuredDocumentation",
              "src": "20309:149:58",
              "text": " @dev Getter of all badge attributes and their values for a specific badge\n @param id Badge Id to check (= attestationCollectionId)"
            },
            "functionSelector": "e37ffe7c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAttributesNamesAndValuesForBadge",
            "nameLocation": "20470:35:58",
            "parameters": {
              "id": 42897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42896,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "20519:2:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42911,
                  "src": "20511:10:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20511:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20505:20:58"
            },
            "returnParameters": {
              "id": 42904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42900,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42911,
                  "src": "20549:16:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42898,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "20549:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 42899,
                    "nodeType": "ArrayTypeName",
                    "src": "20549:9:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42903,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42911,
                  "src": "20567:14:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint8_$dyn_memory_ptr",
                    "typeString": "uint8[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42901,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "20567:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "id": 42902,
                    "nodeType": "ArrayTypeName",
                    "src": "20567:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint8_$dyn_storage_ptr",
                      "typeString": "uint8[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20548:34:58"
            },
            "scope": 42952,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42928,
            "nodeType": "FunctionDefinition",
            "src": "20712:177:58",
            "nodes": [],
            "body": {
              "id": 42927,
              "nodeType": "Block",
              "src": "20835:54:58",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42924,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42914,
                        "src": "20872:11:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 42922,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "20848:5:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ZKBadgeMinter_$42952_$",
                          "typeString": "type(contract super ZKBadgeMinter)"
                        }
                      },
                      "id": 42923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "20854:17:58",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30757,
                      "src": "20848:23:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 42925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20848:36:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 42921,
                  "id": 42926,
                  "nodeType": "Return",
                  "src": "20841:43:58"
                }
              ]
            },
            "baseFunctions": [
              29427,
              30757
            ],
            "documentation": {
              "id": 42912,
              "nodeType": "StructuredDocumentation",
              "src": "20683:26:58",
              "text": " @dev ERC165"
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "20721:17:58",
            "overrides": {
              "id": 42918,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 42916,
                  "name": "AccessControl",
                  "nameLocations": [
                    "20796:13:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29682,
                  "src": "20796:13:58"
                },
                {
                  "id": 42917,
                  "name": "ERC1155",
                  "nameLocations": [
                    "20811:7:58"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31904,
                  "src": "20811:7:58"
                }
              ],
              "src": "20787:32:58"
            },
            "parameters": {
              "id": 42915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42914,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "20751:11:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 42928,
                  "src": "20744:18:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 42913,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "20744:6:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20738:28:58"
            },
            "returnParameters": {
              "id": 42921,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42920,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42928,
                  "src": "20829:4:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42919,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20829:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20828:6:58"
            },
            "scope": 42952,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 42951,
            "nodeType": "FunctionDefinition",
            "src": "20967:254:58",
            "nodes": [],
            "body": {
              "id": 42950,
              "nodeType": "Block",
              "src": "21179:42:58",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 42947,
                      "name": "BadgesNonTransferrable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43098,
                      "src": "21192:22:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 42948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21192:24:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42949,
                  "nodeType": "RevertStatement",
                  "src": "21185:31:58"
                }
              ]
            },
            "baseFunctions": [
              31728
            ],
            "documentation": {
              "id": 42929,
              "nodeType": "StructuredDocumentation",
              "src": "20893:71:58",
              "text": " @dev Reverts, this is a non transferable ERC115 contract"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "20976:20:58",
            "overrides": {
              "id": 42945,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "21170:8:58"
            },
            "parameters": {
              "id": 42944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42931,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42951,
                  "src": "21002:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21002:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42933,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42951,
                  "src": "21027:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21027:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42935,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42951,
                  "src": "21048:7:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42934,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21048:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42938,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42951,
                  "src": "21067:16:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42936,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21067:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 42937,
                    "nodeType": "ArrayTypeName",
                    "src": "21067:9:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42941,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42951,
                  "src": "21095:16:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42939,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21095:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 42940,
                    "nodeType": "ArrayTypeName",
                    "src": "21095:9:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42943,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42951,
                  "src": "21128:12:58",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42942,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21128:5:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20996:156:58"
            },
            "returnParameters": {
              "id": 42946,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21179:0:58"
            },
            "scope": 42952,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 41821,
              "name": "IZKBadgeMinter",
              "nameLocations": [
                "834:14:58"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43269,
              "src": "834:14:58"
            },
            "id": 41822,
            "nodeType": "InheritanceSpecifier",
            "src": "834:14:58"
          },
          {
            "baseName": {
              "id": 41823,
              "name": "Initializable",
              "nameLocations": [
                "850:13:58"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30681,
              "src": "850:13:58"
            },
            "id": 41824,
            "nodeType": "InheritanceSpecifier",
            "src": "850:13:58"
          },
          {
            "baseName": {
              "id": 41825,
              "name": "AccessControl",
              "nameLocations": [
                "865:13:58"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29682,
              "src": "865:13:58"
            },
            "id": 41826,
            "nodeType": "InheritanceSpecifier",
            "src": "865:13:58"
          },
          {
            "baseName": {
              "id": 41827,
              "name": "ERC1155",
              "nameLocations": [
                "880:7:58"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31904,
              "src": "880:7:58"
            },
            "id": 41828,
            "nodeType": "InheritanceSpecifier",
            "src": "880:7:58"
          },
          {
            "baseName": {
              "id": 41829,
              "name": "SismoConnect",
              "nameLocations": [
                "889:12:58"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 37558,
              "src": "889:12:58"
            },
            "id": 41830,
            "nodeType": "InheritanceSpecifier",
            "src": "889:12:58"
          }
        ],
        "canonicalName": "ZKBadgeMinter",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 41820,
          "nodeType": "StructuredDocumentation",
          "src": "454:353:58",
          "text": " @title ZK Badge Minter contract\n @author Sismo\n @notice This contract is an upgrade of the previous Badges contract.\n It allows to mint ERC1155 ZK Badges based on proofs made through Sismo Connect.\n The Legacy behavior of this contract is still functioning, but it is now only possible to mint ZK Badges based on Sismo Connect proofs."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          42952,
          37558,
          31904,
          32082,
          32026,
          29682,
          32797,
          32809,
          29755,
          32434,
          30681,
          43269
        ],
        "name": "ZKBadgeMinter",
        "nameLocation": "817:13:58",
        "scope": 42953,
        "usedErrors": [
          39831,
          43098,
          43102,
          43110,
          43116,
          43124,
          43130,
          43134
        ],
        "usedEvents": [
          29694,
          29703,
          29712,
          30527,
          31923,
          31938,
          31947,
          31954,
          43141,
          43148,
          43157,
          43166
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 58
}